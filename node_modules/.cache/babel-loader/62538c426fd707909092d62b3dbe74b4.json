{"ast":null,"code":"var _jsxFileName = \"/home/haan/application-web/touch31_app/src/components/Pages/YourselfMeasures.js\";\n\n/*\n *\n *  *  Copyright (C) Thirty One, Inc - All Rights Reserved\n *  *  * Unauthorized copying of this file, via any medium is strictly prohibited\n *  *  * Proprietary and confidential\n *  *  * Written by Thirty One <thirtyoneparis@gmail.com>, 2020\n *  *\n *\n */\nimport React, { useState, useEffect, forwardRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Page from '../Page';\nimport { Grid, Paper, ButtonBase, Button, Avatar, Card, Box, CardContent, Icon, CardHeader, IconButton } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { get_measures, get_measure, get_user } from '../tools/ApiCalls';\nimport Webcam from \"react-webcam\";\nimport * as tf from '@tensorflow/tfjs';\nimport * as mobilenet from '@tensorflow-models/posenet';\nimport * as bodypix from \"@tensorflow-models/body-pix\";\nconst MIN_KEYPOINT_SCORE = 0.7;\nconst P = {\n  background: -1,\n  left_face: 0,\n  right_face: 1,\n  left_upper_arm_front: 2,\n  left_upper_arm_back: 3,\n  right_upper_arm_front: 4,\n  right_upper_arm_back: 5,\n  left_lower_arm_front: 6,\n  left_lower_arm_back: 7,\n  right_lower_arm_front: 8,\n  right_lower_arm_back: 9,\n  left_hand: 10,\n  right_hand: 11,\n  torso_front: 12,\n  torso_back: 13,\n  left_upper_leg_front: 14,\n  left_upper_leg_back: 15,\n  right_upper_leg_front: 16,\n  right_upper_leg_back: 17,\n  left_lower_leg_front: 18,\n  left_lower_leg_back: 19,\n  right_lower_leg_front: 20,\n  right_lower_leg_back: 21,\n  left_feet: 22,\n  right_feet: 23\n};\nconst useStyles = makeStyles(theme => ({\n  OwnBar: {\n    marginBottom: theme.spacing(5)\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\"\n  },\n  camContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"relative\"\n  },\n  containerItem: {\n    position: \"absolute\"\n  }\n}));\nexport default function YourselfMeasures() {\n  const classes = useStyles();\n  const videoConstraints = {\n    width: 1280,\n    height: 720,\n    facingMode: \"user\",\n    transform: \"scaleX(-1)\"\n  };\n  const videoRef = React.createRef();\n  const canvasRef = React.createRef();\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    const webCamPromise = navigator.mediaDevices.getUserMedia({\n      audio: false,\n      video: {\n        facingMode: \"user\"\n      }\n    }).then(stream => {\n      window.stream = stream;\n      videoRef.current.srcObject = stream;\n      return new Promise((resolve, reject) => {\n        videoRef.current.onloadedmetadata = () => {\n          resolve();\n        };\n      });\n    });\n    const modelPromise = bodypix.load({\n      architecture: 'MobileNetV1',\n      outputStride: 16,\n      multiplier: 0.5,\n      quantBytes: 2,\n      inputResolution: videoConstraints,\n      internalResolution: \"high\"\n    });\n    Promise.all([modelPromise, webCamPromise]).then(values => {\n      detectFrame(videoRef.current, values[0]);\n    }).catch(error => {\n      console.error(error);\n    });\n\n    function detectFrame(video, model) {\n      model.segmentPersonParts(video).then(prediction => {\n        renderPredictions(prediction);\n        requestAnimationFrame(() => {\n          detectFrame(video, model);\n        });\n      });\n    }\n\n    ;\n\n    function drawPoint(ctx, y, x, r, color) {\n      ctx.beginPath();\n      ctx.arc(x, y, r, 0, 2 * Math.PI);\n      ctx.fillStyle = color;\n      ctx.fill();\n    }\n\n    function renderPredictions(prediction) {\n      const ctx = canvasRef.current.getContext(\"2d\");\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      const coloredPartImage = bodypix.toColoredPartMask(prediction);\n      const opacity = 0.7;\n      const flipHorizontal = false;\n      const maskBlurAmount = 0;\n      /*bodypix.drawMask(\n      \tcanvasRef, img, coloredPartImage, opacity, maskBlurAmount,\n      \tflipHorizontal,10.0);*/\n\n      if (prediction.allPoses.length > 0) {\n        const keypoints = prediction.allPoses[0].keypoints.filter(k => k.score > MIN_KEYPOINT_SCORE).map((k, i) => {\n          return k;\n        });\n\n        if (keypoints.length == 17) {\n          if (takingFront) {\n            processingFrontBody(prediction, prediction.allPoses, ctx);\n          }\n        }\n\n        for (let i = 0; i <= 16; i++) {\n          drawPoint(ctx, prediction.allPoses[0].keypoints[i].position.y, prediction.allPoses[0].keypoints[i].position.x, 3, 'white');\n        }\n      }\n    }\n\n    async function processingFrontBody(segmentation, keyPoints, ctx) {\n      let headPosition = {\n        x: -1,\n        y: -1\n      };\n      let bodyMatrix = segmentation.data;\n      let bodyPixels = {\n        insideLegs: {\n          x: 0,\n          y: 0\n        },\n        shoulders: {\n          xRight: {\n            x: 0,\n            y: 0\n          },\n          xLeft: {\n            x: 0,\n            y: 0\n          }\n        },\n        hips: {\n          xRight: {\n            x: 0,\n            y: 0\n          },\n          xLeft: {\n            x: 0,\n            y: 0\n          }\n        },\n        breast: {\n          Right: {\n            x: 0,\n            y: 0\n          },\n          Left: {\n            x: 0,\n            y: 0\n          }\n        }\n      };\n      let hipsMinMax = keyPoints[0].keypoints[11].position.y > keyPoints[0].keypoints[12].position.y ? {\n        min: keyPoints[0].keypoints[12].position.y,\n        max: keyPoints[0].keypoints[11].position.y\n      } : {\n        min: keyPoints[0].keypoints[11].position.y,\n        max: keyPoints[0].keypoints[12].position.y\n      };\n      let ycenterShoulder = (keyPoints[0].keypoints[5].position.y + keyPoints[0].keypoints[6].position.y) / 2;\n      let ycenterHips = (keyPoints[0].keypoints[11].position.y + keyPoints[0].keypoints[12].position.y) / 2;\n      let ybreast = (ycenterHips + ycenterShoulder) / 2;\n      let y = 0;\n      let x = 0;\n      let width = Number(segmentation.width);\n      let height = Number(segmentation.height);\n\n      for (let i = 0; i < height * width; ++i) {\n        y = Math.trunc(i / width);\n        x = i - y * width;\n        /**\n         * POSITION TO CALCULATE HEIGHT IN PIXEL (SCALING)\n         */\n\n        if (headPosition.x === -1 && (bodyMatrix[i] === P.left_face || bodyMatrix[i] === P.right_face)) {\n          headPosition = {\n            x: x,\n            y: y\n          };\n        }\n        /**\n         * BREAST CALCULATION\n         */\n\n\n        if (bodyMatrix[i] === P.torso_front && (bodyPixels.breast.Left.x === 0 || bodyPixels.breast.Left.x < x) && y < ybreast + 1 && y > ybreast - 1) bodyPixels.breast.Right = {\n          x: x,\n          y: y\n        };\n        if (bodyMatrix[i] === P.torso_front && (bodyPixels.breast.Left.x === 0 || bodyPixels.breast.Left.x > x) && y < ybreast + 1 && y > ybreast - 1) bodyPixels.breast.Left = {\n          x: x,\n          y: y\n        };\n        /**\n         * HIPS CALCULATION\n         */\n\n        if (bodyMatrix[i] === P.torso_front && (bodyPixels.hips.xRight.x === 0 || bodyPixels.hips.xRight.x > x) && y < hipsMinMax.max && y > hipsMinMax.min) bodyPixels.hips.xRight = {\n          x: x,\n          y: y\n        };else if (bodyMatrix[i] === P.torso_front && (bodyPixels.hips.xLeft.x === 0 || bodyPixels.hips.xLeft.x < x) && y < hipsMinMax.max && y > hipsMinMax.min) bodyPixels.hips.xLeft = {\n          x: x,\n          y: y\n        };\n        /**\n         * LEG CALCULATION\n         */\n\n        if (bodyPixels.insideLegs.x === 0 && (bodyMatrix[i] === P.right_upper_leg_front || bodyMatrix[i] === P.right_upper_leg_back) && (bodyMatrix[i + 1] === P.left_upper_leg_front || bodyMatrix[i + 1] === P.left_upper_leg_back || bodyMatrix[i + 1] === P.background)) bodyPixels.insideLegs = {\n          x: x,\n          y: y\n        };\n        /**\n         * SHOULDER CALCULATION\n         */\n        else if (bodyMatrix[i] === P.torso_front && (bodyPixels.shoulders.xRight.x === 0 || bodyPixels.shoulders.xRight.x > x && y <= keyPoints[0].keypoints[6].position.y)) bodyPixels.shoulders.xRight = {\n            x: x,\n            y: y\n          };else if (bodyMatrix[i] === P.torso_front && (bodyPixels.shoulders.xLeft.x === 0 || bodyPixels.shoulders.xLeft.x < x && y <= keyPoints[0].keypoints[5].position.y)) bodyPixels.shoulders.xLeft = {\n            x: x,\n            y: y\n          };\n      }\n\n      drawPoint(ctx, headPosition.y, headPosition.x, 6, 'yellow');\n      drawPoint(ctx, bodyPixels.hips.xRight.y, bodyPixels.hips.xRight.x, 6, 'red');\n      drawPoint(ctx, bodyPixels.hips.xLeft.y, bodyPixels.hips.xLeft.x, 6, 'red');\n      drawPoint(ctx, bodyPixels.shoulders.xRight.y, bodyPixels.shoulders.xRight.x, 6, 'green');\n      drawPoint(ctx, bodyPixels.shoulders.xLeft.y, bodyPixels.shoulders.xLeft.x, 6, 'green');\n      drawPoint(ctx, bodyPixels.insideLegs.y, bodyPixels.insideLegs.x, 6, 'blue');\n      /*[TODO] a changer*/\n\n      let scaling = 168 / Math.sqrt(Math.pow(keyPoints[0].keypoints[16].position.y - headPosition.y, 2) + Math.pow(keyPoints[0].keypoints[16].position.x - headPosition.x, 2));\n      keyPoints[0].keypoints.push({\n        position: bodyPixels.insideLegs,\n        score: 1\n      });\n      keyPoints[0].keypoints.push({\n        position: bodyPixels.shoulders.xRight,\n        score: 1\n      });\n      measures.legs = calculateLegs(bodyPixels.legs, keyPoints, measures.legs, scaling, {\n        one: 16,\n        two: 14,\n        three: 17\n      });\n      measures.arms = calculateLegs(bodyPixels.arms, keyPoints, measures.arms, scaling, {\n        one: 10,\n        two: 8,\n        three: 18\n      });\n      measures.torso.shoulder = calculateShoulder(bodyPixels.shoulders, keyPoints, measures.torso.shoulder, scaling);\n      measures.torso.chest.width = Math.abs((bodyPixels.breast.Left.x - bodyPixels.breast.Right.x) * scaling);\n      measures.torso.chest.accuracyScore = (keyPoints[0].keypoints[5].score + keyPoints[0].keypoints[6].score + keyPoints[0].keypoints[11].score + keyPoints[0].keypoints[12].score) / 4;\n      measures.hips.length = Math.sqrt(Math.pow(bodyPixels.hips.xRight.y - bodyPixels.hips.xLeft.y, 2) + Math.pow(bodyPixels.hips.xRight.x - bodyPixels.hips.xLeft.x, 2)) * scaling;\n      measures.hips.accuracyScore = (keyPoints[0].keypoints[12].score + keyPoints[0].keypoints[11].score) / 2;\n      return measures;\n    }\n\n    function calculateLegs(bodyPixelParts, keyPoints, partsMeasures, scaling, keys) {\n      //ACCURACY POINTS\n      let accuracyPointsLowerParts = (keyPoints[0].keypoints[keys.one].score + keyPoints[0].keypoints[keys.two].score) / 2;\n      let accuracyPointsUpperParts = (keyPoints[0].keypoints[keys.two].score + keyPoints[0].keypoints[keys.three].score) / 2;\n      let distancePointsLowerParts = 0;\n      let distancePointsUpperParts = 0;\n      distancePointsLowerParts = Math.sqrt(Math.pow(keyPoints[0].keypoints[keys.two].position.y - keyPoints[0].keypoints[keys.one].position.y, 2) + Math.pow(keyPoints[0].keypoints[keys.two].position.x - keyPoints[0].keypoints[keys.one].position.x, 2));\n      distancePointsUpperParts = Math.sqrt(Math.pow(keyPoints[0].keypoints[keys.three].position.y - keyPoints[0].keypoints[keys.two].position.y, 2) + Math.pow(keyPoints[0].keypoints[keys.three].position.x - keyPoints[0].keypoints[keys.two].position.x, 2));\n\n      if ((accuracyPointsUpperParts + accuracyPointsLowerParts) / 2 > partsMeasures.entire.accuracyScore) {\n        partsMeasures.entire.length = (distancePointsUpperParts + distancePointsLowerParts) * scaling;\n        partsMeasures.entire.accuracyScore = (accuracyPointsUpperParts + accuracyPointsUpperParts) / 2;\n      }\n\n      return partsMeasures;\n    }\n\n    function calculateShoulder(bodyPixelsShoulder, keyPoints, shoulderMeasures, scaling) {\n      let averageScore = (keyPoints[0].keypoints[5].score + keyPoints[0].keypoints[6].score) / 2;\n      let leftShoulderDistance = Math.sqrt(Math.pow(bodyPixelsShoulder.xLeft.y - keyPoints[0].keypoints[5].position.y, 2) + Math.pow(bodyPixelsShoulder.xLeft.x - keyPoints[0].keypoints[5].position.x, 2));\n      let rightShoulderDistance = Math.sqrt(Math.pow(bodyPixelsShoulder.xRight.y - keyPoints[0].keypoints[6].position.y, 2) + Math.pow(bodyPixelsShoulder.xRight.x - keyPoints[0].keypoints[6].position.x, 2));\n      let percentLow = rightShoulderDistance * 10 / 100;\n      let percentHigh = rightShoulderDistance * 190 / 100;\n\n      if (leftShoulderDistance > percentLow && leftShoulderDistance < percentHigh && averageScore > shoulderMeasures.accuracyScore) {\n        shoulderMeasures.accuracyScore = averageScore;\n        shoulderMeasures.length = Math.sqrt(Math.pow(bodyPixelsShoulder.xLeft.y - bodyPixelsShoulder.xRight.y, 2) + Math.pow(bodyPixelsShoulder.xLeft.x - bodyPixelsShoulder.xRight.x, 2)) * scaling;\n      }\n\n      return shoulderMeasures;\n    }\n\n    let takingFront = true;\n    let measures = {\n      legs: {\n        entire: {\n          accuracyScore: 0,\n          length: 0\n        },\n        thigh: {\n          accuracyScore: 0,\n          size: 20\n        }\n      },\n      arms: {\n        entire: {\n          accuracyScore: 0,\n          length: 0\n        },\n        biceps: {\n          accuracyScore: 0,\n          size: 20\n        }\n      },\n      torso: {\n        shoulder: {\n          accuracyScore: 0,\n          length: 0\n        },\n        chest: {\n          size: 20,\n          width: 0,\n          depth: 0,\n          accuracyScore: 0\n        }\n      },\n      hips: {\n        accuracyScore: 0,\n        length: 0,\n        size: 0,\n        pelvis: 0\n      }\n    };\n  }\n\n  return (\n    /*#__PURE__*/\n    React.createElement(Page, {\n      title: \"Se mesurer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 3\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 4\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"video\", {\n      className: classes.containerItem,\n      autoPlay: true,\n      playsInline: true,\n      muted: true,\n      ref: videoRef,\n      width: videoConstraints.width,\n      height: videoConstraints.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 5\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(\"canvas\", {\n      className: classes.containerItem,\n      ref: canvasRef,\n      width: videoConstraints.width,\n      height: videoConstraints.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 5\n      }\n    })))\n  );\n}\n;","map":{"version":3,"sources":["/home/haan/application-web/touch31_app/src/components/Pages/YourselfMeasures.js"],"names":["React","useState","useEffect","forwardRef","makeStyles","Page","Grid","Paper","ButtonBase","Button","Avatar","Card","Box","CardContent","Icon","CardHeader","IconButton","Typography","Container","get_measures","get_measure","get_user","Webcam","tf","mobilenet","bodypix","MIN_KEYPOINT_SCORE","P","background","left_face","right_face","left_upper_arm_front","left_upper_arm_back","right_upper_arm_front","right_upper_arm_back","left_lower_arm_front","left_lower_arm_back","right_lower_arm_front","right_lower_arm_back","left_hand","right_hand","torso_front","torso_back","left_upper_leg_front","left_upper_leg_back","right_upper_leg_front","right_upper_leg_back","left_lower_leg_front","left_lower_leg_back","right_lower_leg_front","right_lower_leg_back","left_feet","right_feet","useStyles","theme","OwnBar","marginBottom","spacing","container","display","flexWrap","justifyContent","camContainer","alignItems","position","containerItem","YourselfMeasures","classes","videoConstraints","width","height","facingMode","transform","videoRef","createRef","canvasRef","navigator","mediaDevices","getUserMedia","webCamPromise","audio","video","then","stream","window","current","srcObject","Promise","resolve","reject","onloadedmetadata","modelPromise","load","architecture","outputStride","multiplier","quantBytes","inputResolution","internalResolution","all","values","detectFrame","catch","error","console","model","segmentPersonParts","prediction","renderPredictions","requestAnimationFrame","drawPoint","ctx","y","x","r","color","beginPath","arc","Math","PI","fillStyle","fill","getContext","clearRect","canvas","coloredPartImage","toColoredPartMask","opacity","flipHorizontal","maskBlurAmount","allPoses","length","keypoints","filter","k","score","map","i","takingFront","processingFrontBody","segmentation","keyPoints","headPosition","bodyMatrix","data","bodyPixels","insideLegs","shoulders","xRight","xLeft","hips","breast","Right","Left","hipsMinMax","min","max","ycenterShoulder","ycenterHips","ybreast","Number","trunc","scaling","sqrt","pow","push","measures","legs","calculateLegs","one","two","three","arms","torso","shoulder","calculateShoulder","chest","abs","accuracyScore","bodyPixelParts","partsMeasures","keys","accuracyPointsLowerParts","accuracyPointsUpperParts","distancePointsLowerParts","distancePointsUpperParts","entire","bodyPixelsShoulder","shoulderMeasures","averageScore","leftShoulderDistance","rightShoulderDistance","percentLow","percentHigh","thigh","size","biceps","depth","pelvis"],"mappings":"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","sourcesContent":["/*\n *\n *  *  Copyright (C) Thirty One, Inc - All Rights Reserved\n *  *  * Unauthorized copying of this file, via any medium is strictly prohibited\n *  *  * Proprietary and confidential\n *  *  * Written by Thirty One <thirtyoneparis@gmail.com>, 2020\n *  *\n *\n */\n\nimport React, { useState, useEffect, forwardRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Page from '../Page';\nimport { Grid, Paper, ButtonBase, Button, Avatar, Card, Box, CardContent, Icon, CardHeader, IconButton } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { get_measures, get_measure, get_user } from '../tools/ApiCalls';\nimport Webcam from \"react-webcam\";\nimport * as tf from '@tensorflow/tfjs'\nimport * as mobilenet from '@tensorflow-models/posenet'\nimport * as bodypix from \"@tensorflow-models/body-pix\";\n\n\nconst MIN_KEYPOINT_SCORE = 0.7;\nconst P = {\n  background: -1,\n  left_face: 0,\n  right_face: 1,\n  left_upper_arm_front: 2,\n  left_upper_arm_back: 3,\n  right_upper_arm_front: 4,\n  right_upper_arm_back: 5,\n  left_lower_arm_front: 6,\n  left_lower_arm_back: 7,\n  right_lower_arm_front: 8,\n  right_lower_arm_back: 9,\n  left_hand: 10,\n  right_hand: 11,\n  torso_front: 12,\n  torso_back: 13,\n  left_upper_leg_front: 14,\n  left_upper_leg_back: 15,\n  right_upper_leg_front: 16,\n  right_upper_leg_back: 17,\n  left_lower_leg_front: 18,\n  left_lower_leg_back: 19,\n  right_lower_leg_front: 20,\n  right_lower_leg_back: 21,\n  left_feet: 22,\n  right_feet: 23,\n}\n\nconst useStyles = makeStyles(theme => ({\n    OwnBar: {\n        marginBottom: theme.spacing(5),\n    },\n    container: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n    },\n\tcamContainer: {\n\t\tjustifyContent: \"center\",\n\t\talignItems:\"center\",\n\t\tposition: \"relative\",\n\t},\n\tcontainerItem:{\n\t\tposition: \"absolute\",\n\t}\n\n\n}));\nexport default function YourselfMeasures() {\n\tconst classes = useStyles();\n\tconst videoConstraints = {\n\t\twidth: 1280,\n\t\theight: 720,\n\t\tfacingMode: \"user\",\n\t\ttransform: \"scaleX(-1)\",\n\t};\n\tconst videoRef = React.createRef();\n\tconst canvasRef = React.createRef();\n\tif (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n\t\tconst webCamPromise = navigator.mediaDevices\n\t\t\t.getUserMedia({\n\t\t\t\taudio: false,\n\t\t\t\tvideo: {\n\t\t\t\t\tfacingMode: \"user\",\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(stream => {\n\t\t\t\twindow.stream = stream;\n\t\t\t\tvideoRef.current.srcObject = stream;\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\tvideoRef.current.onloadedmetadata = () => {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t});\n\t\tconst modelPromise = bodypix.load({\n\t\t\tarchitecture: 'MobileNetV1',\n\t\t\toutputStride: 16,\n\t\t\tmultiplier: 0.5,\n\t\t\tquantBytes: 2,\n\t\t\tinputResolution: videoConstraints,\n\t\t\tinternalResolution: \"high\"\n\t\t});\n\t\tPromise.all([modelPromise, webCamPromise])\n\t\t\t.then(values => {\n\t\t\t\tdetectFrame(videoRef.current, values[0]);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error);\n\t\t\t});\n\t\tfunction detectFrame (video, model) {\n\t\t\tmodel.segmentPersonParts(video).then(prediction => {\n\t\t\t\trenderPredictions(prediction);\n\t\t\t\trequestAnimationFrame(() => {\n\t\t\t\t\tdetectFrame(video, model);\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t\tfunction drawPoint(ctx, y, x, r, color) {\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, r, 0, 2 * Math.PI);\n\t\t\tctx.fillStyle = color;\n\t\t\tctx.fill();\n\t\t}\n\t\tfunction renderPredictions (prediction) {\n\t\t\tconst ctx = canvasRef.current.getContext(\"2d\");\n\t\t\tctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\t\t\tconst coloredPartImage = bodypix.toColoredPartMask(prediction);\n\t\t\tconst opacity = 0.7;\n\t\t\tconst flipHorizontal = false;\n\t\t\tconst maskBlurAmount = 0;\n\t\t\t/*bodypix.drawMask(\n\t\t\t\tcanvasRef, img, coloredPartImage, opacity, maskBlurAmount,\n\t\t\t\tflipHorizontal,10.0);*/\n\t\t\tif (prediction.allPoses.length > 0 ) {\n\t\t\t\tconst keypoints = prediction.allPoses[0].keypoints\n\t\t\t\t\t.filter(k => k.score > MIN_KEYPOINT_SCORE)\n\t\t\t\t\t.map((k, i) => {\n\t\t\t\t\t\treturn k;\n\t\t\t\t\t});\n\t\t\t\tif (keypoints.length == 17) {\n\t\t\t\t\tif (takingFront) {\n\t\t\t\t\t\tprocessingFrontBody(prediction, prediction.allPoses, ctx);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (let i = 0; i <= 16; i++) {\n\t\t\t\t\tdrawPoint(ctx, prediction.allPoses[0].keypoints[i].position.y, prediction.allPoses[0].keypoints[i].position.x, 3, 'white')\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tasync function processingFrontBody (segmentation, keyPoints, ctx) {\n\t\t\tlet headPosition = { x: -1, y: -1 };\n\t\t\tlet bodyMatrix = segmentation.data;\n\t\t\tlet bodyPixels = {\n\t\t\t\tinsideLegs: {x: 0, y: 0},\n\t\t\t\tshoulders: {\n\t\t\t\t\txRight: { x: 0, y: 0 },\n\t\t\t\t\txLeft: { x: 0, y: 0 }\n\t\t\t\t},\n\t\t\t\thips: {\n\t\t\t\t\txRight: { x: 0, y: 0 },\n\t\t\t\t\txLeft: { x: 0, y: 0 }\n\t\t\t\t},\n\t\t\t\tbreast: {\n\t\t\t\t\tRight: {x: 0, y: 0},\n\t\t\t\t\tLeft: {x: 0, y: 0}\n\t\t\t\t}\n\t\t\t};\n\t\t\tlet hipsMinMax = keyPoints[0].keypoints[11].position.y > keyPoints[0].keypoints[12].position.y ?\n\t\t\t\t{ min: keyPoints[0].keypoints[12].position.y, max: keyPoints[0].keypoints[11].position.y} :\n\t\t\t\t{ min: keyPoints[0].keypoints[11].position.y, max: keyPoints[0].keypoints[12].position.y};\n\t\t\tlet ycenterShoulder = (keyPoints[0].keypoints[5].position.y + keyPoints[0].keypoints[6].position.y) / 2\n\t\t\tlet ycenterHips = (keyPoints[0].keypoints[11].position.y + keyPoints[0].keypoints[12].position.y) / 2\n\t\t\tlet ybreast = (ycenterHips + ycenterShoulder) / 2\n\t\t\tlet y = 0;\n\t\t\tlet x = 0;\n\t\t\tlet width = Number(segmentation.width);\n\t\t\tlet height = Number(segmentation.height);\n\n\t\t\tfor (let i = 0; i < height * width; ++i) {\n\t\t\t\ty = Math.trunc(i / width);\n\t\t\t\tx = i - (y * width);\n\t\t\t\t/**\n\t\t\t\t * POSITION TO CALCULATE HEIGHT IN PIXEL (SCALING)\n\t\t\t\t */\n\t\t\t\tif (headPosition.x === -1 && (bodyMatrix[i] === P.left_face || bodyMatrix[i] === P.right_face)) {\n\t\t\t\t\theadPosition = {x: x, y: y};\n\t\t\t\t}\n\t\t\t\t/**\n\t\t\t\t * BREAST CALCULATION\n\t\t\t\t */\n\t\t\t\tif (bodyMatrix[i] === P.torso_front && (bodyPixels.breast.Left.x === 0 || bodyPixels.breast.Left.x < x) && y < ybreast + 1 && y > ybreast - 1)\n\t\t\t\t\tbodyPixels.breast.Right = { x: x, y: y };\n\t\t\t\tif (bodyMatrix[i] === P.torso_front && (bodyPixels.breast.Left.x === 0 || bodyPixels.breast.Left.x > x) && y < ybreast + 1 && y > ybreast - 1)\n\t\t\t\t\tbodyPixels.breast.Left = { x: x, y: y };\n\t\t\t\t/**\n\t\t\t\t * HIPS CALCULATION\n\t\t\t\t */\n\t\t\t\tif (bodyMatrix[i] === P.torso_front && (bodyPixels.hips.xRight.x === 0 || bodyPixels.hips.xRight.x > x)\n\t\t\t\t\t&& y < hipsMinMax.max && y > hipsMinMax.min)\n\t\t\t\t\tbodyPixels.hips.xRight = { x: x, y: y };\n\t\t\t\telse if (bodyMatrix[i] === P.torso_front && (bodyPixels.hips.xLeft.x === 0 || bodyPixels.hips.xLeft.x < x)\n\t\t\t\t\t&& y < hipsMinMax.max && y > hipsMinMax.min)\n\t\t\t\t\tbodyPixels.hips.xLeft = { x: x, y: y };\n\t\t\t\t/**\n\t\t\t\t * LEG CALCULATION\n\t\t\t\t */\n\t\t\t\tif (bodyPixels.insideLegs.x === 0\n\t\t\t\t\t&& ( bodyMatrix[i] === P.right_upper_leg_front || bodyMatrix[i] === P.right_upper_leg_back )\n\t\t\t\t\t&& (bodyMatrix[i + 1] === P.left_upper_leg_front || bodyMatrix[i +1 ] === P.left_upper_leg_back\n\t\t\t\t\t\t|| bodyMatrix[i + 1] === P.background))\n\t\t\t\t\tbodyPixels.insideLegs = { x: x, y: y };\n\t\t\t\t/**\n\t\t\t\t * SHOULDER CALCULATION\n\t\t\t\t */\n\t\t\t\telse if (bodyMatrix[i] === P.torso_front &&\n\t\t\t\t\t(bodyPixels.shoulders.xRight.x === 0 || (bodyPixels.shoulders.xRight.x > x && y <= keyPoints[0].keypoints[6].position.y)) )\n\t\t\t\t\tbodyPixels.shoulders.xRight = { x: x, y: y};\n\t\t\t\telse if (bodyMatrix[i] === P.torso_front &&\n\t\t\t\t\t(bodyPixels.shoulders.xLeft.x === 0 || (bodyPixels.shoulders.xLeft.x < x && y <= keyPoints[0].keypoints[5].position.y)) )\n\t\t\t\t\tbodyPixels.shoulders.xLeft = { x: x, y: y};\n\t\t\t}\n\t\t\tdrawPoint(ctx, headPosition.y, headPosition.x, 6, 'yellow')\n\t\t\tdrawPoint(ctx, bodyPixels.hips.xRight.y, bodyPixels.hips.xRight.x, 6, 'red')\n\t\t\tdrawPoint(ctx, bodyPixels.hips.xLeft.y, bodyPixels.hips.xLeft.x, 6, 'red')\n\t\t\tdrawPoint(ctx, bodyPixels.shoulders.xRight.y, bodyPixels.shoulders.xRight.x, 6, 'green')\n\t\t\tdrawPoint(ctx, bodyPixels.shoulders.xLeft.y, bodyPixels.shoulders.xLeft.x, 6, 'green')\n\t\t\tdrawPoint(ctx, bodyPixels.insideLegs.y, bodyPixels.insideLegs.x, 6, 'blue')\n\t\t\t/*[TODO] a changer*/ let scaling = 168 / Math.sqrt(\n\t\t\t\tMath.pow( keyPoints[0].keypoints[16].position.y - headPosition.y, 2 )\n\t\t\t\t+ Math.pow(keyPoints[0].keypoints[16].position.x - headPosition.x, 2 ) );\n\t\t\tkeyPoints[0].keypoints.push({ position: bodyPixels.insideLegs, score: 1 });\n\t\t\tkeyPoints[0].keypoints.push({ position: bodyPixels.shoulders.xRight, score: 1 });\n\t\t\tmeasures.legs = calculateLegs(bodyPixels.legs, keyPoints, measures.legs, scaling, { one: 16, two: 14, three: 17 });\n\t\t\tmeasures.arms = calculateLegs(bodyPixels.arms, keyPoints, measures.arms, scaling, { one: 10, two: 8, three: 18 });\n\t\t\tmeasures.torso.shoulder = calculateShoulder(bodyPixels.shoulders, keyPoints, measures.torso.shoulder, scaling);\n\t\t\tmeasures.torso.chest.width = Math.abs((bodyPixels.breast.Left.x - bodyPixels.breast.Right.x) * scaling);\n\t\t\tmeasures.torso.chest.accuracyScore =  (keyPoints[0].keypoints[5].score + keyPoints[0].keypoints[6].score + keyPoints[0].keypoints[11].score + keyPoints[0].keypoints[12].score) / 4\n\t\t\tmeasures.hips.length = Math.sqrt(\n\t\t\t\tMath.pow( bodyPixels.hips.xRight.y - bodyPixels.hips.xLeft.y, 2 )\n\t\t\t\t+ Math.pow(bodyPixels.hips.xRight.x - bodyPixels.hips.xLeft.x, 2 ) ) * scaling;\n\t\t\tmeasures.hips.accuracyScore = (keyPoints[0].keypoints[12].score + keyPoints[0].keypoints[11].score) / 2;\n\t\t\treturn measures;\n\t\t}\n\t\tfunction calculateLegs(bodyPixelParts, keyPoints,  partsMeasures, scaling, keys) {\n\t\t\t//ACCURACY POINTS\n\t\t\tlet accuracyPointsLowerParts = (keyPoints[0].keypoints[keys.one].score + keyPoints[0].keypoints[keys.two].score) / 2;\n\t\t\tlet accuracyPointsUpperParts = (keyPoints[0].keypoints[keys.two].score + keyPoints[0].keypoints[keys.three].score) / 2;\n\t\t\tlet distancePointsLowerParts = 0;\n\t\t\tlet distancePointsUpperParts = 0;\n\t\t\tdistancePointsLowerParts = Math.sqrt(\n\t\t\t\tMath.pow( keyPoints[0].keypoints[keys.two].position.y - keyPoints[0].keypoints[keys.one].position.y, 2 )\n\t\t\t\t+ Math.pow(keyPoints[0].keypoints[keys.two].position.x - keyPoints[0].keypoints[keys.one].position.x, 2 ) );\n\t\t\tdistancePointsUpperParts = Math.sqrt(\n\t\t\t\tMath.pow( keyPoints[0].keypoints[keys.three].position.y - keyPoints[0].keypoints[keys.two].position.y, 2 )\n\t\t\t\t+ Math.pow(keyPoints[0].keypoints[keys.three].position.x - keyPoints[0].keypoints[keys.two].position.x, 2 ) );\n\t\t\tif ((accuracyPointsUpperParts+accuracyPointsLowerParts) / 2 > partsMeasures.entire.accuracyScore) {\n\t\t\t\tpartsMeasures.entire.length = (distancePointsUpperParts + distancePointsLowerParts) * scaling;\n\t\t\t\tpartsMeasures.entire.accuracyScore = (accuracyPointsUpperParts+accuracyPointsUpperParts) / 2;\n\t\t\t}\n\t\t\treturn partsMeasures;\n\t\t}\n\t\tfunction calculateShoulder(bodyPixelsShoulder, keyPoints,  shoulderMeasures, scaling) {\n\t\t\tlet averageScore = (keyPoints[0].keypoints[5].score + keyPoints[0].keypoints[6].score) / 2;\n\t\t\tlet leftShoulderDistance =  Math.sqrt(\n\t\t\t\tMath.pow( bodyPixelsShoulder.xLeft.y - keyPoints[0].keypoints[5].position.y, 2 )\n\t\t\t\t+ Math.pow(bodyPixelsShoulder.xLeft.x - keyPoints[0].keypoints[5].position.x, 2 ) )\n\t\t\tlet rightShoulderDistance =  Math.sqrt(\n\t\t\t\tMath.pow( bodyPixelsShoulder.xRight.y - keyPoints[0].keypoints[6].position.y, 2 )\n\t\t\t\t+ Math.pow(bodyPixelsShoulder.xRight.x - keyPoints[0].keypoints[6].position.x, 2 ) );\n\t\t\tlet percentLow = (rightShoulderDistance * 10) / 100;\n\t\t\tlet percentHigh = (rightShoulderDistance * 190) / 100;\n\t\t\tif (leftShoulderDistance > percentLow && leftShoulderDistance < percentHigh\n\t\t\t\t&& averageScore > shoulderMeasures.accuracyScore){\n\t\t\t\tshoulderMeasures.accuracyScore = averageScore;\n\t\t\t\tshoulderMeasures.length = Math.sqrt(\n\t\t\t\t\tMath.pow( bodyPixelsShoulder.xLeft.y - bodyPixelsShoulder.xRight.y, 2 )\n\t\t\t\t\t+ Math.pow(bodyPixelsShoulder.xLeft.x - bodyPixelsShoulder.xRight.x, 2 ) ) * scaling;\n\t\t\t}\n\t\t\treturn shoulderMeasures;\n\t\t}\n\n\t\tlet takingFront = true;\n\t\tlet measures = {\n\t\t\tlegs: {\n\t\t\t\tentire: {\n\t\t\t\t\taccuracyScore: 0,\n\t\t\t\t\tlength: 0\n\t\t\t\t},\n\t\t\t\tthigh: {\n\t\t\t\t\taccuracyScore: 0,\n\t\t\t\t\tsize: 20\n\t\t\t\t}\n\t\t\t},\n\t\t\tarms: {\n\t\t\t\tentire: {\n\t\t\t\t\taccuracyScore: 0,\n\t\t\t\t\tlength: 0\n\t\t\t\t},\n\t\t\t\tbiceps: {\n\t\t\t\t\taccuracyScore: 0,\n\t\t\t\t\tsize: 20\n\t\t\t\t}\n\t\t\t},\n\t\t\ttorso: {\n\t\t\t\tshoulder: {\n\t\t\t\t\taccuracyScore: 0,\n\t\t\t\t\tlength: 0\n\t\t\t\t},\n\t\t\t\tchest: {\n\t\t\t\t\tsize: 20,\n\t\t\t\t\twidth: 0,\n\t\t\t\t\tdepth: 0,\n\t\t\t\t\taccuracyScore: 0\n\t\t\t\t}\n\t\t\t},\n\t\t\thips: {\n\t\t\t\taccuracyScore: 0,\n\t\t\t\tlength: 0,\n\t\t\t\tsize: 0,\n\t\t\t\tpelvis: 0\n\t\t\t}\n\t\t};\n\n\n\n\t}\n\treturn (\n\t\t<Page title=\"Se mesurer\">\n\t\t\t<Grid container\tjustify=\"center\">\n\t\t\t\t<video\n\t\t\t\t\tclassName={classes.containerItem}\n\t\t\t\t\tautoPlay\n\t\t\t\t\tplaysInline\n\t\t\t\t\tmuted\n\t\t\t\t\tref={videoRef}\n\t\t\t\t\twidth={videoConstraints.width}\n\t\t\t\t\theight={videoConstraints.height}\n\t\t\t\t/>\n\t\t\t\t<canvas\n\t\t\t\t\tclassName={classes.containerItem}\n\t\t\t\t\tref={canvasRef}\n\t\t\t\t\twidth={videoConstraints.width}\n\t\t\t\t\theight={videoConstraints.height}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</Page>\n\t)\n};\n"]},"metadata":{},"sourceType":"module"}