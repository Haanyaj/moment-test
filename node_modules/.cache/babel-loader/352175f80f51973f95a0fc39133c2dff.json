{"ast":null,"code":"var _jsxFileName = \"/home/haan/moment-test/src/components/Pages/Films.js\";\nimport React, { useEffect, useState, Component } from 'react';\nimport { request_token } from '../tools/ApiCalls';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InfiniteScroll from \"react-infinite-scroller\";\n\nclass Films extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      items: 20,\n      hasMoreItems: true\n    };\n  }\n\n  async componentDidMount() {\n    const response = await request_token(\"fr-FR\", 1);\n    this.setState({\n      data: response\n    });\n    console.log('data', response);\n  }\n\n  showItems() {\n    {\n      this.state.data.map(item =>\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, item.title));\n    }\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(InfiniteScroll, {\n        loadMore: this.loadMore.bind(this),\n        hasMore: this.state.hasMoreItems,\n        loader:\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          className: \"loader\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }\n        }, \" Loading... \"),\n        useWindow: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 3\n        }\n      }, this.showItems(), \" \"), \" \")\n    );\n  }\n\n}\n\nexport default Films;","map":{"version":3,"sources":["/home/haan/moment-test/src/components/Pages/Films.js"],"names":["React","useEffect","useState","Component","request_token","makeStyles","InfiniteScroll","Films","constructor","props","state","data","items","hasMoreItems","componentDidMount","response","setState","console","log","showItems","map","item","id","title","render","loadMore","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,cAAP,MAA2B,yBAA3B;;AAEA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,YAAY,EAAE;AAHL,KAAb;AAKH;;AACD,QAAMC,iBAAN,GAA0B;AACtB,UAAMC,QAAQ,GAAG,MAAMX,aAAa,CAAC,OAAD,EAAU,CAAV,CAApC;AACA,SAAKY,QAAL,CAAc;AAAEL,MAAAA,IAAI,EAAEI;AAAR,KAAd;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBH,QAAnB;AACH;;AAEDI,EAAAA,SAAS,GAAG;AACR;AAAC,WAAKT,KAAL,CAAWC,IAAX,CAAgBS,GAAhB,CAAoBC,IAAI;AAAA;AACrB;AAAK,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoBD,IAAI,CAACE,KAAzB,CADH;AAEI;AACN;;AAEHC,EAAAA,MAAM,GAAG;AACL;AAAA;AACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACV,0BAAC,cAAD;AACc,QAAA,QAAQ,EAAE,KAAKC,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CADxB;AAEc,QAAA,OAAO,EAAE,KAAKhB,KAAL,CAAWG,YAFlC;AAGc,QAAA,MAAM;AAAA;AAAE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHtB;AAIc,QAAA,SAAS,EAAE,KAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMe,KAAKM,SAAL,EANf,EAMiC,GANjC,CADU,EAQoB,GARpB;AADJ;AAYH;;AAlCyB;;AAqC9B,eAAeZ,KAAf","sourcesContent":["import React, { useEffect, useState, Component } from 'react';\nimport { request_token } from '../tools/ApiCalls';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InfiniteScroll from \"react-infinite-scroller\";\n\nclass Films extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            items: 20,\n            hasMoreItems: true,\n        };\n    }\n    async componentDidMount() {\n        const response = await request_token(\"fr-FR\", 1);\n        this.setState({ data: response });\n        console.log('data',response)\n    }\n\n    showItems() {\n        {this.state.data.map(item => (\n            <div key={item.id}>{item.title}</div>\n          ))}\n      }\n\n    render() {\n        return (\n            <div>\n  <InfiniteScroll\n                loadMore={this.loadMore.bind(this)}\n                hasMore={this.state.hasMoreItems}\n                loader={<div className=\"loader\"> Loading... </div>}\n                useWindow={false}\n              >\n                {this.showItems()}{\" \"}\n              </InfiniteScroll>{\" \"}\n            </div>\n        );\n    }\n}\n\nexport default Films;"]},"metadata":{},"sourceType":"module"}