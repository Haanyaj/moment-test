{"ast":null,"code":"var _jsxFileName = \"/home/haan/application-web/touch31_app/src/components/Pages/resetPassword.js\";\n\n/*\n *\n *  *  Copyright (C) Thirty One, Inc - All Rights Reserved\n *  *  * Unauthorized copying of this file, via any medium is strictly prohibited\n *  *  * Proprietary and confidential\n *  *  * Written by Thirty One <thirtyoneparis@gmail.com>, 2020\n *  *\n *\n */\nimport React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { Face } from '@material-ui/icons';\nimport LockIcon from '@material-ui/icons/Lock';\nimport Typography from '@material-ui/core/Typography';\nimport HeightIcon from '@material-ui/icons/Height';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport BackgroundImage from '../BackgroundImage';\nimport { Card, CardContent } from '@material-ui/core';\nimport { useForm } from 'react-hook-form';\nimport { signup, res } from '../tools/ApiCalls';\nimport TextFieldIcon from '../TextFieldIcon';\nimport EmailIcon from '@material-ui/icons/Email';\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\nimport Page from '../Page';\nimport AlertMessage from '../tools/popup';\nimport AlertMessageError from '../tools/popupError';\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n    margin: 'auto'\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nexport default function resetPassword(props) {\n  const classes = useStyles();\n  const [setOn, setStatusBase] = useState('');\n  const [setOn2, setStatusBase2] = useState('');\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors\n  } = useForm();\n\n  const onSubmit = async data => {\n    if (data.password === data.confirmPassword) {\n      const response = await signup(data);\n\n      if (response == \"201\") {\n        setStatusBase({\n          msg: \"Un email de confirmation d'inscription vous a été envoyé.\",\n          key: Math.random()\n        });\n        setTimeout(function () {\n          props.history.push('/');\n        }, 3000);\n      } else if (response == \"409\") {\n        setStatusBase2({\n          msg: \"Cet email est déjà enregistré. Veuillez entrer un autre email.\",\n          key: Math.random()\n        });\n        setTimeout(function () {}, 3000);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n    const pass = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/;\n  });\n  return (\n    /*#__PURE__*/\n    React.createElement(Page, {\n      center: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Avatar, {\n      className: classes.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(LockOutlinedIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, \"Thirty One\"),\n    /*#__PURE__*/\n    React.createElement(\"form\", {\n      className: classes.form,\n      onSubmit: handleSubmit(onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 8\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TextFieldIcon, {\n      startIcon:\n      /*#__PURE__*/\n      React.createElement(Face, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 34\n        }\n      }),\n      name: \"firstname\",\n      variant: \"standard\",\n      fullWidth: true,\n      label: \"Pr\\xE9nom *\",\n      autoFocus: true,\n      error: errors.firstname,\n      helperText: errors.firstname ? errors.firstname.message : '',\n      inputRef: register({\n        required: {\n          value: true,\n          message: \"Champs requis *\"\n        },\n        minLength: {\n          value: 3,\n          message: \"Doit contenir plus de 2 caractères\"\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TextFieldIcon, {\n      startIcon:\n      /*#__PURE__*/\n      React.createElement(Face, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 34\n        }\n      }),\n      variant: \"standard\",\n      fullWidth: true,\n      label: \"Nom *\",\n      name: \"lastname\",\n      inputRef: register({\n        required: true\n      }),\n      helperText: errors.lastname ? errors.lastname.message : '',\n      error: errors.lastname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TextFieldIcon, {\n      startIcon:\n      /*#__PURE__*/\n      React.createElement(EmailIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 34\n        }\n      }),\n      variant: \"standard\",\n      fullWidth: true,\n      label: \"Email *\",\n      name: \"email\",\n      inputRef: register({\n        required: {\n          value: true,\n          message: \"Champs requis *\"\n        },\n        pattern: {\n          value: re,\n          message: \"Mauvais email\"\n        }\n      }),\n      error: errors.email,\n      helperText: errors.email ? errors.email.message : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 19\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TextFieldIcon, {\n      startIcon:\n      /*#__PURE__*/\n      React.createElement(LockIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 34\n        }\n      }),\n      variant: \"standard\",\n      fullWidth: true,\n      name: \"password\",\n      label: \"Mot de passe *\",\n      type: \"password\",\n      error: errors.password,\n      inputRef: register({\n        required: {\n          value: true,\n          message: \"Champs requis *\"\n        },\n        pattern: {\n          value: pass,\n          message: \"Doit avoir 8 caractères, une majuscule, une minuscule et un chiffre\"\n        }\n      }),\n      helperText: errors.password ? errors.password.message : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    })),\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 5\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(TextFieldIcon, {\n      startIcon:\n      /*#__PURE__*/\n      React.createElement(LockIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 34\n        }\n      }),\n      variant: \"standard\",\n      fullWidth: true,\n      name: \"confirmPassword\",\n      label: \"Confirmez le mot de passe *\",\n      type: \"password\",\n      error: errors.confirmPassword,\n      inputRef: register({\n        required: {\n          value: true,\n          message: \"Champs requis *\"\n        },\n        pattern: {\n          value: pass,\n          message: \"Doit avoir 8 caractères, une majuscule, une minuscule et un chiffre\"\n        }\n      }),\n      helperText: errors.confirmPassword ? errors.confirmPassword.message : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }))),\n    /*#__PURE__*/\n    React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 3\n      }\n    }, \"S'enregistrer\"), setOn ?\n    /*#__PURE__*/\n    React.createElement(AlertMessage, {\n      key: setOn.key,\n      message: setOn.msg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 12\n      }\n    }) : null, setOn2 ?\n    /*#__PURE__*/\n    React.createElement(AlertMessageError, {\n      key: setOn2.key,\n      message: setOn2.msg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }\n    }) : null,\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      container: true,\n      justify: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 19\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Link, {\n      component: RouterLink,\n      to: \"/signin\",\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }\n    }, \"Vous avez d\\xE9j\\xE0 un compte? Cliquez ici\"))))))))))\n  );\n}","map":{"version":3,"sources":["/home/haan/application-web/touch31_app/src/components/Pages/resetPassword.js"],"names":["React","useState","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","RouterLink","Grid","LockOutlinedIcon","Face","LockIcon","Typography","HeightIcon","makeStyles","Container","BackgroundImage","Card","CardContent","useForm","signup","res","TextFieldIcon","EmailIcon","EmojiPeopleIcon","Page","AlertMessage","AlertMessageError","useStyles","theme","avatar","margin","spacing","backgroundColor","palette","secondary","main","form","width","marginTop","submit","resetPassword","props","classes","setOn","setStatusBase","setOn2","setStatusBase2","register","handleSubmit","watch","errors","onSubmit","data","password","confirmPassword","response","msg","key","Math","random","setTimeout","history","push","useEffect","re","pass","textAlign","firstname","message","required","value","minLength","lastname","pattern","email"],"mappings":"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","sourcesContent":["/*\n *\n *  *  Copyright (C) Thirty One, Inc - All Rights Reserved\n *  *  * Unauthorized copying of this file, via any medium is strictly prohibited\n *  *  * Proprietary and confidential\n *  *  * Written by Thirty One <thirtyoneparis@gmail.com>, 2020\n *  *\n *\n */\n\nimport React,{ useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink } from 'react-router-dom';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { Face } from '@material-ui/icons';\nimport LockIcon from '@material-ui/icons/Lock';\nimport Typography from '@material-ui/core/Typography';\nimport HeightIcon from '@material-ui/icons/Height';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport BackgroundImage from '../BackgroundImage';\nimport { Card, CardContent } from '@material-ui/core';\nimport { useForm } from 'react-hook-form'\nimport {signup, res} from '../tools/ApiCalls'\nimport TextFieldIcon from '../TextFieldIcon'\nimport EmailIcon from '@material-ui/icons/Email';\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\nimport Page from '../Page';\nimport AlertMessage from '../tools/popup'\nimport AlertMessageError from '../tools/popupError'\n\n\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n    margin: 'auto',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function resetPassword(props) {\n  const classes = useStyles();\n\tconst [setOn, setStatusBase] = useState('');\n\tconst [setOn2, setStatusBase2] = useState('');\n  const { register, handleSubmit, watch, errors } = useForm()\n  const onSubmit = async data => {\n\t  if (data.password === data.confirmPassword) {\n  \t    const response = await signup(data)\n\t      if (response == \"201\") {\n\t\tsetStatusBase({msg: \"Un email de confirmation d'inscription vous a été envoyé.\",key: Math.random()})\n\t\tsetTimeout(function () { props.history.push('/')}, 3000);\n\t       } else if ( response == \"409\"){\n\t\tsetStatusBase2({msg: \"Cet email est déjà enregistré. Veuillez entrer un autre email.\",key: Math.random()})\n\t\tsetTimeout(function () {}, 3000);\n\t     }\n\t  }\n  }\n useEffect(() => {\n  const re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n  const pass = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/;\n });\n\n  return (\n    <Page center>\n    <div>\n      <Container component=\"main\" maxWidth=\"xs\"  >\n        <div>\n          <Card>\n            <CardContent>\n              <Avatar className={classes.avatar}>\n                <LockOutlinedIcon />\n              </Avatar>\n              <Typography component=\"h1\" variant=\"h5\" style={{ textAlign: 'center' }}>\n                Thirty One\n              </Typography>\n\n\t      <form className={classes.form} onSubmit={handleSubmit(onSubmit)}>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} sm={6}>\n                    <TextFieldIcon\n                      startIcon={<Face />}\n                      name=\"firstname\"\n                      variant=\"standard\"\n                      fullWidth\n                      label=\"Prénom *\"\n                      autoFocus\n                      error={errors.firstname}\n                      helperText={errors.firstname ? errors.firstname.message : ''}\n                      inputRef={register({\n                        required: {\n                          value: true,\n                          message: \"Champs requis *\"\n                        },\n                        minLength: {\n                          value: 3,\n                          message: \"Doit contenir plus de 2 caractères\"\n                        }\n                      })}\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <TextFieldIcon\n                      startIcon={<Face />}\n                      variant=\"standard\"\n                      fullWidth\n                      label=\"Nom *\"\n                      name=\"lastname\"\n                      inputRef={register({ required: true })}\n                      helperText={errors.lastname ? errors.lastname.message : ''}\n                      error={errors.lastname}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextFieldIcon\n                      startIcon={<EmailIcon />}\n                      variant=\"standard\"\n                      fullWidth\n                      label=\"Email *\"\n                      name=\"email\"\n                      inputRef={register({\n                        required: {\n                          value: true,\n                          message: \"Champs requis *\"\n                        },\n                        pattern: {\n                          value: re,\n                          message: \"Mauvais email\"\n                        },\n                      })}\n                      error={errors.email}\n                      helperText={errors.email ? errors.email.message : ''}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextFieldIcon\n                      startIcon={<LockIcon />}\n                      variant=\"standard\"\n                      fullWidth\n                      name=\"password\"\n                      label=\"Mot de passe *\"\n                      type=\"password\"\n                      error={errors.password}\n                      inputRef={register({\n                        required: {\n                          value: true,\n                          message: \"Champs requis *\"\n\t\t\t},\n\t\t\tpattern: {\n\t\t\t  value: pass,\n            \t\t  message: \"Doit avoir 8 caractères, une majuscule, une minuscule et un chiffre\"\n\t\t\t}\n                      })}\n                      helperText={errors.password ? errors.password.message : ''}\n                    />\n                  </Grid>\n\t\t  <Grid item xs={12}>\n                    <TextFieldIcon\n                      startIcon={<LockIcon />}\n                      variant=\"standard\"\n                      fullWidth\n                      name=\"confirmPassword\"\n                      label=\"Confirmez le mot de passe *\"\n                      type=\"password\"\n                      error={errors.confirmPassword}\n                      inputRef={register({\n                        required: {\n                          value: true,\n                          message: \"Champs requis *\"\n                        },\n          \t\tpattern: {\n            \t\t  value: pass,\n            \t\t  message: \"Doit avoir 8 caractères, une majuscule, une minuscule et un chiffre\"\n          \t\t}\n                      })}\n                      helperText={errors.confirmPassword ? errors.confirmPassword.message : ''}\n                    />\n                  </Grid>\n\t\t  {/*<Grid item xs={6}>\n                    <TextFieldIcon\n                      startIcon={<EmojiPeopleIcon />}\n                      variant=\"standard\"\n                      fullWidth\n                      name=\"weight\"\n                      label=\"Poids\"\n                      type=\"number\"\n                      error={errors.weight}\n                      inputRef={register({\n                        required: {\n                          value: true,\n                          message: \"Champs requis *\"\n                        },\n\t\t\tmin: {\n\t\t\t  value: 10,\n\t\t\t  message : \"Ne peut pas être inférieur à 10 kg\"\n\t\t\t},\n\t\t\tmax: {\n\t\t\t  value: 700,\n\t\t\t  message: \"Ne peut pas être supérieur à 700 kg\"\n\t\t\t      } \n                      })}\n                      helperText={errors.weight ? errors.weight.message : ''}\n                    />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <TextFieldIcon\n                      startIcon={<HeightIcon />}\n                      variant=\"standard\"\n                      fullWidth\n                      name=\"height\"\n                      label=\"Taille\"\n                      type=\"number\"\n                      error={errors.height}\n                      inputRef={register({\n                        required: {\n                          value: true,\n                          message: \"Champs requis *\"\n                        },\n\t\t\tmin: {\n\t\t\t  value: 50,\n\t\t\t  message : \"Ne peut pas être inférieur à 50 cm\"\n\t\t\t},\n\t\t\tmax: {\n\t\t\t  value: 280,\n\t\t\t  message: \"Ne peut pas être supérieur à 280 cm\"\n\t\t\t}\n                      })}\n                      helperText={errors.height ? errors.height.message : ''}\n                    />\n\t\t  </Grid>*/}\n\t\t</Grid>\n\t\t<Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                >\n                  S'enregistrer\n\t\t</Button>\n\t\t{setOn ? <AlertMessage key={setOn.key} message={setOn.msg} /> : null}\n\t\t{setOn2 ? <AlertMessageError key={setOn2.key} message={setOn2.msg} /> : null}\n                <Grid container justify=\"flex-end\">\n                  <Grid item>\n                    <Link component={RouterLink} to=\"/signin\" variant=\"body2\">\n                      Vous avez déjà un compte? Cliquez ici\n                </Link>\n                  </Grid>\n                </Grid>\n              </form>\n            </CardContent>\n          </Card>\n        </div>\n      </Container>\n      </div>\n    </Page>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}