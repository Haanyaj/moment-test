{"ast":null,"code":"var _jsxFileName = \"/home/haan/moment-test/src/components/Pages/Films.js\";\nimport React, { Component } from 'react';\nimport { request_token, request_pages } from '../tools/ApiCalls';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport Container from '@material-ui/core/Container';\nimport Spinner from '../Spinner';\nimport Grid from '@material-ui/core/Grid';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Row, Col } from 'react-bootstrap';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardTitle from '@material-ui/core/Card';\nconst useStyles = makeStyles(theme => ({\n  root: {}\n}));\nconst styles = {\n  movieColumn: {\n    marginBottom: 20\n  },\n  cardMedia: {\n    width: 300\n  },\n  card: {\n    height: '394px',\n    width: '300px',\n    position: 'relative'\n  },\n  bgImage: {\n    width: '100%'\n  },\n  overlay: {\n    position: 'absolute',\n    width: '300px',\n    color: 'white',\n    fontSize: '20px',\n    backgroundColor: 'rgba(0, 0, 0, 0.47)',\n    textAlign: 'center',\n    bottom: '0px'\n  }\n};\n\nclass Films extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      hasMoreItems: true,\n      totalPages: 0,\n      pages: 1,\n      language: \"fr-FR\"\n    };\n  }\n\n  showItems() {\n    const {\n      style\n    } = this.props;\n    return this.state.data.map(movie =>\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 4,\n      md: 4,\n      lg: 4,\n      key: movie.id,\n      spacing: 3,\n      style: styles.movieColumn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Card, {\n      style: styles.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(CardMedia, {\n      style: styles.cardMedia,\n      alt: movie.original_title,\n      title: movie.original_title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      style: styles.overlay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, movie.original_title),\n    /*#__PURE__*/\n    React.createElement(\"img\", {\n      style: styles.bgImage,\n      src: \"https://image.tmdb.org/t/p/w500\" + movie.poster_path,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    })))));\n  }\n\n  async getTotalPages() {\n    this.state.totalPages = await request_pages();\n  }\n\n  async loadMore() {\n    if (this.state.pages === 4\n    /*this.state.totalPages*/\n    ) {\n        this.setState({\n          hasMoreItems: false\n        });\n      } else {\n      const response = await request_token(\"fr-FR\", this.state.pages);\n      setTimeout(() => {\n        const add = this.state.data;\n        const to_add = add.concat(response);\n        this.setState({\n          data: to_add\n        });\n      }, 2000);\n    }\n\n    this.state.pages += 1;\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        loader: this.getTotalPages(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Container, {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(InfiniteScroll, {\n        loadMore: this.loadMore.bind(this),\n        hasMore: this.state.hasMoreItems,\n        loader:\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          className: \"loader\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }\n        }, \" Loading... \"),\n        useWindow: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Grid, {\n        container: true,\n        spacin: 1,\n        className: classes.bodyContent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }\n      }, this.showItems(), \" \")), \" \"))\n    );\n  }\n\n}\n\nexport default withStyles(useStyles)(Films);","map":{"version":3,"sources":["/home/haan/moment-test/src/components/Pages/Films.js"],"names":["React","Component","request_token","request_pages","makeStyles","withStyles","InfiniteScroll","Container","Spinner","Grid","Dialog","MuiDialogTitle","MuiDialogContent","MuiDialogActions","IconButton","CloseIcon","Typography","Card","CardActionArea","CardActions","CardContent","Row","Col","CardMedia","CardTitle","useStyles","theme","root","styles","movieColumn","marginBottom","cardMedia","width","card","height","position","bgImage","overlay","color","fontSize","backgroundColor","textAlign","bottom","Films","constructor","props","state","data","hasMoreItems","totalPages","pages","language","showItems","style","map","movie","id","original_title","poster_path","getTotalPages","loadMore","setState","response","setTimeout","add","to_add","concat","render","classes","bind","bodyContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { request_token, request_pages } from '../tools/ApiCalls';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport Container from '@material-ui/core/Container';\nimport Spinner from '../Spinner'\nimport Grid from '@material-ui/core/Grid';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Row, Col } from 'react-bootstrap';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardTitle from '@material-ui/core/Card';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n\n    },\n\n}));\n\nconst styles = {\n    movieColumn: {\n        marginBottom: 20\n    },\n\n    cardMedia: {\n        width: 300,\n    },\n    card: {\n        height: '394px',\n        width: '300px',\n        position: 'relative'\n    },\n    bgImage: {\n        width: '100%'\n    },\n    overlay: {\n        position: 'absolute',\n        width: '300px',\n        color: 'white',\n        fontSize:'20px',\n        backgroundColor: 'rgba(0, 0, 0, 0.47)',\n        textAlign: 'center',\n        bottom: '0px',\n    }\n}\n\nclass Films extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            hasMoreItems: true,\n            totalPages: 0,\n            pages: 1,\n            language: \"fr-FR\",\n        };\n\n    }\n\n    showItems() {\n        const { style } = this.props;\n        return this.state.data.map(movie => (\n            <Grid item xs={12} sm={4} md={4} lg={4} key={movie.id} spacing={3} style={styles.movieColumn}>\n                <Card style={styles.card}>\n                    <CardMedia style={styles.cardMedia}\n                        alt={movie.original_title}\n                        title={movie.original_title}\n                    >\n                        <div style={styles.overlay}>\n                            {movie.original_title}\n                        </div>\n                        <img style={styles.bgImage} src={\"https://image.tmdb.org/t/p/w500\" + movie.poster_path} />\n                    </CardMedia>\n                </Card>\n            </Grid>\n\n\n        ))\n    }\n\n    async getTotalPages() {\n        this.state.totalPages = await request_pages();\n    }\n\n    async loadMore() {\n        if (this.state.pages === 4 /*this.state.totalPages*/) {\n            this.setState({ hasMoreItems: false });\n        } else {\n            const response = await request_token(\"fr-FR\", this.state.pages);\n            setTimeout(() => {\n                const add = this.state.data;\n                const to_add = add.concat(response);\n                this.setState({ data: to_add })\n            }, 2000);\n        }\n        this.state.pages += 1\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n\n            <div\n                loader={this.getTotalPages()}\n            >\n                <Container className={classes.root}>\n\n                    <InfiniteScroll\n                        loadMore={this.loadMore.bind(this)}\n                        hasMore={this.state.hasMoreItems}\n                        loader={<div className=\"loader\"> Loading... </div>}\n                        useWindow={false}\n                    >\n                        <Grid container spacin={1} className={classes.bodyContent}>\n                            {this.showItems()}{\" \"}\n                        </Grid>\n                    </InfiniteScroll>{\" \"}\n\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(Films);"]},"metadata":{},"sourceType":"module"}