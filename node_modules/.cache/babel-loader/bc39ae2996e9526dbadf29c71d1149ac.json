{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { request_token } from '../tools/ApiCalls';\nexport default function useBookSearch(language, pageNumber) {\n  const [loading, setLoading] = useState(true);\n  const [newMovies, setNewMovies] = useState([]);\n  const [hasMore, setHasMore] = useState(false);\n  useEffect(async () => {\n    setNewMovies(newMovies);\n    const tmp = await request_token(language, pageNumber);\n    setNewMovies(movies.concat(tmp));\n  }, []);\n  useEffect(() => {\n    setLoading(true);\n  }, []);\n  return {\n    loading,\n    newMovies,\n    hasMore\n  };\n}","map":{"version":3,"sources":["/home/haan/moment-test/src/components/Pages/useBookSearch.js"],"names":["useEffect","useState","request_token","useBookSearch","language","pageNumber","loading","setLoading","newMovies","setNewMovies","hasMore","setHasMore","tmp","movies","concat"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAAQC,aAAR,QAA4B,mBAA5B;AAEA,eAAe,SAASC,aAAT,CAAuBC,QAAvB,EAAiCC,UAAjC,EAA6C;AAC1D,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,YAAW;AACnBS,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACA,UAAMI,GAAG,GAAG,MAAMV,aAAa,CAACE,QAAD,EAAWC,UAAX,CAA/B;AACAI,IAAAA,YAAY,CAACI,MAAM,CAACC,MAAP,CAAcF,GAAd,CAAD,CAAZ;AACD,GAJQ,EAIN,EAJM,CAAT;AAMAZ,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,UAAU,CAAC,IAAD,CAAV;AAED,GAHQ,EAGN,EAHM,CAAT;AAKA,SAAO;AAAED,IAAAA,OAAF;AAAWE,IAAAA,SAAX;AAAsBE,IAAAA;AAAtB,GAAP;AACD","sourcesContent":["import { useEffect, useState } from 'react'\nimport {request_token} from '../tools/ApiCalls'\n\nexport default function useBookSearch(language, pageNumber) {\n  const [loading, setLoading] = useState(true)\n  const [newMovies, setNewMovies] = useState([])\n  const [hasMore, setHasMore] = useState(false)\n\n  useEffect(async() => {\n    setNewMovies(newMovies);\n    const tmp = await request_token(language, pageNumber)\n    setNewMovies(movies.concat(tmp))\n  }, [])\n\n  useEffect(() => {\n    setLoading(true)\n    \n  }, [])\n\n  return { loading, newMovies, hasMore }\n}"]},"metadata":{},"sourceType":"module"}