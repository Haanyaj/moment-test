{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { request_token } from '../tools/ApiCalls';\nexport default function useBookSearch(language, pageNumber, totalPages) {\n  const [loading, setLoading] = useState(true);\n  const [newMovies, setNewMovies] = useState([]);\n  const [hasMore, setHasMore] = useState(true);\n  useEffect(async () => {\n    setLoading(true);\n    setNewMovies(newMovies);\n    const tmp = await request_token(language, pageNumber);\n    setNewMovies(newMovies.concat(tmp));\n    console.log('tmp', tmp);\n  }, []);\n  useEffect(() => {\n    setLoading(false);\n  }, []);\n  return {\n    newMovies,\n    loading,\n    hasMore\n  };\n}","map":{"version":3,"sources":["/home/haan/moment-test/src/components/Pages/useBookSearch.js"],"names":["useEffect","useState","request_token","useBookSearch","language","pageNumber","totalPages","loading","setLoading","newMovies","setNewMovies","hasMore","setHasMore","tmp","concat","console","log"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAAQC,aAAR,QAA4B,mBAA5B;AAEA,eAAe,SAASC,aAAT,CAAuBC,QAAvB,EAAiCC,UAAjC,EAA6CC,UAA7C,EAAyD;AACtE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,YAAW;AACnBQ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACA,UAAMI,GAAG,GAAG,MAAMX,aAAa,CAACE,QAAD,EAAWC,UAAX,CAA/B;AACAK,IAAAA,YAAY,CAACD,SAAS,CAACK,MAAV,CAAiBD,GAAjB,CAAD,CAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,GAAnB;AACD,GANQ,EAMN,EANM,CAAT;AAQAb,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,UAAU,CAAC,KAAD,CAAV;AAED,GAHQ,EAGN,EAHM,CAAT;AAKA,SAAO;AAACC,IAAAA,SAAD;AAAYF,IAAAA,OAAZ;AAAqBI,IAAAA;AAArB,GAAP;AACD","sourcesContent":["import { useEffect, useState } from 'react'\nimport {request_token} from '../tools/ApiCalls'\n\nexport default function useBookSearch(language, pageNumber, totalPages) {\n  const [loading, setLoading] = useState(true)\n  const [newMovies, setNewMovies] = useState([])\n  const [hasMore, setHasMore] = useState(true)\n\n  useEffect(async() => {\n    setLoading(true)\n    setNewMovies(newMovies);\n    const tmp = await request_token(language, pageNumber)\n    setNewMovies(newMovies.concat(tmp))\n    console.log('tmp', tmp)\n  }, [])\n\n  useEffect(() => {\n    setLoading(false)\n    \n  }, [])\n\n  return {newMovies, loading, hasMore }\n}"]},"metadata":{},"sourceType":"module"}