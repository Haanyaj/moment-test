{"ast":null,"code":"import { parse as t, translateX as e, translateY as n, scaleX as i, scaleY as r, multiply as o } from \"rematrix\";\nimport a from \"prop-types\";\nimport s, { createContext as p, Component as l, Children as c, cloneElement as u } from \"react\";\n\nvar f = function (t) {\n  return \"number\" == typeof t;\n},\n    d = function (t) {\n  return \"[object Object]\" === Object.prototype.toString.call(t);\n},\n    h = function (t) {\n  return Array.prototype.slice.apply(t);\n};\n\nfunction g(t) {\n  for (var e = [], n = arguments.length - 1; n-- > 0;) e[n] = arguments[n + 1];\n\n  return e.forEach(function (e) {\n    if (e) for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);\n  }), t;\n}\n\nvar m,\n    v = function (t, e, n) {\n  return t + (e - t) * n;\n},\n    y = {\n  noWobble: {\n    stiffness: 200,\n    damping: 26\n  },\n  gentle: {\n    stiffness: 120,\n    damping: 14\n  },\n  veryGentle: {\n    stiffness: 130,\n    damping: 17\n  },\n  wobbly: {\n    stiffness: 180,\n    damping: 12\n  },\n  stiff: {\n    stiffness: 260,\n    damping: 26\n  }\n},\n    S = function (t) {\n  return d(t) ? t : Object.keys(y).indexOf(t) > -1 ? y[t] : {};\n};\n\n\"undefined\" != typeof window && (m = window.requestAnimationFrame);\n\nvar _ = m = m || function (t) {\n  window.setTimeout(t, 1e3 / 60);\n},\n    E = Date.now(),\n    C = \"object\" == typeof performance && \"function\" == typeof performance.now ? function () {\n  return performance.now();\n} : function () {\n  return Date.now() - E;\n};\n\nfunction A(t, e) {\n  var n = t.indexOf(e);\n  -1 !== n && t.splice(n, 1);\n}\n\nvar b = function () {};\n\nb.prototype.run = function () {\n  var t = this;\n\n  _(function () {\n    t.springSystem.loop(C());\n  });\n};\n\nvar I = function () {\n  this.position = 0, this.velocity = 0;\n},\n    O = 0,\n    x = function (t) {\n  this._id = \"s\" + O++, this._springSystem = t, this.listeners = [], this._startValue = 0, this._currentState = new I(), this._displacementFromRestThreshold = .001, this._endValue = 0, this._overshootClampingEnabled = !1, this._previousState = new I(), this._restSpeedThreshold = .001, this._tempState = new I(), this._timeAccumulator = 0, this._wasAtRest = !0, this._cachedSpringConfig = {};\n};\n\nx.prototype.getId = function () {\n  return this._id;\n}, x.prototype.destroy = function () {\n  this.listeners = [], this._springSystem.deregisterSpring(this);\n}, x.prototype.setSpringConfig = function (t) {\n  return this._springConfig = t, this;\n}, x.prototype.getCurrentValue = function () {\n  return this._currentState.position;\n}, x.prototype.getDisplacementDistanceForState = function (t) {\n  return Math.abs(this._endValue - t.position);\n}, x.prototype.setEndValue = function (t) {\n  if (t === this._endValue) return this;\n  if (this.prevEndValue = t, this._endValue === t && this.isAtRest()) return this;\n  this._startValue = this.getCurrentValue(), this._endValue = t, this._springSystem.activateSpring(this.getId());\n\n  for (var e = 0, n = this.listeners.length; e < n; e++) {\n    var i = this.listeners[e].onSpringEndStateChange;\n    i && i(this);\n  }\n\n  return this;\n}, x.prototype.setVelocity = function (t) {\n  return t === this._currentState.velocity ? this : (this._currentState.velocity = t, this._springSystem.activateSpring(this.getId()), this);\n}, x.prototype.setCurrentValue = function (t) {\n  this._startValue = t, this._currentState.position = t;\n\n  for (var e = 0, n = this.listeners.length; e < n; e++) {\n    var i = this.listeners[e];\n    i.onSpringUpdate && i.onSpringUpdate(this);\n  }\n\n  return this;\n}, x.prototype.setAtRest = function () {\n  return this._endValue = this._currentState.position, this._tempState.position = this._currentState.position, this._currentState.velocity = 0, this;\n}, x.prototype.setOvershootClampingEnabled = function (t) {\n  return this._overshootClampingEnabled = t, this;\n}, x.prototype.isOvershooting = function () {\n  var t = this._startValue,\n      e = this._endValue;\n  return this._springConfig.tension > 0 && (t < e && this.getCurrentValue() > e || t > e && this.getCurrentValue() < e);\n}, x.prototype.advance = function (t, e) {\n  var n = this.isAtRest();\n\n  if (!n || !this._wasAtRest) {\n    var i = e;\n    e > .064 && (i = .064), this._timeAccumulator += i;\n\n    for (var r, o, a, s, p, l, c = this._springConfig.tension, u = this._springConfig.friction, f = this._currentState.position, d = this._currentState.velocity, h = this._tempState.position, g = this._tempState.velocity; this._timeAccumulator >= .001;) this._timeAccumulator -= .001, this._timeAccumulator < .001 && (this._previousState.position = f, this._previousState.velocity = d), o = c * (this._endValue - h) - u * d, s = c * (this._endValue - (h = f + .001 * (r = d) * .5)) - u * (g = d + .001 * o * .5), l = c * (this._endValue - (h = f + .001 * (a = g) * .5)) - u * (g = d + .001 * s * .5), h = f + .001 * (p = g), f += 1 / 6 * (r + 2 * (a + p) + (g = d + .001 * l)) * .001, d += 1 / 6 * (o + 2 * (s + l) + (c * (this._endValue - h) - u * g)) * .001;\n\n    this._tempState.position = h, this._tempState.velocity = g, this._currentState.position = f, this._currentState.velocity = d, this._timeAccumulator > 0 && this._interpolate(this._timeAccumulator / .001), (this.isAtRest() || this._overshootClampingEnabled && this.isOvershooting()) && (this._springConfig.tension > 0 ? (this._startValue = this._endValue, this._currentState.position = this._endValue) : (this._endValue = this._currentState.position, this._startValue = this._endValue), this.setVelocity(0), n = !0);\n    var m = !1;\n    this._wasAtRest && (this._wasAtRest = !1, m = !0);\n    var v = !1;\n    n && (this._wasAtRest = !0, v = !0), this.notifyPositionUpdated(m, v);\n  }\n}, x.prototype.notifyPositionUpdated = function (t, e) {\n  var n = this;\n  this.listeners.filter(Boolean).forEach(function (i) {\n    t && i.onSpringActivate && !n._onActivateCalled && (i.onSpringActivate(n), n._onActivateCalled = !0), i.onSpringUpdate && i.onSpringUpdate(n), e && i.onSpringAtRest && i.onSpringAtRest(n);\n  });\n}, x.prototype.systemShouldAdvance = function () {\n  return !this.isAtRest() || !this.wasAtRest();\n}, x.prototype.wasAtRest = function () {\n  return this._wasAtRest;\n}, x.prototype.isAtRest = function () {\n  return Math.abs(this._currentState.velocity) < this._restSpeedThreshold && (this.getDisplacementDistanceForState(this._currentState) <= this._displacementFromRestThreshold || 0 === this._springConfig.tension);\n}, x.prototype._interpolate = function (t) {\n  this._currentState.position = this._currentState.position * t + this._previousState.position * (1 - t), this._currentState.velocity = this._currentState.velocity * t + this._previousState.velocity * (1 - t);\n}, x.prototype.addListener = function (t) {\n  return this.listeners.push(t), this;\n}, x.prototype.addOneTimeListener = function (t) {\n  var e = this;\n  return Object.keys(t).forEach(function (n) {\n    var i;\n    t[n] = (i = t[n], function () {\n      for (var n = [], r = arguments.length; r--;) n[r] = arguments[r];\n\n      i.apply(void 0, n), e.removeListener(t);\n    });\n  }), this.listeners.push(t), this;\n}, x.prototype.removeListener = function (t) {\n  return A(this.listeners, t), this;\n};\n\nvar w = function (t) {\n  this.looper = t || new b(), this.looper.springSystem = this, this.listeners = [], this._activeSprings = [], this._idleSpringIndices = [], this._isIdle = !0, this._lastTimeMillis = -1, this._springRegistry = {};\n};\n\nw.prototype.createSpring = function (t, e) {\n  return this.createSpringWithConfig({\n    tension: t,\n    friction: e\n  });\n}, w.prototype.createSpringWithConfig = function (t) {\n  var e = new x(this);\n  return this.registerSpring(e), e.setSpringConfig(t), e;\n}, w.prototype.getIsIdle = function () {\n  return this._isIdle;\n}, w.prototype.registerSpring = function (t) {\n  this._springRegistry[t.getId()] = t;\n}, w.prototype.deregisterSpring = function (t) {\n  A(this._activeSprings, t), delete this._springRegistry[t.getId()];\n}, w.prototype.advance = function (t, e) {\n  for (var n = this; this._idleSpringIndices.length > 0;) this._idleSpringIndices.pop();\n\n  for (this._activeSprings.filter(Boolean).forEach(function (i) {\n    i.systemShouldAdvance() ? i.advance(t / 1e3, e / 1e3) : n._idleSpringIndices.push(n._activeSprings.indexOf(i));\n  }); this._idleSpringIndices.length > 0;) {\n    var i = this._idleSpringIndices.pop();\n\n    i >= 0 && this._activeSprings.splice(i, 1);\n  }\n}, w.prototype.loop = function (t) {\n  var e;\n  -1 === this._lastTimeMillis && (this._lastTimeMillis = t - 1);\n  var n = t - this._lastTimeMillis;\n  this._lastTimeMillis = t;\n  var i = 0,\n      r = this.listeners.length;\n\n  for (i = 0; i < r; i++) (e = this.listeners[i]).onBeforeIntegrate && e.onBeforeIntegrate(this);\n\n  for (this.advance(t, n), 0 === this._activeSprings.length && (this._isIdle = !0, this._lastTimeMillis = -1), i = 0; i < r; i++) (e = this.listeners[i]).onAfterIntegrate && e.onAfterIntegrate(this);\n\n  this._isIdle || this.looper.run();\n}, w.prototype.activateSpring = function (t) {\n  var e = this._springRegistry[t];\n  -1 === this._activeSprings.indexOf(e) && this._activeSprings.push(e), this.getIsIdle() && (this._isIdle = !1, this.looper.run());\n};\n\nvar U = new w(),\n    V = function (t) {\n  var e = t.springConfig,\n      n = e.overshootClamping,\n      i = t.getOnUpdateFunc,\n      r = t.onAnimationEnd,\n      o = t.onSpringActivate,\n      a = U.createSpring(e.stiffness, e.damping);\n  a.setOvershootClampingEnabled(!!n);\n  var s = {\n    onSpringActivate: o,\n    onSpringAtRest: function () {\n      a.destroy(), r();\n    },\n    onSpringUpdate: i({\n      spring: a,\n      onAnimationEnd: r\n    })\n  };\n  return a.addListener(s), a;\n},\n    F = function (t) {\n  var e = V(t);\n  return e.setEndValue(1), e;\n},\n    P = function (t, e) {\n  if (void 0 === e && (e = {}), t && t.length) {\n    e.reverse && t.reverse();\n    var n,\n        i = \"number\" != typeof (n = e.speed) ? 1.1 : 1 + Math.min(Math.max(5 * n, 0), 5),\n        r = 1 / Math.max(Math.min(t.length, 100), 10),\n        o = t.map(function (t, e) {\n      var n = t.getOnUpdateFunc;\n      return t.getOnUpdateFunc = function (t) {\n        var a = n(t);\n        return function (t) {\n          var n = t.getCurrentValue();\n          (n = n < .01 ? 0 : n > .99 ? 1 : n) >= r && o[e + 1] && o[e + 1](Math.max(Math.min(n * i, 1), 0)), a(t);\n        };\n      }, t;\n    }).map(function (t) {\n      var e = V(t);\n      if (e) return e.setEndValue.bind(e);\n    }).filter(Boolean);\n    o[0] && o[0](1);\n  }\n},\n    M = function (t) {\n  return [0, 1, 4, 5, 12, 13].map(function (e) {\n    return t[e];\n  });\n},\n    R = function (t) {\n  return t.top < window.innerHeight && t.bottom > 0 && t.left < window.innerWidth && t.right > 0;\n},\n    k = function (t, e) {\n  var n;\n  return g(t, ((n = {})[e[0]] = e[1], n));\n},\n    D = function (t, e) {\n  return h(e ? document.querySelectorAll('[data-portal-key=\"' + e + '\"]') : t.querySelectorAll(\"[data-flip-id]\"));\n},\n    j = function (t) {\n  return t.map(function (t) {\n    return [t, t.getBoundingClientRect()];\n  });\n},\n    T = new w(),\n    K = function (t) {\n  var e = t.values,\n      n = t.onUpdate,\n      i = t.delay;\n  void 0 === i && (i = 0);\n  var r = t.onComplete,\n      o = g({}, y.noWobble, S(t.config)),\n      a = o.overshootClamping,\n      s = T.createSpring(o.stiffness, o.damping);\n  return s.setOvershootClampingEnabled(!!a), s.addListener({\n    onSpringAtRest: function (t) {\n      r && r(), t.destroy();\n    },\n    onSpringUpdate: function (t) {\n      var i = t.getCurrentValue();\n      if (!e) return n(i);\n      var r = Object.keys(e).map(function (t) {\n        return [t, v(e[t][0], e[t][1], i)];\n      }).reduce(function (t, e) {\n        var n;\n        return Object.assign(t, ((n = {})[e[0]] = e[1], n));\n      }, {});\n      n(r);\n    }\n  }), i ? setTimeout(function () {\n    s.setEndValue(1);\n  }, i) : s.setEndValue(1), s;\n},\n    B = p({}),\n    q = p(\"portal\"),\n    W = function (a) {\n  function p() {\n    a.apply(this, arguments), this.inProgressAnimations = {}, this.flipCallbacks = {}, this.el = void 0;\n  }\n\n  return a && (p.__proto__ = a), (p.prototype = Object.create(a && a.prototype)).constructor = p, p.prototype.getSnapshotBeforeUpdate = function (t) {\n    return t.flipKey !== this.props.flipKey && this.el ? function (t) {\n      var e = t.element,\n          n = t.flipCallbacks;\n      void 0 === n && (n = {});\n      var i = t.inProgressAnimations;\n      void 0 === i && (i = {});\n      var r = D(e, t.portalKey),\n          o = h(e.querySelectorAll(\"[data-inverse-flip-id]\")),\n          a = {},\n          s = [],\n          p = {};\n      r.filter(function (t) {\n        return n && n[t.dataset.flipId] && n[t.dataset.flipId].onExit;\n      }).forEach(function (t) {\n        var e = t.parentNode;\n\n        if (t.closest) {\n          var n = t.closest(\"[data-exit-container]\");\n          n && (e = n);\n        }\n\n        var i = s.findIndex(function (t) {\n          return t[0] === e;\n        });\n        -1 === i && (s.push([e, e.getBoundingClientRect()]), i = s.length - 1), a[t.dataset.flipId] = s[i][1], p[t.dataset.flipId] = e;\n      });\n      var l = j(r),\n          c = l.map(function (t) {\n        var e = t[0],\n            i = t[1],\n            r = {};\n\n        if (n && n[e.dataset.flipId] && n[e.dataset.flipId].onExit) {\n          var o = a[e.dataset.flipId];\n          g(r, {\n            element: e,\n            parent: p[e.dataset.flipId],\n            childPosition: {\n              top: i.top - o.top,\n              left: i.left - o.left,\n              width: i.width,\n              height: i.height\n            }\n          });\n        }\n\n        return [e.dataset.flipId, {\n          rect: i,\n          opacity: parseFloat(window.getComputedStyle(e).opacity || \"1\"),\n          domDataForExitAnimations: r\n        }];\n      }).reduce(k, {});\n      return function (t, e) {\n        Object.keys(t).forEach(function (e) {\n          t[e].destroy && t[e].destroy(), t[e].onAnimationEnd && t[e].onAnimationEnd(!0), delete t[e];\n        }), e.forEach(function (t) {\n          t.style.transform = \"\", t.style.opacity = \"\";\n        });\n      }(i, r.concat(o)), {\n        flippedElementPositions: c,\n        cachedOrderedFlipIds: l.map(function (t) {\n          return t[0].dataset.flipId;\n        })\n      };\n    }({\n      element: this.el,\n      flipCallbacks: this.flipCallbacks,\n      inProgressAnimations: this.inProgressAnimations,\n      portalKey: this.props.portalKey\n    }) : null;\n  }, p.prototype.componentDidUpdate = function (a, s, p) {\n    this.props.flipKey !== a.flipKey && this.el && function (a) {\n      var s = a.cachedOrderedFlipIds;\n      void 0 === s && (s = []);\n      var p = a.inProgressAnimations;\n      void 0 === p && (p = {});\n      var l = a.flippedElementPositionsBeforeUpdate;\n      void 0 === l && (l = {});\n      var c = a.flipCallbacks;\n      void 0 === c && (c = {});\n      var u = a.containerEl,\n          d = a.applyTransformOrigin,\n          m = a.spring,\n          _ = a.debug,\n          E = a.portalKey,\n          C = a.staggerConfig;\n      void 0 === C && (C = {});\n      var A = a.decisionData;\n      void 0 === A && (A = {});\n\n      var b = a.handleEnterUpdateDelete,\n          I = a.onComplete,\n          O = a.onStart,\n          x = function (t) {\n        return j(D(t.element, t.portalKey)).map(function (t) {\n          var e = t[0],\n              n = t[1],\n              i = window.getComputedStyle(e);\n          return [e.dataset.flipId, {\n            element: e,\n            rect: n,\n            opacity: parseFloat(i.opacity),\n            transform: i.transform\n          }];\n        }).reduce(k, {});\n      }({\n        element: u,\n        portalKey: E\n      }),\n          w = function (t) {\n        var e = t.containerEl,\n            n = t.portalKey;\n        return n ? function (t) {\n          return function (e) {\n            return h(document.querySelectorAll('[data-portal-key=\"' + t + '\"]' + e));\n          };\n        }(n) : e ? function (t) {\n          var e = Math.random().toFixed(5);\n          return t.dataset.flipperId = e, function (n) {\n            return h(t.querySelectorAll('[data-flipper-id=\"' + e + '\"] ' + n));\n          };\n        }(e) : function () {\n          return [];\n        };\n      }({\n        containerEl: u,\n        portalKey: E\n      }),\n          U = function (t) {\n        return function (e) {\n          return t('[data-flip-id=\"' + e + '\"]')[0];\n        };\n      }(w),\n          V = function (t) {\n        return l[t] && x[t];\n      },\n          T = Object.keys(l).concat(Object.keys(x)).filter(function (t) {\n        return !V(t);\n      }),\n          K = {\n        flipCallbacks: c,\n        getElement: U,\n        flippedElementPositionsBeforeUpdate: l,\n        flippedElementPositionsAfterUpdate: x,\n        inProgressAnimations: p,\n        decisionData: A\n      },\n          B = function (t) {\n        var e,\n            n = t.unflippedIds,\n            i = t.flipCallbacks,\n            r = t.getElement,\n            o = t.flippedElementPositionsBeforeUpdate,\n            a = t.flippedElementPositionsAfterUpdate,\n            s = t.inProgressAnimations,\n            p = t.decisionData,\n            l = n.filter(function (t) {\n          return a[t];\n        }).filter(function (t) {\n          return i[t] && i[t].onAppear;\n        }),\n            c = n.filter(function (t) {\n          return o[t] && i[t] && i[t].onExit;\n        }),\n            u = new Promise(function (t) {\n          e = t;\n        }),\n            f = [],\n            d = 0,\n            h = c.map(function (t, n) {\n          var r = o[t].domDataForExitAnimations,\n              a = r.element,\n              l = r.parent,\n              c = r.childPosition,\n              u = c.top,\n              h = c.left,\n              g = c.width,\n              m = c.height;\n          \"static\" === getComputedStyle(l).position && (l.style.position = \"relative\"), a.style.transform = \"matrix(1, 0, 0, 1, 0, 0)\", a.style.position = \"absolute\", a.style.top = u + \"px\", a.style.left = h + \"px\", a.style.height = m + \"px\", a.style.width = g + \"px\";\n          var v = f.filter(function (t) {\n            return t[0] === l;\n          })[0];\n          v || (v = [l, document.createDocumentFragment()], f.push(v)), v[1].appendChild(a), d += 1;\n\n          var y = function () {\n            try {\n              l.removeChild(a);\n            } catch (t) {} finally {\n              0 == (d -= 1) && e();\n            }\n          };\n\n          return s[t] = {\n            stop: y\n          }, function () {\n            return i[t].onExit(a, n, y, p);\n          };\n        });\n        return f.forEach(function (t) {\n          t[0].appendChild(t[1]);\n        }), h.length || e(), {\n          hideEnteringElements: function () {\n            l.forEach(function (t) {\n              var e = r(t);\n              e && (e.style.opacity = \"0\");\n            });\n          },\n          animateEnteringElements: function () {\n            l.forEach(function (t, e) {\n              var n = r(t);\n              n && i[t].onAppear(n, e, p);\n            });\n          },\n          animateExitingElements: function () {\n            return h.forEach(function (t) {\n              return t();\n            }), u;\n          }\n        };\n      }(g({}, K, {\n        unflippedIds: T\n      })),\n          q = B.hideEnteringElements,\n          W = B.animateEnteringElements,\n          N = B.animateExitingElements,\n          L = g({}, K, {\n        containerEl: u,\n        flippedIds: s.filter(V),\n        applyTransformOrigin: d,\n        spring: m,\n        debug: _,\n        staggerConfig: C,\n        scopedSelector: w,\n        onComplete: I\n      });\n\n      O && O(u, A);\n\n      var X = function (a) {\n        var s = L.flippedIds,\n            p = L.flipCallbacks,\n            l = L.inProgressAnimations,\n            c = L.flippedElementPositionsBeforeUpdate,\n            u = L.flippedElementPositionsAfterUpdate,\n            d = L.applyTransformOrigin,\n            m = L.spring,\n            _ = L.getElement,\n            E = L.debug,\n            C = L.staggerConfig;\n        void 0 === C && (C = {});\n        var A = L.decisionData;\n        void 0 === A && (A = {});\n        var b,\n            I = L.onComplete,\n            O = L.containerEl,\n            x = new Promise(function (t) {\n          b = t;\n        });\n        if (I && x.then(function () {\n          return I(O, A);\n        }), !s.length) return function () {\n          return b([]), x;\n        };\n\n        var w,\n            U = [],\n            V = _(s[0]),\n            k = V ? V.ownerDocument.querySelector(\"body\") : document.querySelector(\"body\");\n\n        w = s.reduce(function (t, e) {\n          return t[e] = (t[e] || 0) + 1, t;\n        }, {}), Object.keys(w).filter(function (t) {\n          return w[t] > 1;\n        });\n        var D = s.map(function (a) {\n          var s = c[a].rect,\n              _ = u[a].rect,\n              E = c[a].opacity,\n              C = u[a].opacity,\n              I = _.width < 1 || _.height < 1,\n              O = u[a].element;\n          if (!R(s) && !R(_)) return !1;\n          if (!O) return !1;\n\n          var x = JSON.parse(O.dataset.flipConfig),\n              w = function (t) {\n            void 0 === t && (t = {});\n            var e = t.flippedSpring;\n            return g({}, y.noWobble, S(t.flipperSpring), S(e));\n          }({\n            flipperSpring: m,\n            flippedSpring: x.spring\n          }),\n              V = !0 === x.stagger ? \"default\" : x.stagger,\n              F = {\n            element: O,\n            id: a,\n            stagger: V,\n            springConfig: w\n          };\n\n          if (p[a] && p[a].shouldFlip && !p[a].shouldFlip(A.previous, A.current)) return !1;\n          var P = Math.abs(s.left - _.left) + Math.abs(s.top - _.top),\n              j = Math.abs(s.width - _.width) + Math.abs(s.height - _.height),\n              T = Math.abs(C - E);\n          if (P < .5 && j < .5 && T < .01) return !1;\n          var K = t(u[a].transform),\n              B = {\n            matrix: K\n          },\n              q = {\n            matrix: []\n          },\n              W = [K];\n          x.translate && (W.push(e(s.left - _.left)), W.push(n(s.top - _.top))), x.scale && (W.push(i(Math.max(s.width, 1) / Math.max(_.width, 1))), W.push(r(Math.max(s.height, 1) / Math.max(_.height, 1)))), x.opacity && (q.opacity = E, B.opacity = C);\n          var N = [];\n\n          if (!p[a] || !p[a].shouldInvert || p[a].shouldInvert(A.previous, A.current)) {\n            var L = function (t, e) {\n              return h(t.querySelectorAll('[data-inverse-flip-id=\"' + e + '\"]'));\n            }(O, a);\n\n            N = L.map(function (t) {\n              return [t, JSON.parse(t.dataset.flipConfig)];\n            });\n          }\n\n          q.matrix = M(W.reduce(o)), B.matrix = M(B.matrix);\n\n          var X,\n              Y = function (t) {\n            var e = t.element,\n                n = t.invertedChildren,\n                i = t.body;\n            return function (t) {\n              var r = t.matrix,\n                  o = t.opacity,\n                  a = t.forceMinVals;\n\n              if (f(o) && (e.style.opacity = o + \"\"), a && (e.style.minHeight = \"1px\", e.style.minWidth = \"1px\"), r) {\n                var s = function (t) {\n                  return \"matrix(\" + t.join(\", \") + \")\";\n                }(r);\n\n                e.style.transform = s, n && function (t) {\n                  var e = t.matrix,\n                      n = t.body;\n                  t.invertedChildren.forEach(function (t) {\n                    var i = t[0],\n                        r = t[1];\n\n                    if (n.contains(i)) {\n                      var o = e[0],\n                          a = e[3],\n                          s = e[5],\n                          p = {\n                        translateX: 0,\n                        translateY: 0,\n                        scaleX: 1,\n                        scaleY: 1\n                      },\n                          l = \"\";\n                      r.translate && (p.translateX = -e[4] / o, p.translateY = -s / a, l += \"translate(\" + p.translateX + \"px, \" + p.translateY + \"px)\"), r.scale && (p.scaleX = 1 / o, p.scaleY = 1 / a, l += \" scale(\" + p.scaleX + \", \" + p.scaleY + \")\"), i.style.transform = l;\n                    }\n                  });\n                }({\n                  invertedChildren: n,\n                  matrix: r,\n                  body: i\n                });\n              }\n            };\n          }({\n            element: O,\n            invertedChildren: N,\n            body: k\n          });\n\n          if (p[a] && p[a].onComplete) {\n            var H = p[a].onComplete;\n\n            X = function () {\n              return H(O, A);\n            };\n          }\n\n          var J = f(q.opacity) && f(B.opacity) && q.opacity !== B.opacity,\n              z = !1;\n          return g({}, F, {\n            stagger: V,\n            springConfig: w,\n            getOnUpdateFunc: function (t) {\n              var e = t.spring,\n                  n = t.onAnimationEnd;\n              return l[a] = {\n                destroy: e.destroy.bind(e),\n                onAnimationEnd: n\n              }, function (t) {\n                p[a] && p[a].onSpringUpdate && p[a].onSpringUpdate(t.getCurrentValue()), z || (z = !0, p[a] && p[a].onStart && p[a].onStart(O, A));\n                var e = t.getCurrentValue();\n\n                if (k.contains(O)) {\n                  var n = {\n                    matrix: []\n                  };\n                  n.matrix = q.matrix.map(function (t, n) {\n                    return v(t, B.matrix[n], e);\n                  }), J && (n.opacity = v(q.opacity, B.opacity, e)), Y(n);\n                } else t.destroy();\n              };\n            },\n            initializeFlip: function () {\n              Y({\n                matrix: q.matrix,\n                opacity: J ? q.opacity : void 0,\n                forceMinVals: I\n              }), p[a] && p[a].onStartImmediate && p[a].onStartImmediate(O, A), x.transformOrigin ? O.style.transformOrigin = x.transformOrigin : d && (O.style.transformOrigin = \"0 0\"), N.forEach(function (t) {\n                var e = t[0],\n                    n = t[1];\n                n.transformOrigin ? e.style.transformOrigin = n.transformOrigin : d && (e.style.transformOrigin = \"0 0\");\n              });\n            },\n            onAnimationEnd: function (t) {\n              delete l[a], \"function\" == typeof X && X(), O.style.transform = \"\", N.forEach(function (t) {\n                t[0].style.transform = \"\";\n              }), I && O && (O.style.minHeight = \"\", O.style.minWidth = \"\"), t || (U.push(a), U.length >= D.length && b(U));\n            },\n            delayUntil: x.delayUntil\n          });\n        }).filter(Boolean);\n        if (D.forEach(function (t) {\n          return (0, t.initializeFlip)();\n        }), E) return function () {};\n        var j = D.filter(function (t) {\n          return t.delayUntil && (e = t.delayUntil, D.filter(function (t) {\n            return t.id === e;\n          }).length);\n          var e;\n        }),\n            T = {},\n            K = {},\n            B = {};\n        j.forEach(function (t) {\n          t.stagger ? (B[t.stagger] = !0, K[t.delayUntil] ? K[t.delayUntil].push(t.stagger) : K[t.delayUntil] = [t.stagger]) : T[t.delayUntil] ? T[t.delayUntil].push(t) : T[t.delayUntil] = [t];\n        });\n        var q = D.filter(function (t) {\n          return t.stagger;\n        }).reduce(function (t, e) {\n          return t[e.stagger] ? t[e.stagger].push(e) : t[e.stagger] = [e], t;\n        }, {}),\n            W = D.filter(function (t) {\n          return -1 === j.indexOf(t);\n        });\n        return W.forEach(function (t) {\n          t.onSpringActivate = function () {\n            T[t.id] && T[t.id].forEach(F), K[t.id] && Object.keys(K[t.id].reduce(function (t, e) {\n              var n;\n              return g(t, ((n = {})[e] = !0, n));\n            }, {})).forEach(function (t) {\n              P(q[t], C[t]);\n            });\n          };\n        }), function () {\n          return D.length || b([]), W.filter(function (t) {\n            return !t.stagger;\n          }).forEach(F), Object.keys(q).forEach(function (t) {\n            B[t] || P(q[t], C[t]);\n          }), x;\n        };\n      }();\n\n      b ? b({\n        hideEnteringElements: q,\n        animateEnteringElements: W,\n        animateExitingElements: N,\n        animateFlippedElements: X\n      }) : (q(), N().then(W), X());\n    }({\n      flippedElementPositionsBeforeUpdate: p.flippedElementPositions,\n      cachedOrderedFlipIds: p.cachedOrderedFlipIds,\n      containerEl: this.el,\n      inProgressAnimations: this.inProgressAnimations,\n      flipCallbacks: this.flipCallbacks,\n      applyTransformOrigin: this.props.applyTransformOrigin,\n      spring: this.props.spring,\n      debug: this.props.debug,\n      portalKey: this.props.portalKey,\n      staggerConfig: this.props.staggerConfig,\n      handleEnterUpdateDelete: this.props.handleEnterUpdateDelete,\n      decisionData: {\n        previous: a.decisionData,\n        current: this.props.decisionData\n      },\n      onComplete: this.props.onComplete,\n      onStart: this.props.onStart\n    });\n  }, p.prototype.render = function () {\n    var t = this,\n        e = this.props,\n        n = e.portalKey,\n        i = s.createElement(B.Provider, {\n      value: this.flipCallbacks\n    }, s.createElement(e.element, {\n      className: e.className,\n      ref: function (e) {\n        return t.el = e;\n      }\n    }, this.props.children));\n    return n && (i = s.createElement(q.Provider, {\n      value: n\n    }, i)), i;\n  }, p;\n}(l);\n\nfunction N(t, e) {\n  var n = {};\n\n  for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && -1 === e.indexOf(i) && (n[i] = t[i]);\n\n  return n;\n}\n\nW.defaultProps = {\n  applyTransformOrigin: !0,\n  element: \"div\"\n};\n\nvar L = function (t) {\n  var e = t.children,\n      n = t.flipId,\n      i = t.inverseFlipId,\n      r = t.portalKey,\n      o = N(t, [\"children\", \"flipId\", \"inverseFlipId\", \"portalKey\"]),\n      a = e,\n      s = function (t) {\n    return \"function\" == typeof t;\n  }(a);\n\n  if (!s) try {\n    a = c.only(e);\n  } catch (t) {\n    throw new Error(\"Each Flipped component must wrap a single child\");\n  }\n  o.scale || o.translate || o.opacity || g(o, {\n    translate: !0,\n    scale: !0,\n    opacity: !0\n  });\n  var p = {};\n  return p[\"data-flip-config\"] = JSON.stringify(o), n ? p[\"data-flip-id\"] = String(n) : i && (p[\"data-inverse-flip-id\"] = String(i)), r && (p[\"data-portal-key\"] = r), s ? a(p) : u(a, p);\n},\n    X = function (t) {\n  var e = t.children,\n      n = t.flipId,\n      i = t.shouldFlip,\n      r = t.shouldInvert,\n      o = t.onAppear,\n      a = t.onStart,\n      p = t.onStartImmediate,\n      l = t.onComplete,\n      c = t.onExit,\n      u = t.onSpringUpdate,\n      f = N(t, [\"children\", \"flipId\", \"shouldFlip\", \"shouldInvert\", \"onAppear\", \"onStart\", \"onStartImmediate\", \"onComplete\", \"onExit\", \"onSpringUpdate\"]);\n  return e ? f.inverseFlipId ? s.createElement(L, Object.assign({}, f), e) : s.createElement(q.Consumer, null, function (t) {\n    return s.createElement(B.Consumer, null, function (h) {\n      return d(h) && n && (h[n] = {\n        shouldFlip: i,\n        shouldInvert: r,\n        onAppear: o,\n        onStart: a,\n        onStartImmediate: p,\n        onComplete: l,\n        onExit: c,\n        onSpringUpdate: u\n      }), s.createElement(L, Object.assign({\n        flipId: n\n      }, f, {\n        portalKey: t\n      }), e);\n    });\n  }) : null;\n};\n\nX.displayName = \"Flipped\";\n\nvar Y = function (t) {\n  var e;\n  return u(t.children, ((e = {})[\"data-exit-container\"] = !0, e));\n};\n\nexport { W as Flipper, X as Flipped, Y as ExitContainer, K as spring };","map":{"version":3,"sources":["../src/FlipToolkit/utilities/index.ts","../src/FlipToolkit/forked-rebound/onFrame.js","../src/FlipToolkit/springSettings/index.ts","../src/FlipToolkit/forked-rebound/util.js","../src/FlipToolkit/forked-rebound/Loopers.js","../src/FlipToolkit/forked-rebound/Spring.js","../src/FlipToolkit/forked-rebound/SpringSystem.js","../src/FlipToolkit/flip/animateFlippedElements/spring/index.ts","../src/FlipToolkit/flip/animateFlippedElements/index.ts","../src/FlipToolkit/flip/getFlippedElementPositions/utilities.ts","../src/FlipToolkit/Spring/index.ts","../src/Flipper/context.ts","../src/Flipper/index.tsx","../src/FlipToolkit/flip/getFlippedElementPositions/getFlippedElementPositionsBeforeUpdate/index.ts","../src/FlipToolkit/flip/index.ts","../src/FlipToolkit/flip/getFlippedElementPositions/getFlippedElementPositionsAfterUpdate/index.ts","../src/FlipToolkit/flip/animateUnflippedElements/index.ts","../src/Flipped/index.tsx","../src/FlipToolkit/constants.ts","../src/ExitContainer/index.tsx"],"names":["const","isNumber","x","isObject","Object","prototype","toString","call","toArray","arrayLike","Array","slice","apply","obj","reduce","acc","curr","keys","filter","val","assign","target","args","forEach","arg","nextKey","hasOwnProperty","tweenProp","start","end","position","_onFrame","window","requestAnimationFrame","callback","setTimeout","springPresets","noWobble","stiffness","damping","gentle","veryGentle","wobbly","stiff","normalizeSpring","spring","indexOf","ref","flippedSpring","Date","now","performanceNow","performance","removeFirst","array","item","idx","splice","AnimationLooper","run","springSystem","loop","PhysicsState","constructor","velocity","ID","Spring","_id","_springSystem","listeners","_startValue","_currentState","_displacementFromRestThreshold","_endValue","_overshootClampingEnabled","_previousState","_restSpeedThreshold","_tempState","_timeAccumulator","_wasAtRest","_cachedSpringConfig","getId","this","destroy","deregisterSpring","setSpringConfig","springConfig","_springConfig","getCurrentValue","getDisplacementDistanceForState","state","Math","abs","setEndValue","endValue","prevEndValue","isAtRest","activateSpring","let","i","len","length","onChange","onSpringEndStateChange","setVelocity","setCurrentValue","currentValue","listener","onSpringUpdate","setAtRest","setOvershootClampingEnabled","enabled","isOvershooting","tension","advance","time","realDeltaTime","adjustedDeltaTime","friction","tempPosition","tempVelocity","aVelocity","aAcceleration","bVelocity","bAcceleration","cVelocity","cAcceleration","_interpolate","notifyActivate","notifyAtRest","notifyPositionUpdated","Boolean","onSpringActivate","_onActivateCalled","onSpringAtRest","systemShouldAdvance","wasAtRest","alpha","addListener","newListener","push","addOneTimeListener","func","removeListener","key","listenerToRemove","SpringSystem","looper","_activeSprings","_idleSpringIndices","_isIdle","_lastTimeMillis","_springRegistry","createSpring","createSpringWithConfig","registerSpring","getIsIdle","deltaTime","pop","currentTimeMillis","ellapsedMillis","onBeforeIntegrate","onAfterIntegrate","springId","createSuspendedSpring","flipData","overshootClamping","onAnimationEnd","getOnUpdateFunc","flipped","speedConfig","min","max","createStaggeredSprings","flippedArray","staggerConfig","reverse","normalizedSpeed","speed","nextThreshold","setEndValueFuncs","map","cachedGetOnUpdate","onUpdate","bind","convertMatrix3dArrayTo2dArray","matrix","index","join","body","contains","child","scaleX","scaleY","translateY","inverseVals","translateX","transformString","childFlipConfig","translate","scale","style","transform","opacity","element","forceMinVals","minHeight","minWidth","stringTransform","convertMatrix2dArrayToString","invertedChildren","invertTransformsForChildren","rectInViewport","innerHeight","innerWidth","id","querySelectorAll","closureResolve","flipCompletedPromise","Promise","resolve","onComplete","then","containerEl","decisionData","flippedIds","completedAnimationIds","firstElement","getElement","ownerDocument","querySelector","document","flipDataArray","prevRect","flippedElementPositionsBeforeUpdate","rect","currentRect","flippedElementPositionsAfterUpdate","prevOpacity","currentOpacity","needsForcedMinVals","width","height","flipConfig","JSON","parse","dataset","getSpringConfig","flipperSpring","stagger","toReturn","flipCallbacks","shouldFlip","previous","current","left","top","translateDifference","scaleDifference","opacityDifference","currentTransform","Rematrix","toVals","fromVals","transformsArray","shouldInvert","invertedChildElements","getInvertedChildren","c","applyStyles","createApplyStylesFunc","cachedOnComplete","isCancellation","inProgressAnimations","animateOpacity","onStartCalled","onStart","vals","fromVal","undefined","onStartImmediate","transformOrigin","applyTransformOrigin","delayUntil","initializeFlip","debug","flipId","f","delayedFlip","delayUntilSprings","delayUntilStaggers","delayedStaggerKeys","flip","staggerDict","immediateFlip","staggerKey","addTupleToObject","getAllElements","portalKey","getRects","flippedElements","getBoundingClientRect","createSimpleSpring","springVal","values","currentValues","value","delay","FlipContext","createContext","PortalContext","Flipper","Component","getSnapshotBeforeUpdate","prevProps","flipKey","props","el","getFlippedElementPositionsBeforeUpdate","componentDidUpdate","_prevState","cachedData","onFlipKeyUpdate","flippedElementPositions","cachedOrderedFlipIds","handleEnterUpdateDelete","render","flipperMarkup","React","Provider","className","children","animatingElements","inverseFlippedElements","childIdsToParentBCRs","parentBCRs","childIdsToParents","onExit","parent","parentNode","closest","exitContainer","bcrIndex","findIndex","n","filteredFlippedElements","domDataForExitAnimations","parentBCR","childPosition","childBCR","parseFloat","getComputedStyle","cancelInProgressAnimations","concat","selector","tempFlipperId","random","toFixed","flipperId","createPortalScopedSelector","createFlipperScopedSelector","scopedSelector","getFlippedElementPositionsAfterUpdate","createScopedSelector","createGetElementFunc","isFlipped","unflippedIds","baseArgs","animateUnflippedElements","animateFlippedElementsArgs","animateFlippedElements","hideEnteringElements","animateEnteringElements","animateExitingElements","computedStyle","animatedEnteringElementIds","onAppear","animatedExitingElementIds","promiseToReturn","fragmentTuples","exitingElementCount","onExitCallbacks","fragmentTuple","t","createDocumentFragment","appendChild","stop","removeChild","DOMException","Flipped","isFunctionAsChildren","isFunction","Children","only","e","Error","rest","utilities","dataAttributes","stringify","String","inverseFlipId","cloneElement","FlippedWithContext","Consumer","data","displayName","ExitContainer"],"mappings":"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","sourcesContent":["import { IndexableObject } from './types'\n\nexport const isNumber = (x: any) => typeof x === 'number'\n\nexport const isFunction = (x: any) => typeof x === 'function'\n\nexport const isObject = (x: any) =>\n  Object.prototype.toString.call(x) === '[object Object]'\n\nexport const toArray = (arrayLike: ArrayLike<any>) =>\n  Array.prototype.slice.apply(arrayLike)\n\nexport const getDuplicateValsAsStrings = (arr: string[]): string[] => {\n  const baseObj: IndexableObject = {}\n  const obj = arr.reduce((acc, curr) => {\n    acc[curr] = (acc[curr] || 0) + 1\n    return acc\n  }, baseObj)\n  return Object.keys(obj).filter(val => obj[val] > 1)\n}\n\n// tslint only likes this with a regular function, not an arrow function\nexport function assign(\n  target: IndexableObject,\n  ...args: IndexableObject[]\n): object {\n  args.forEach(arg => {\n    if (!arg) {\n      return\n    }\n    // Skip over if undefined or null\n    for (const nextKey in arg) {\n      // Avoid bugs when hasOwnProperty is shadowed\n      if (Object.prototype.hasOwnProperty.call(arg, nextKey)) {\n        target[nextKey] = arg[nextKey]\n      }\n    }\n  })\n  return target\n}\n\nexport const tweenProp = (start: number, end: number, position: number) =>\n  start + (end - start) * position\n","/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n *\n */\n\nlet _onFrame\nif (typeof window !== \"undefined\") {\n  _onFrame = window.requestAnimationFrame\n}\n\n_onFrame =\n  _onFrame ||\n  function(callback) {\n    window.setTimeout(callback, 1000 / 60)\n  }\n\nexport default _onFrame\n","import { isObject, assign } from '../utilities'\nimport { SpringPresets, SpringConfig, SpringOption } from './types'\n\n// adapted from\n// https://github.com/chenglou/react-motion/blob/master/src/presets.js\nexport const springPresets: SpringPresets = {\n  noWobble: { stiffness: 200, damping: 26 },\n  gentle: { stiffness: 120, damping: 14 },\n  veryGentle: { stiffness: 130, damping: 17 },\n  wobbly: { stiffness: 180, damping: 12 },\n  stiff: { stiffness: 260, damping: 26 }\n}\n\nfunction argIsSpringConfig(\n  arg: SpringConfig | keyof SpringPresets | undefined\n): arg is SpringConfig {\n  return isObject(arg)\n}\n\nexport const normalizeSpring = (\n  spring?: SpringConfig | keyof SpringPresets | any\n) => {\n  if (argIsSpringConfig(spring)) {\n    return spring\n  } else if (Object.keys(springPresets).indexOf(spring) > -1) {\n    return springPresets[spring]\n  } else {\n    return {}\n  }\n}\n\nexport const getSpringConfig = ({\n  flipperSpring,\n  flippedSpring\n}: { flipperSpring?: SpringOption; flippedSpring?: SpringOption } = {}) => {\n  return assign(\n    {},\n    springPresets.noWobble,\n    normalizeSpring(flipperSpring),\n    normalizeSpring(flippedSpring)\n  )\n}\n","/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n *\n */\n\nexport { default as onFrame } from './onFrame'\n\nconst start = Date.now()\nexport const performanceNow =\n  typeof performance === 'object' && typeof performance.now === 'function'\n    ? () => performance.now()\n    : () => Date.now() - start\n\n// Lop off the first occurence of the reference in the Array.\nexport function removeFirst(array, item) {\n  const idx = array.indexOf(item)\n  idx !== -1 && array.splice(idx, 1)\n}\n","/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n *\n */\n\nimport { onFrame, performanceNow } from \"./util\"\n\n/**\n * Plays each frame of the SpringSystem on animation\n * timing loop. This is the default type of looper for a new spring system\n * as it is the most common when developing UI.\n * @public\n */\nexport class AnimationLooper {\n  run() {\n    onFrame(() => {\n      this.springSystem.loop(performanceNow())\n    })\n  }\n}\n","/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n *\n */\n\nimport { removeFirst } from './util'\n\nclass PhysicsState {\n  constructor() {\n    this.position = 0\n    this.velocity = 0\n  }\n}\n\nlet ID = 0\nconst MAX_DELTA_TIME_SEC = 0.064\nconst SOLVER_TIMESTEP_SEC = 0.001\n\n/**\n * Provides a model of a classical spring acting to\n * resolve a body to equilibrium. Springs have configurable\n * tension which is a force multipler on the displacement of the\n * spring from its rest point or `endValue` as defined by [Hooke's\n * law](http://en.wikipedia.org/wiki/Hooke's_law). Springs also have\n * configurable friction, which ensures that they do not oscillate\n * infinitely. When a Spring is displaced by updating it's resting\n * or `currentValue`, the SpringSystems that contain that Spring\n * will automatically start looping to solve for equilibrium. As each\n * timestep passes, `SpringListener` objects attached to the Spring\n * will be notified of the updates providing a way to drive an\n * animation off of the spring's resolution curve.\n * @public\n */\nclass Spring {\n  constructor(springSystem) {\n    this._id = `s${ID++}`\n    this._springSystem = springSystem\n\n    this.listeners = []\n    this._startValue = 0\n\n    this._currentState = new PhysicsState()\n    this._displacementFromRestThreshold = 0.001\n    this._endValue = 0\n    this._overshootClampingEnabled = false\n    this._previousState = new PhysicsState()\n    this._restSpeedThreshold = 0.001\n\n    this._tempState = new PhysicsState()\n    this._timeAccumulator = 0\n    this._wasAtRest = true\n    // hack from alex -- only call 1x\n    this._onActivateCalled\n    this._cachedSpringConfig = {}\n  }\n\n  getId() {\n    return this._id\n  }\n\n  /**\n   * Remove a Spring from simulation and clear its listeners.\n   * @public\n   */\n  destroy() {\n    this.listeners = []\n    this._springSystem.deregisterSpring(this)\n  }\n\n  /**\n   * Set the configuration values for this Spring. A SpringConfig\n   * contains the tension and friction values used to solve for the\n   * equilibrium of the Spring in the physics loop.\n   * @public\n   */\n  setSpringConfig(springConfig) {\n    this._springConfig = springConfig\n    return this\n  }\n  /**\n   * Retrieve the current value of the Spring.\n   * @public\n   */\n  getCurrentValue() {\n    return this._currentState.position\n  }\n\n  /**\n   * Get the absolute distance of the Spring from a given state value\n   */\n  getDisplacementDistanceForState(state) {\n    return Math.abs(this._endValue - state.position)\n  }\n\n  /**\n   * Set the endValue or resting position of the spring. If this\n   * value is different than the current value, the SpringSystem will\n   * be notified and will begin running its solver loop to resolve\n   * the Spring to equilibrium. Any listeners that are registered\n   * for onSpringEndStateChange will also be notified of this update\n   * immediately.\n   * @public\n   */\n\n  setEndValue(endValue) {\n    if (endValue === this._endValue) return this\n    this.prevEndValue = endValue\n    if (this._endValue === endValue && this.isAtRest()) {\n      return this\n    }\n    this._startValue = this.getCurrentValue()\n    this._endValue = endValue\n    this._springSystem.activateSpring(this.getId())\n    for (let i = 0, len = this.listeners.length; i < len; i++) {\n      const listener = this.listeners[i]\n      const onChange = listener.onSpringEndStateChange\n      onChange && onChange(this)\n    }\n    return this\n  }\n\n  /**\n   * Set the current velocity of the Spring, in pixels per second. As\n   * previously mentioned, this can be useful when you are performing\n   * a direct manipulation gesture. When a UI element is released you\n   * may call setVelocity on its animation Spring so that the Spring\n   * continues with the same velocity as the gesture ended with. The\n   * friction, tension, and displacement of the Spring will then\n   * govern its motion to return to rest on a natural feeling curve.\n   * @public\n   */\n  setVelocity(velocity) {\n    if (velocity === this._currentState.velocity) {\n      return this\n    }\n    this._currentState.velocity = velocity\n    this._springSystem.activateSpring(this.getId())\n    return this\n  }\n\n  setCurrentValue(currentValue) {\n    this._startValue = currentValue\n    this._currentState.position = currentValue\n    for (var i = 0, len = this.listeners.length; i < len; i++) {\n      var listener = this.listeners[i]\n      listener.onSpringUpdate && listener.onSpringUpdate(this)\n    }\n    return this\n  }\n\n  setAtRest() {\n    this._endValue = this._currentState.position\n    this._tempState.position = this._currentState.position\n    this._currentState.velocity = 0\n    return this\n  }\n\n  /**\n   * Enable overshoot clamping. This means that the Spring will stop\n   * immediately when it reaches its resting position regardless of\n   * any existing momentum it may have. This can be useful for certain\n   * types of animations that should not oscillate such as a scale\n   * down to 0 or alpha fade.\n   * @public\n   */\n  setOvershootClampingEnabled(enabled) {\n    this._overshootClampingEnabled = enabled\n    return this\n  }\n\n  /**\n   * Check if the Spring has gone past its end point by comparing\n   * the direction it was moving in when it started to the current\n   * position and end value.\n   * @public\n   */\n  isOvershooting() {\n    const start = this._startValue\n    const end = this._endValue\n    return (\n      this._springConfig.tension > 0 &&\n      ((start < end && this.getCurrentValue() > end) ||\n        (start > end && this.getCurrentValue() < end))\n    )\n  }\n\n  /**\n   * The main solver method for the Spring. It takes\n   * the current time and delta since the last time step and performs\n   * an RK4 integration to get the new position and velocity state\n   * for the Spring based on the tension, friction, velocity, and\n   * displacement of the Spring.\n   * @public\n   */\n  advance(time, realDeltaTime) {\n    let isAtRest = this.isAtRest()\n\n    if (isAtRest && this._wasAtRest) {\n      return\n    }\n\n    let adjustedDeltaTime = realDeltaTime\n    if (realDeltaTime > MAX_DELTA_TIME_SEC) {\n      adjustedDeltaTime = MAX_DELTA_TIME_SEC\n    }\n\n    this._timeAccumulator += adjustedDeltaTime\n\n    const tension = this._springConfig.tension\n    const friction = this._springConfig.friction\n    let position = this._currentState.position\n    let velocity = this._currentState.velocity\n    let tempPosition = this._tempState.position\n    let tempVelocity = this._tempState.velocity\n    let aVelocity\n    let aAcceleration\n    let bVelocity\n    let bAcceleration\n    let cVelocity\n    let cAcceleration\n    let dVelocity\n    let dAcceleration\n    let dxdt\n    let dvdt\n\n    while (this._timeAccumulator >= SOLVER_TIMESTEP_SEC) {\n      this._timeAccumulator -= SOLVER_TIMESTEP_SEC\n\n      if (this._timeAccumulator < SOLVER_TIMESTEP_SEC) {\n        this._previousState.position = position\n        this._previousState.velocity = velocity\n      }\n\n      aVelocity = velocity\n      aAcceleration =\n        tension * (this._endValue - tempPosition) - friction * velocity\n\n      tempPosition = position + aVelocity * SOLVER_TIMESTEP_SEC * 0.5\n      tempVelocity = velocity + aAcceleration * SOLVER_TIMESTEP_SEC * 0.5\n      bVelocity = tempVelocity\n      bAcceleration =\n        tension * (this._endValue - tempPosition) - friction * tempVelocity\n\n      tempPosition = position + bVelocity * SOLVER_TIMESTEP_SEC * 0.5\n      tempVelocity = velocity + bAcceleration * SOLVER_TIMESTEP_SEC * 0.5\n      cVelocity = tempVelocity\n      cAcceleration =\n        tension * (this._endValue - tempPosition) - friction * tempVelocity\n\n      tempPosition = position + cVelocity * SOLVER_TIMESTEP_SEC\n      tempVelocity = velocity + cAcceleration * SOLVER_TIMESTEP_SEC\n      dVelocity = tempVelocity\n      dAcceleration =\n        tension * (this._endValue - tempPosition) - friction * tempVelocity\n\n      dxdt =\n        (1.0 / 6.0) * (aVelocity + 2.0 * (bVelocity + cVelocity) + dVelocity)\n      dvdt =\n        (1.0 / 6.0) *\n        (aAcceleration + 2.0 * (bAcceleration + cAcceleration) + dAcceleration)\n\n      position += dxdt * SOLVER_TIMESTEP_SEC\n      velocity += dvdt * SOLVER_TIMESTEP_SEC\n    }\n\n    this._tempState.position = tempPosition\n    this._tempState.velocity = tempVelocity\n\n    this._currentState.position = position\n    this._currentState.velocity = velocity\n\n    if (this._timeAccumulator > 0) {\n      this._interpolate(this._timeAccumulator / SOLVER_TIMESTEP_SEC)\n    }\n\n    if (\n      this.isAtRest() ||\n      (this._overshootClampingEnabled && this.isOvershooting())\n    ) {\n      if (this._springConfig.tension > 0) {\n        this._startValue = this._endValue\n        this._currentState.position = this._endValue\n      } else {\n        this._endValue = this._currentState.position\n        this._startValue = this._endValue\n      }\n      this.setVelocity(0)\n      isAtRest = true\n    }\n\n    let notifyActivate = false\n    if (this._wasAtRest) {\n      this._wasAtRest = false\n      notifyActivate = true\n    }\n\n    let notifyAtRest = false\n    if (isAtRest) {\n      this._wasAtRest = true\n      notifyAtRest = true\n    }\n\n    this.notifyPositionUpdated(notifyActivate, notifyAtRest)\n  }\n\n  notifyPositionUpdated(notifyActivate, notifyAtRest) {\n    this.listeners.filter(Boolean).forEach(listener => {\n      if (\n        notifyActivate &&\n        listener.onSpringActivate &&\n        !this._onActivateCalled\n      ) {\n        listener.onSpringActivate(this)\n        this._onActivateCalled = true\n      }\n\n      if (listener.onSpringUpdate) {\n        listener.onSpringUpdate(this)\n      }\n\n      if (notifyAtRest && listener.onSpringAtRest) {\n        listener.onSpringAtRest(this)\n      }\n    })\n  }\n\n  /**\n   * Check if the SpringSystem should advance. Springs are advanced\n   * a final frame after they reach equilibrium to ensure that the\n   * currentValue is exactly the requested endValue regardless of the\n   * displacement threshold.\n   * @public\n   */\n  systemShouldAdvance() {\n    return !this.isAtRest() || !this.wasAtRest()\n  }\n\n  wasAtRest() {\n    return this._wasAtRest\n  }\n\n  /**\n   * Check if the Spring is atRest meaning that it's currentValue and\n   * endValue are the same and that it has no velocity. The previously\n   * described thresholds for speed and displacement define the bounds\n   * of this equivalence check. If the Spring has 0 tension, then it will\n   * be considered at rest whenever its absolute velocity drops below the\n   * restSpeedThreshold.\n   * @public\n   */\n  isAtRest() {\n    const isAtRest =\n      Math.abs(this._currentState.velocity) < this._restSpeedThreshold &&\n      (this.getDisplacementDistanceForState(this._currentState) <=\n        this._displacementFromRestThreshold ||\n        this._springConfig.tension === 0)\n    return isAtRest\n  }\n\n  _interpolate(alpha) {\n    this._currentState.position =\n      this._currentState.position * alpha +\n      this._previousState.position * (1 - alpha)\n    this._currentState.velocity =\n      this._currentState.velocity * alpha +\n      this._previousState.velocity * (1 - alpha)\n  }\n\n  addListener(newListener) {\n    this.listeners.push(newListener)\n    return this\n  }\n\n  addOneTimeListener(newListener) {\n    const oneTimeFunc = func => (...args) => {\n      func(...args)\n      this.removeListener(newListener)\n    }\n    Object.keys(newListener).forEach(key => {\n      newListener[key] = oneTimeFunc(newListener[key])\n    })\n    this.listeners.push(newListener)\n    return this\n  }\n\n  removeListener(listenerToRemove) {\n    removeFirst(this.listeners, listenerToRemove)\n    return this\n  }\n}\n\nexport default Spring\n","//\n/**\n *  Copyright (c) 2013, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n */\n\nimport { AnimationLooper } from './Loopers'\nimport Spring from './Spring'\nimport { removeFirst } from './util'\n\n/**\n * A set of Springs that all run on the same physics\n * timing loop. To get started with a Rebound animation, first\n * create a new SpringSystem and then add springs to it.\n * @public\n */\nclass SpringSystem {\n  constructor(looper) {\n    this.looper = looper || new AnimationLooper()\n    this.looper.springSystem = this\n\n    this.listeners = []\n    this._activeSprings = []\n    this._idleSpringIndices = []\n    this._isIdle = true\n    this._lastTimeMillis = -1\n    this._springRegistry = {}\n  }\n\n  /**\n   * Add a new spring to this SpringSystem. This Spring will now be solved for\n   * during the physics iteration loop. By default the spring will use the\n   * default Origami spring config with 40 tension and 7 friction, but you can\n   * also provide your own values here.\n   * @public\n   */\n  createSpring(tension, friction) {\n    return this.createSpringWithConfig({ tension, friction })\n  }\n  /**\n   * Add a spring with the provided SpringConfig.\n   * @public\n   */\n  createSpringWithConfig(springConfig) {\n    const spring = new Spring(this)\n    this.registerSpring(spring)\n    spring.setSpringConfig(springConfig)\n    return spring\n  }\n\n  /**\n   * Check if a SpringSystem is idle or active. If all of the Springs in the\n   * SpringSystem are at rest, i.e. the physics forces have reached equilibrium,\n   * then this method will return true.\n   * @public\n   */\n  getIsIdle() {\n    return this._isIdle\n  }\n\n  /**\n   * Manually add a spring to this system. This is called automatically\n   * if a Spring is created with SpringSystem#createSpring.\n   *\n   * This method sets the spring up in the registry so that it can be solved\n   * in the solver loop.\n   * @public\n   */\n  registerSpring(spring) {\n    this._springRegistry[spring.getId()] = spring\n  }\n\n  /**\n   * Deregister a spring with this SpringSystem. The SpringSystem will\n   * no longer consider this Spring during its integration loop once\n   * this is called. This is normally done automatically for you when\n   * you call Spring#destroy.\n   * @public\n   */\n  deregisterSpring(spring) {\n    removeFirst(this._activeSprings, spring)\n    delete this._springRegistry[spring.getId()]\n  }\n\n  advance(time, deltaTime) {\n    while (this._idleSpringIndices.length > 0) {\n      this._idleSpringIndices.pop()\n    }\n    this._activeSprings.filter(Boolean).forEach(spring => {\n      if (spring.systemShouldAdvance()) {\n        spring.advance(time / 1000.0, deltaTime / 1000.0)\n      } else {\n        this._idleSpringIndices.push(this._activeSprings.indexOf(spring))\n      }\n    })\n\n    while (this._idleSpringIndices.length > 0) {\n      const idx = this._idleSpringIndices.pop()\n      idx >= 0 && this._activeSprings.splice(idx, 1)\n    }\n  }\n\n  /**\n   * This is the main solver loop called to move the simulation\n   * forward through time. Before each pass in the solver loop\n   * onBeforeIntegrate is called on an any listeners that have\n   * registered themeselves with the SpringSystem. This gives you\n   * an opportunity to apply any constraints or adjustments to\n   * the springs that should be enforced before each iteration\n   * loop. Next the advance method is called to move each Spring in\n   * the systemShouldAdvance forward to the current time. After the\n   * integration step runs in advance, onAfterIntegrate is called\n   * on any listeners that have registered themselves with the\n   * SpringSystem. This gives you an opportunity to run any post\n   * integration constraints or adjustments on the Springs in the\n   * SpringSystem.\n   * @public\n   */\n  loop(currentTimeMillis) {\n    let listener\n    if (this._lastTimeMillis === -1) {\n      this._lastTimeMillis = currentTimeMillis - 1\n    }\n    const ellapsedMillis = currentTimeMillis - this._lastTimeMillis\n    this._lastTimeMillis = currentTimeMillis\n\n    let i = 0\n    const len = this.listeners.length\n    for (i = 0; i < len; i++) {\n      listener = this.listeners[i]\n      listener.onBeforeIntegrate && listener.onBeforeIntegrate(this)\n    }\n\n    this.advance(currentTimeMillis, ellapsedMillis)\n    if (this._activeSprings.length === 0) {\n      this._isIdle = true\n      this._lastTimeMillis = -1\n    }\n\n    for (i = 0; i < len; i++) {\n      listener = this.listeners[i]\n      listener.onAfterIntegrate && listener.onAfterIntegrate(this)\n    }\n\n    if (!this._isIdle) {\n      this.looper.run()\n    }\n  }\n\n  /**\n   * Used to notify the SpringSystem that a Spring has become displaced.\n   * The system responds by starting its solver loop up if it is currently idle.\n   */\n  activateSpring(springId) {\n    const spring = this._springRegistry[springId]\n    if (this._activeSprings.indexOf(spring) === -1) {\n      this._activeSprings.push(spring)\n    }\n    if (this.getIsIdle()) {\n      this._isIdle = false\n      this.looper.run()\n    }\n  }\n}\n\nexport default SpringSystem\n","import { SpringSystem } from '../../../forked-rebound'\nimport { StaggerConfigValue } from '../../../types'\nimport { FlipData, FlipDataArray } from '../types'\nimport {\n  SpringSystemInterface,\n  AddListenerArgs\n} from '../../../forked-rebound/types'\n\n// this should get created only 1x\nconst springSystem: SpringSystemInterface = new SpringSystem()\n\nexport const createSuspendedSpring = (flipData: FlipData) => {\n  const {\n    springConfig: { stiffness, damping, overshootClamping },\n    getOnUpdateFunc,\n    onAnimationEnd,\n    onSpringActivate\n  } = flipData\n\n  const spring = springSystem.createSpring(stiffness!, damping!)\n  spring.setOvershootClampingEnabled(!!overshootClamping)\n  const onSpringAtRest = () => {\n    // prevent SpringSystem from caching unused springs\n    spring.destroy()\n    onAnimationEnd()\n  }\n\n  const springConfig: AddListenerArgs = {\n    onSpringActivate,\n    onSpringAtRest,\n    onSpringUpdate: getOnUpdateFunc({\n      spring,\n      onAnimationEnd\n    })\n  }\n\n  spring.addListener(springConfig)\n  return spring\n}\n\nexport const createSpring = (flipped: FlipData) => {\n  const spring = createSuspendedSpring(flipped)\n  spring.setEndValue(1)\n  return spring\n}\n\nexport const normalizeSpeed = (speedConfig: number | undefined) => {\n  if (typeof speedConfig !== 'number') return 1.1\n  return 1 + Math.min(Math.max(speedConfig * 5, 0), 5)\n}\n\nexport const createStaggeredSprings = (\n  flippedArray: FlipDataArray,\n  staggerConfig: StaggerConfigValue = {}\n) => {\n  if (!flippedArray || !flippedArray.length) {\n    return\n  }\n\n  if (staggerConfig.reverse) {\n    flippedArray.reverse()\n  }\n\n  const normalizedSpeed = normalizeSpeed(staggerConfig.speed)\n\n  const nextThreshold = 1 / Math.max(Math.min(flippedArray.length, 100), 10)\n\n  const setEndValueFuncs = flippedArray\n    .map((flipped, i) => {\n      const cachedGetOnUpdate = flipped.getOnUpdateFunc\n\n      // modify the update function to adjust\n      // the end value of the trailing Flipped component\n      flipped.getOnUpdateFunc = args => {\n        const onUpdate = cachedGetOnUpdate(args)\n        return spring => {\n          let currentValue = spring.getCurrentValue()\n          // make sure trailing animations complete\n          currentValue =\n            currentValue < 0.01 ? 0 : currentValue > 0.99 ? 1 : currentValue\n\n          const updateTrailingAnimation = currentValue >= nextThreshold\n          if (updateTrailingAnimation) {\n            if (setEndValueFuncs[i + 1]) {\n              setEndValueFuncs[i + 1]!(\n                Math.max(Math.min(currentValue * normalizedSpeed, 1), 0)\n              )\n            }\n          }\n          // now call the actual update function\n          onUpdate(spring)\n        }\n      }\n      return flipped\n    })\n    .map(flipped => {\n      const spring = createSuspendedSpring(flipped)\n      if (!spring) {\n        return\n      }\n      return spring.setEndValue.bind(spring)\n    })\n    .filter(Boolean)\n\n  if (setEndValueFuncs[0]) {\n    setEndValueFuncs[0]!(1)\n  }\n}\n","import * as Rematrix from 'rematrix'\nimport { getSpringConfig } from '../../springSettings'\nimport {\n  toArray,\n  isFunction,\n  isNumber,\n  getDuplicateValsAsStrings,\n  assign,\n  tweenProp\n} from '../../utilities'\nimport * as constants from '../../constants'\nimport {\n  GetOnUpdateFunc,\n  OnUpdate,\n  Matrix,\n  InvertedChildren,\n  AnimateFlippedElementsArgs,\n  AnimatedVals,\n  FlipDataArray,\n  FlipData,\n  InitializeFlip\n} from './types'\nimport { BoundingClientRect } from '../getFlippedElementPositions/types'\nimport { FlippedIds } from '../types'\nimport { createSpring, createStaggeredSprings } from './spring'\nimport { IndexableObject } from '../../utilities/types'\nimport { FlipId } from '../../types'\n\n// 3d transforms were causing weird issues in chrome,\n// especially when opacity was also being tweened,\n// so convert to a 2d matrix\nexport const convertMatrix3dArrayTo2dArray = (matrix: Matrix): Matrix =>\n  [0, 1, 4, 5, 12, 13].map(index => matrix[index])\n\nexport const convertMatrix2dArrayToString = (matrix: Matrix) =>\n  `matrix(${matrix.join(', ')})`\n\nexport const invertTransformsForChildren = ({\n  invertedChildren,\n  matrix,\n  body\n}: {\n  matrix: Matrix\n  body: HTMLBodyElement\n  invertedChildren: InvertedChildren\n}) => {\n  invertedChildren.forEach(([child, childFlipConfig]) => {\n    if (!body.contains(child)) {\n      return\n    }\n    const scaleX = matrix[0]\n    const scaleY = matrix[3]\n    const translateX = matrix[4]\n    const translateY = matrix[5]\n\n    const inverseVals = { translateX: 0, translateY: 0, scaleX: 1, scaleY: 1 }\n    let transformString = ''\n    if (childFlipConfig.translate) {\n      inverseVals.translateX = -translateX / scaleX\n      inverseVals.translateY = -translateY / scaleY\n      transformString += `translate(${inverseVals.translateX}px, ${inverseVals.translateY}px)`\n    }\n    if (childFlipConfig.scale) {\n      inverseVals.scaleX = 1 / scaleX\n      inverseVals.scaleY = 1 / scaleY\n      transformString += ` scale(${inverseVals.scaleX}, ${inverseVals.scaleY})`\n    }\n    child.style.transform = transformString\n  })\n}\n\nexport const createApplyStylesFunc = ({\n  element,\n  invertedChildren,\n  body\n}: {\n  element: HTMLElement\n  invertedChildren: InvertedChildren\n  body: HTMLBodyElement\n}) => ({\n  matrix,\n  opacity,\n  forceMinVals\n}: {\n  matrix: Matrix\n  opacity?: number\n  forceMinVals?: boolean\n}) => {\n  if (isNumber(opacity)) {\n    element.style.opacity = opacity + ''\n  }\n\n  if (forceMinVals) {\n    element.style.minHeight = '1px'\n    element.style.minWidth = '1px'\n  }\n\n  if (!matrix) {\n    return\n  }\n\n  const stringTransform = convertMatrix2dArrayToString(matrix)\n\n  // always apply transform, even if identity,\n  // because identity might be the starting state in a FLIP\n  // transition, if the element's position is controlled by transforms\n  element.style.transform = stringTransform\n\n  if (invertedChildren) {\n    invertTransformsForChildren({\n      invertedChildren,\n      matrix,\n      body\n    })\n  }\n}\n\nexport const rectInViewport = ({\n  top,\n  bottom,\n  left,\n  right\n}: BoundingClientRect) => {\n  return (\n    top < window.innerHeight &&\n    bottom > 0 &&\n    left < window.innerWidth &&\n    right > 0\n  )\n}\n\nconst getInvertedChildren = (element: HTMLElement, id: string) =>\n  toArray(\n    element.querySelectorAll(`[${constants.DATA_INVERSE_FLIP_ID}=\"${id}\"]`)\n  )\n\nexport default ({\n  flippedIds,\n  flipCallbacks,\n  inProgressAnimations,\n  flippedElementPositionsBeforeUpdate,\n  flippedElementPositionsAfterUpdate,\n  applyTransformOrigin,\n  spring,\n  getElement,\n  debug,\n  staggerConfig = {},\n  decisionData = {},\n  onComplete,\n  containerEl\n}: AnimateFlippedElementsArgs) => {\n  // the stuff below is used so we can return a promise that resolves when all FLIP animations have\n  // completed\n  let closureResolve: (flipIds: FlippedIds) => void\n\n  const flipCompletedPromise: Promise<FlippedIds> = new Promise(resolve => {\n    closureResolve = resolve\n  })\n  // hook for users of lib to attach logic when all flip animations have completed\n  if (onComplete) {\n    flipCompletedPromise.then(() => onComplete(containerEl, decisionData))\n  }\n  if (!flippedIds.length) {\n    return () => {\n      closureResolve!([])\n      return flipCompletedPromise\n    }\n  }\n\n  const completedAnimationIds: FlippedIds = []\n\n  const firstElement: HTMLElement = getElement(flippedIds[0])\n  // special handling for iframes\n  const body = firstElement\n    ? firstElement.ownerDocument!.querySelector('body')!\n    : document.querySelector('body')!\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (debug) {\n      // eslint-disable-next-line no-console\n      console.error(\n        '[react-flip-toolkit]\\nThe \"debug\" prop is set to true. All FLIP animations will return at the beginning of the transition.'\n      )\n    }\n  }\n\n  const duplicateFlipIds = getDuplicateValsAsStrings(flippedIds)\n  if (process.env.NODE_ENV !== 'production') {\n    if (duplicateFlipIds.length) {\n      // eslint-disable-next-line no-console\n      console.error(\n        `[react-flip-toolkit]\\nThere are currently multiple elements with the same flipId on the page.\\nThe animation will only work if each Flipped component has a unique flipId.\\nDuplicate flipId${\n          duplicateFlipIds.length > 1 ? 's' : ''\n        }: ${duplicateFlipIds.join('\\n')}`\n      )\n    }\n  }\n\n  const flipDataArray: FlipDataArray = flippedIds\n\n    // take all the measurements we need\n    // and return an object with animation functions + necessary data\n    .map(id => {\n      const prevRect = flippedElementPositionsBeforeUpdate[id].rect\n      const currentRect = flippedElementPositionsAfterUpdate[id].rect\n      const prevOpacity = flippedElementPositionsBeforeUpdate[id].opacity\n      const currentOpacity = flippedElementPositionsAfterUpdate[id].opacity\n      const needsForcedMinVals = currentRect.width < 1 || currentRect.height < 1\n      const element = flippedElementPositionsAfterUpdate[id].element\n\n      // don't animate elements outside of the user's viewport\n      if (!rectInViewport(prevRect) && !rectInViewport(currentRect)) {\n        return false\n      }\n\n      // this might happen if we are rapidly adding & removing elements(?)\n      if (!element) {\n        return false\n      }\n\n      const flipConfig = JSON.parse(element.dataset.flipConfig!)\n\n      const springConfig = getSpringConfig({\n        flipperSpring: spring,\n        flippedSpring: flipConfig.spring\n      })\n\n      const stagger =\n        flipConfig.stagger === true ? 'default' : flipConfig.stagger\n\n      const toReturn = {\n        element,\n        id,\n        stagger,\n        springConfig\n      }\n\n      if (flipCallbacks[id] && flipCallbacks[id].shouldFlip) {\n        const elementShouldFlip = flipCallbacks[id].shouldFlip!(\n          decisionData.previous,\n          decisionData.current\n        )\n        if (!elementShouldFlip) {\n          return false\n        }\n      }\n\n      // don't animate elements that didn't visibly change\n      // but possibly animate their children\n\n      const translateXDifference = Math.abs(prevRect.left - currentRect.left)\n      const translateYDifference = Math.abs(prevRect.top - currentRect.top)\n\n      const translateDifference = translateXDifference + translateYDifference\n\n      const scaleXDifference = Math.abs(prevRect.width - currentRect.width)\n      const scaleYDifference = Math.abs(prevRect.height - currentRect.height)\n\n      const scaleDifference = scaleXDifference + scaleYDifference\n\n      const opacityDifference = Math.abs(currentOpacity - prevOpacity)\n      if (\n        translateDifference < 0.5 &&\n        scaleDifference < 0.5 &&\n        opacityDifference < 0.01\n      ) {\n        return false\n      }\n\n      const currentTransform = Rematrix.parse(\n        flippedElementPositionsAfterUpdate[id].transform\n      )\n\n      const toVals: AnimatedVals = { matrix: currentTransform }\n\n      const fromVals: AnimatedVals = { matrix: [] }\n      const transformsArray = [currentTransform]\n\n      // we're only going to animate the values that the child wants animated\n      if (flipConfig.translate) {\n        transformsArray.push(\n          Rematrix.translateX(prevRect.left - currentRect.left)\n        )\n        transformsArray.push(\n          Rematrix.translateY(prevRect.top - currentRect.top)\n        )\n      }\n      // going any smaller than 1px breaks transitions in Chrome\n      if (flipConfig.scale) {\n        transformsArray.push(\n          Rematrix.scaleX(\n            Math.max(prevRect.width, 1) / Math.max(currentRect.width, 1)\n          )\n        )\n        transformsArray.push(\n          Rematrix.scaleY(\n            Math.max(prevRect.height, 1) / Math.max(currentRect.height, 1)\n          )\n        )\n      }\n\n      if (flipConfig.opacity) {\n        fromVals.opacity = prevOpacity\n        toVals.opacity = currentOpacity\n      }\n\n      let invertedChildren: InvertedChildren = []\n\n      if (\n        !flipCallbacks[id] ||\n        !flipCallbacks[id].shouldInvert ||\n        flipCallbacks[id].shouldInvert!(\n          decisionData.previous,\n          decisionData.current\n        )\n      ) {\n        const invertedChildElements = getInvertedChildren(element, id)\n        invertedChildren = invertedChildElements.map(c => [\n          c,\n          JSON.parse(c.dataset.flipConfig!)\n        ]) as InvertedChildren\n      }\n\n      fromVals.matrix = convertMatrix3dArrayTo2dArray(\n        transformsArray.reduce(Rematrix.multiply)\n      )\n\n      toVals.matrix = convertMatrix3dArrayTo2dArray(toVals.matrix)\n\n      const applyStyles = createApplyStylesFunc({\n        element,\n        invertedChildren,\n        body\n      })\n\n      let onComplete: () => void\n      if (flipCallbacks[id] && flipCallbacks[id].onComplete) {\n        // must cache or else this could cause an error\n        const cachedOnComplete = flipCallbacks[id].onComplete\n        onComplete = () => cachedOnComplete!(element, decisionData)\n      }\n\n      // this should be called when animation ends naturally\n      // but also when it is interrupted\n      // when it is called, the animation has already been cancelled\n      const onAnimationEnd = (isCancellation: boolean) => {\n        delete inProgressAnimations[id]\n        if (isFunction(onComplete)) {\n          onComplete()\n        }\n        // remove identity transform -- this should have no effect on layout\n        element.style.transform = ''\n        invertedChildren.forEach(([element]) => {\n          element.style.transform = ''\n        })\n        if (needsForcedMinVals && element) {\n          element.style.minHeight = ''\n          element.style.minWidth = ''\n        }\n        if (isCancellation) return\n        \n        completedAnimationIds.push(id)\n\n        if (completedAnimationIds.length >= flipDataArray.length) {\n          // we can theoretically call multiple times since a promise only resolves 1x\n          // but that shouldnt happen\n          closureResolve(completedAnimationIds)\n        }\n      }\n\n      const animateOpacity =\n        isNumber(fromVals.opacity) &&\n        isNumber(toVals.opacity) &&\n        fromVals.opacity !== toVals.opacity\n\n      let onStartCalled = false\n\n      const getOnUpdateFunc: GetOnUpdateFunc = ({ spring, onAnimationEnd }) => {\n        inProgressAnimations[id] = {\n          destroy: spring.destroy.bind(spring),\n          onAnimationEnd\n        }\n        const onUpdate: OnUpdate = spring => {\n          if (flipCallbacks[id] && flipCallbacks[id].onSpringUpdate) {\n            flipCallbacks[id].onSpringUpdate!(spring.getCurrentValue())\n          }\n          // trigger the user provided onStart function\n          if (!onStartCalled) {\n            onStartCalled = true\n            if (flipCallbacks[id] && flipCallbacks[id].onStart) {\n              flipCallbacks[id].onStart!(element, decisionData)\n            }\n          }\n\n          const currentValue = spring.getCurrentValue()\n          if (!body.contains(element)) {\n            spring.destroy()\n            return\n          }\n\n          const vals: AnimatedVals = { matrix: [] }\n\n          vals.matrix = fromVals.matrix.map((fromVal, index) =>\n            tweenProp(fromVal, toVals.matrix[index], currentValue)\n          )\n\n          if (animateOpacity) {\n            vals.opacity = tweenProp(\n              fromVals.opacity!,\n              toVals.opacity!,\n              currentValue\n            )\n          }\n          applyStyles(vals)\n        }\n        return onUpdate\n      }\n\n      const initializeFlip: InitializeFlip = () => {\n        // before animating, immediately apply FLIP styles to prevent flicker\n        applyStyles({\n          matrix: fromVals.matrix,\n          opacity: animateOpacity ? fromVals.opacity : undefined,\n          forceMinVals: needsForcedMinVals\n        })\n\n        if (flipCallbacks[id] && flipCallbacks[id].onStartImmediate) {\n          flipCallbacks[id].onStartImmediate!(element, decisionData)\n        }\n        // and batch any other style updates if necessary\n        if (flipConfig.transformOrigin) {\n          element.style.transformOrigin = flipConfig.transformOrigin\n        } else if (applyTransformOrigin) {\n          element.style.transformOrigin = '0 0'\n        }\n\n        invertedChildren.forEach(([child, childFlipConfig]) => {\n          if (childFlipConfig.transformOrigin) {\n            child.style.transformOrigin = childFlipConfig.transformOrigin\n          } else if (applyTransformOrigin) {\n            child.style.transformOrigin = '0 0'\n          }\n        })\n      }\n\n      return assign({}, toReturn, {\n        stagger,\n        springConfig,\n        getOnUpdateFunc,\n        initializeFlip,\n        onAnimationEnd,\n        delayUntil: flipConfig.delayUntil\n      }) as FlipData\n    })\n    // filter out data for all non-animated elements first\n    .filter(Boolean) as FlipDataArray\n\n  flipDataArray.forEach(({ initializeFlip }) => initializeFlip())\n\n  if (debug) {\n    return () => {}\n  }\n\n  const elementIsFlipped = (flipId: FlipId) =>\n    flipDataArray.filter(f => f.id === flipId).length\n\n  const delayedFlip = flipDataArray.filter(\n    f => f.delayUntil && elementIsFlipped(f.delayUntil)\n  )\n\n  // key: flipId value: flip to delay until key is called\n  const delayUntilSprings = {} as IndexableObject\n  // key: flipId value: stagger to delay until key is called\n  const delayUntilStaggers = {} as IndexableObject\n  // key: stagger value: true\n  const delayedStaggerKeys = {} as IndexableObject\n\n  delayedFlip.forEach(flip => {\n    if (flip.stagger) {\n      delayedStaggerKeys[flip.stagger] = true\n      if (delayUntilStaggers[flip.delayUntil!])\n        delayUntilStaggers[flip.delayUntil!].push(flip.stagger)\n      else delayUntilStaggers[flip.delayUntil!] = [flip.stagger]\n    } else {\n      if (delayUntilSprings[flip.delayUntil!])\n        delayUntilSprings[flip.delayUntil!].push(flip)\n      else delayUntilSprings[flip.delayUntil!] = [flip]\n    }\n  })\n\n  const staggerDict = flipDataArray\n    .filter(flipData => flipData.stagger)\n    .reduce(\n      (acc, curr) => {\n        if (acc[curr.stagger]) {\n          acc[curr.stagger].push(curr)\n        } else {\n          acc[curr.stagger] = [curr]\n        }\n        return acc\n      },\n      {} as IndexableObject\n    )\n\n  const immediateFlip = flipDataArray.filter(f => delayedFlip.indexOf(f) === -1)\n\n  immediateFlip.forEach(flipData => {\n    flipData.onSpringActivate = () => {\n      if (delayUntilSprings[flipData.id]) {\n        delayUntilSprings[flipData.id].forEach(createSpring)\n      }\n      if (delayUntilStaggers[flipData.id]) {\n        const uniqueStaggerKeys = Object.keys(\n          delayUntilStaggers[flipData.id].reduce(\n            (acc: IndexableObject, curr: string) =>\n              assign(acc, { [curr]: true }),\n            {}\n          )\n        )\n        uniqueStaggerKeys.forEach((staggerKey: string) => {\n          createStaggeredSprings(\n            staggerDict[staggerKey],\n            staggerConfig[staggerKey]\n          )\n        })\n      }\n    }\n  })\n\n  return () => {\n    // if there are no active FLIP animations, immediately resolve the\n    // returned promise\n    if (!flipDataArray.length) {\n      closureResolve([])\n    }\n    // animate non-staggered elements\n    immediateFlip\n      .filter(flipData => {\n        return !flipData.stagger\n      })\n      .forEach(createSpring)\n\n    // animate staggered elements\n    Object.keys(staggerDict).forEach(staggerKey => {\n      if (delayedStaggerKeys[staggerKey]) return\n      createStaggeredSprings(staggerDict[staggerKey], staggerConfig[staggerKey])\n    })\n    return flipCompletedPromise\n  }\n}\n","import { toArray, assign } from '../../utilities'\nimport * as constants from '../../constants'\nimport { BoundingClientRect } from './types'\n\nexport const addTupleToObject = (acc: {}, curr: [any, any]) =>\n  assign(acc, { [curr[0]]: curr[1] })\n\nexport const getAllElements = (\n  element?: HTMLElement,\n  portalKey?: string\n): HTMLElement[] => {\n  if (portalKey) {\n    return toArray(\n      document.querySelectorAll(`[${constants.DATA_PORTAL_KEY}=\"${portalKey}\"]`)\n    )\n  } else {\n    return toArray(element!.querySelectorAll(`[${constants.DATA_FLIP_ID}]`))\n  }\n}\nexport const getRects = (flippedElements: HTMLElement[]) => {\n  return flippedElements.map((child: HTMLElement): [\n    HTMLElement,\n    BoundingClientRect\n  ] => [child, child.getBoundingClientRect()])\n}\n","// this is exclusively for users of the library to create their own enter + exit animations\nimport { SpringSystem } from '../forked-rebound'\nimport { SpringSystemInterface } from '../forked-rebound/types.d'\nimport { tweenProp, assign } from '../utilities'\nimport { normalizeSpring, springPresets } from '../springSettings'\nimport { SimpleSpringOptions } from './types'\nimport { SpringConfig } from '../springSettings/types'\n\n// this should get created only 1x\nconst springSystem: SpringSystemInterface = new SpringSystem()\n\n/**\n * A simple spring function for animating DOM properties.\n * Returns a function that will immediately cancel the in-progress animation.\n * */\nconst createSimpleSpring = ({\n  config,\n  values,\n  onUpdate,\n  delay = 0,\n  onComplete\n}: SimpleSpringOptions) => {\n  const { stiffness, damping, overshootClamping } = assign(\n    {},\n    springPresets.noWobble,\n    normalizeSpring(config)\n  ) as SpringConfig\n  const spring = springSystem.createSpring(stiffness!, damping!)\n  spring.setOvershootClampingEnabled(!!overshootClamping)\n  spring.addListener({\n    onSpringAtRest: spring => {\n      if (onComplete) onComplete()\n      spring.destroy()\n    },\n    onSpringUpdate: spring => {\n      const springVal = spring.getCurrentValue()\n      if (!values) return onUpdate(springVal)\n      const currentValues = Object.keys(values)\n        .map(value => [\n          value,\n          tweenProp(values[value][0], values[value][1], springVal)\n        ])\n        .reduce((acc, curr) => {\n          return Object.assign(acc, { [curr[0]]: curr[1] })\n        }, {})\n      onUpdate(currentValues)\n    }\n  })\n  if (delay) {\n    setTimeout(() => {\n      spring.setEndValue(1)\n    }, delay)\n  } else {\n    spring.setEndValue(1)\n  }\n  return spring\n}\n\nexport default createSimpleSpring\n","import { createContext } from 'react'\nimport { FlipCallbacks } from '../FlipToolkit/types'\n\nexport const FlipContext = createContext({} as FlipCallbacks)\nexport const PortalContext = createContext('portal')\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  getFlippedElementPositionsBeforeUpdate,\n  onFlipKeyUpdate\n} from '../FlipToolkit'\nimport {\n  FlipperProps,\n  InProgressAnimations,\n  FlipCallbacks\n} from '../FlipToolkit/types'\nimport { FlippedElementPositionsBeforeUpdateReturnVals } from '../FlipToolkit/flip/getFlippedElementPositions/getFlippedElementPositionsBeforeUpdate/types'\nimport { FlipContext, PortalContext } from './context'\n\nclass Flipper extends Component<FlipperProps> {\n  static defaultProps = {\n    applyTransformOrigin: true,\n    element: 'div'\n  }\n\n  private inProgressAnimations: InProgressAnimations = {}\n  private flipCallbacks: FlipCallbacks = {}\n  private el?: HTMLElement = undefined\n\n  getSnapshotBeforeUpdate(prevProps: FlipperProps) {\n    if (prevProps.flipKey !== this.props.flipKey && this.el) {\n      return getFlippedElementPositionsBeforeUpdate({\n        element: this.el,\n        // if onExit callbacks exist here, we'll cache the DOM node\n        flipCallbacks: this.flipCallbacks,\n        inProgressAnimations: this.inProgressAnimations,\n        portalKey: this.props.portalKey\n      })\n    }\n    return null\n  }\n\n  componentDidUpdate(\n    prevProps: FlipperProps,\n    _prevState: any,\n    cachedData: FlippedElementPositionsBeforeUpdateReturnVals\n  ) {\n    if (this.props.flipKey !== prevProps.flipKey && this.el) {\n      onFlipKeyUpdate({\n        flippedElementPositionsBeforeUpdate: cachedData.flippedElementPositions,\n        cachedOrderedFlipIds: cachedData.cachedOrderedFlipIds,\n        containerEl: this.el,\n        inProgressAnimations: this.inProgressAnimations,\n        flipCallbacks: this.flipCallbacks,\n        applyTransformOrigin: this.props.applyTransformOrigin,\n        spring: this.props.spring,\n        debug: this.props.debug,\n        portalKey: this.props.portalKey,\n        staggerConfig: this.props.staggerConfig,\n        handleEnterUpdateDelete: this.props.handleEnterUpdateDelete,\n        decisionData: {\n          previous: prevProps.decisionData,\n          current: this.props.decisionData\n        },\n        onComplete: this.props.onComplete,\n        onStart: this.props.onStart\n      })\n    }\n  }\n\n  public render() {\n    const { element, className, portalKey } = this.props\n    const Element = element\n\n    let flipperMarkup = (\n      <FlipContext.Provider value={this.flipCallbacks}>\n        {/*\n        // @ts-ignore */}\n        <Element\n          className={className}\n          ref={(el: HTMLElement) => (this.el = el)}\n        >\n          {this.props.children}\n        </Element>\n      </FlipContext.Provider>\n    )\n\n    if (portalKey) {\n      flipperMarkup = (\n        <PortalContext.Provider value={portalKey}>\n          {flipperMarkup}\n        </PortalContext.Provider>\n      )\n    }\n\n    return flipperMarkup\n  }\n}\n// @ts-ignore\n\nif (process.env.NODE_ENV !== 'production') {\n  // @ts-ignore\n  Flipper.propTypes = {\n    flipKey: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.bool\n    ]).isRequired,\n    children: PropTypes.node.isRequired,\n    spring: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    applyTransformOrigin: PropTypes.bool,\n    debug: PropTypes.bool,\n    element: PropTypes.string,\n    className: PropTypes.string,\n    portalKey: PropTypes.string,\n    staggerConfig: PropTypes.object,\n    decisionData: PropTypes.any,\n    handleEnterUpdateDelete: PropTypes.func,\n    onComplete: PropTypes.func,\n    onStart: PropTypes.func\n  }\n}\n\nexport default Flipper\n","import { addTupleToObject, getAllElements, getRects } from '../utilities'\nimport * as constants from '../../../constants'\nimport { toArray, assign } from '../../../utilities'\nimport {\n  FlippedElementPositionsBeforeUpdateReturnVals,\n  FlippedElementPositionsBeforeUpdate,\n  GetFlippedElementPositionsBeforeUpdateArgs,\n  ParentBCRs,\n  ChildIdsToParentBCRs,\n  ChildIdsToParents\n} from './types'\nimport { InProgressAnimations } from '../../../types'\n\nexport const cancelInProgressAnimations = (\n  inProgressAnimations: InProgressAnimations,\n  animatingElements: HTMLElement[]\n) => {\n  Object.keys(inProgressAnimations).forEach(id => {\n    if (inProgressAnimations[id].destroy) {\n      inProgressAnimations[id].destroy()\n    }\n    if (inProgressAnimations[id].onAnimationEnd) {\n      inProgressAnimations[id].onAnimationEnd(true)\n    }\n    delete inProgressAnimations[id]\n  })\n  animatingElements.forEach(el => {\n    el.style.transform = ''\n    el.style.opacity = ''\n  })\n}\n\nconst getFlippedElementPositionsBeforeUpdate = ({\n  element,\n  flipCallbacks = {},\n  inProgressAnimations = {},\n  portalKey\n}: GetFlippedElementPositionsBeforeUpdateArgs): FlippedElementPositionsBeforeUpdateReturnVals => {\n  const flippedElements = getAllElements(element, portalKey)\n\n  const inverseFlippedElements = toArray(\n    element.querySelectorAll(`[${constants.DATA_INVERSE_FLIP_ID}]`)\n  )\n\n  const childIdsToParentBCRs: ChildIdsToParentBCRs = {}\n  const parentBCRs: ParentBCRs = []\n  const childIdsToParents: ChildIdsToParents = {}\n  // this is for exit animations so we can re-insert exiting elements in the\n  // DOM later\n  flippedElements\n    .filter(\n      el =>\n        flipCallbacks &&\n        flipCallbacks[el.dataset.flipId!] &&\n        flipCallbacks[el.dataset.flipId!].onExit\n    )\n    .forEach(el => {\n      let parent = el.parentNode as HTMLElement\n      // this won't work for IE11\n      if (el.closest) {\n        const exitContainer = el.closest(\n          `[${constants.DATA_EXIT_CONTAINER}]`\n        ) as HTMLElement\n        if (exitContainer) {\n          parent = exitContainer\n        }\n      }\n      let bcrIndex = parentBCRs.findIndex(n => n[0] === parent)\n      if (bcrIndex === -1) {\n        parentBCRs.push([parent, parent.getBoundingClientRect()])\n        bcrIndex = parentBCRs.length - 1\n      }\n      childIdsToParentBCRs[el.dataset.flipId!] = parentBCRs[bcrIndex][1]\n      childIdsToParents[el.dataset.flipId!] = parent\n    })\n\n  const filteredFlippedElements = getRects(flippedElements)\n\n  const flippedElementPositions: FlippedElementPositionsBeforeUpdate = filteredFlippedElements\n    .map(([child, childBCR]) => {\n      const domDataForExitAnimations = {}\n\n      // only cache extra data for exit animations\n      // if the element has an onExit listener\n      if (\n        flipCallbacks &&\n        flipCallbacks[child.dataset.flipId!] &&\n        flipCallbacks[child.dataset.flipId!].onExit\n      ) {\n        const parentBCR = childIdsToParentBCRs[child.dataset.flipId!]\n\n        assign(domDataForExitAnimations, {\n          element: child,\n          parent: childIdsToParents[child.dataset.flipId!],\n          childPosition: {\n            top: childBCR.top - parentBCR.top,\n            left: childBCR.left - parentBCR.left,\n            width: childBCR.width,\n            height: childBCR.height\n          }\n        })\n      }\n\n      return [\n        child.dataset.flipId,\n        {\n          rect: childBCR,\n          opacity: parseFloat(window.getComputedStyle(child).opacity || '1'),\n          domDataForExitAnimations\n        }\n      ]\n    })\n    // @ts-ignore\n    .reduce(addTupleToObject, {})\n  // do this at the very end since we want to cache positions of elements\n  // while they are mid-transition\n  cancelInProgressAnimations(\n    inProgressAnimations,\n    flippedElements.concat(inverseFlippedElements)\n  )\n\n  return {\n    flippedElementPositions,\n    cachedOrderedFlipIds: filteredFlippedElements.map(\n      ([el]) => el.dataset.flipId!\n    )\n  }\n}\n\nexport default getFlippedElementPositionsBeforeUpdate\n","import animateUnflippedElements from './animateUnflippedElements'\nimport animateFlippedElements from './animateFlippedElements'\nimport getFlippedElementPositionsAfterUpdate from './getFlippedElementPositions/getFlippedElementPositionsAfterUpdate'\nimport * as constants from '../constants'\nimport { assign, toArray } from '../utilities'\nimport {\n  GetElement,\n  BaseFlipArgs,\n  OnFlipKeyUpdateArgs,\n  FlippedIds\n} from './types'\nimport { AnimateUnflippedElementsArgs } from './animateUnflippedElements/types'\nimport {\n  AnimateFlippedElementsArgs,\n  ScopedSelector\n} from './animateFlippedElements/types'\n\nconst createPortalScopedSelector = (portalKey: string) => (\n  selector: string\n) => {\n  return toArray(\n    document.querySelectorAll(\n      `[${constants.DATA_PORTAL_KEY}=\"${portalKey}\"]${selector}`\n    )\n  )\n}\nconst createFlipperScopedSelector = (containerEl: HTMLElement) => {\n  const tempFlipperId = Math.random().toFixed(5)\n  containerEl.dataset.flipperId = tempFlipperId\n\n  return (selector: string) => {\n    return toArray(\n      containerEl.querySelectorAll(\n        `[data-flipper-id=\"${tempFlipperId}\"] ${selector}`\n      )\n    )\n  }\n}\nconst createScopedSelector = ({\n  containerEl,\n  portalKey\n}: {\n  containerEl?: HTMLElement\n  portalKey?: string\n}): ScopedSelector => {\n  if (portalKey) {\n    return createPortalScopedSelector(portalKey)\n  } else if (containerEl) {\n    return createFlipperScopedSelector(containerEl)\n  } else {\n    return () => []\n  }\n}\n\nconst createGetElementFunc = (scopedSelector: ScopedSelector): GetElement => {\n  return (id: string) => {\n    return scopedSelector(`[${constants.DATA_FLIP_ID}=\"${id}\"]`)[0]\n  }\n}\n\nconst onFlipKeyUpdate = ({\n  cachedOrderedFlipIds = [],\n  inProgressAnimations = {},\n  flippedElementPositionsBeforeUpdate = {},\n  flipCallbacks = {},\n  containerEl,\n  applyTransformOrigin,\n  spring,\n  debug,\n  portalKey,\n  staggerConfig = {},\n  decisionData = {},\n  handleEnterUpdateDelete,\n  onComplete,\n  onStart\n}: OnFlipKeyUpdateArgs) => {\n\n  const flippedElementPositionsAfterUpdate = getFlippedElementPositionsAfterUpdate(\n    {\n      element: containerEl,\n      portalKey\n    }\n  )\n\n  const scopedSelector = createScopedSelector({\n    containerEl,\n    portalKey\n  })\n  const getElement = createGetElementFunc(scopedSelector)\n\n  const isFlipped = (id: string) =>\n    flippedElementPositionsBeforeUpdate[id] &&\n    flippedElementPositionsAfterUpdate[id]\n\n  const unflippedIds = Object.keys(flippedElementPositionsBeforeUpdate)\n    .concat(Object.keys(flippedElementPositionsAfterUpdate))\n    .filter(id => !isFlipped(id))\n\n  const baseArgs: BaseFlipArgs = {\n    flipCallbacks,\n    getElement,\n    flippedElementPositionsBeforeUpdate,\n    flippedElementPositionsAfterUpdate,\n    inProgressAnimations,\n    decisionData\n  }\n\n  const animateUnFlippedElementsArgs = assign({}, baseArgs, {\n    unflippedIds\n  }) as AnimateUnflippedElementsArgs\n\n  const {\n    hideEnteringElements,\n    animateEnteringElements,\n    animateExitingElements\n  } = animateUnflippedElements(animateUnFlippedElementsArgs)\n\n  const flippedIds: FlippedIds = cachedOrderedFlipIds.filter(isFlipped)\n  // @ts-ignore\n  const animateFlippedElementsArgs: AnimateFlippedElementsArgs = assign(\n    {},\n    baseArgs,\n    {\n      containerEl,\n      flippedIds,\n      applyTransformOrigin,\n      spring,\n      debug,\n      staggerConfig,\n      scopedSelector,\n      onComplete\n    }\n  )\n  if (onStart) onStart(containerEl, decisionData)\n\n  // the function handles putting flipped elements back in their original positions\n  // and returns another function to actually call the flip animation\n  const flip = animateFlippedElements(animateFlippedElementsArgs)\n\n  if (handleEnterUpdateDelete) {\n    handleEnterUpdateDelete({\n      hideEnteringElements,\n      animateEnteringElements,\n      animateExitingElements,\n      animateFlippedElements: flip\n    })\n  } else {\n    hideEnteringElements()\n    animateExitingElements().then(animateEnteringElements)\n    flip()\n  }\n}\n\nexport default onFlipKeyUpdate\n","import {\n  addTupleToObject,\n  getRects,\n  getAllElements\n} from '../utilities'\nimport { FlippedElementPositionsAfterUpdate } from './types'\n\nconst getFlippedElementPositionsAfterUpdate = ({\n  element,\n  portalKey\n}: {\n  element: HTMLElement\n  portalKey?: string\n}): FlippedElementPositionsAfterUpdate => {\n  return (\n    getRects(getAllElements(element, portalKey))\n      .map(([child, childBCR]) => {\n        const computedStyle = window.getComputedStyle(child)\n        return [\n          child.dataset.flipId,\n          {\n            element: child,\n            rect: childBCR,\n            opacity: parseFloat(computedStyle.opacity!),\n            transform: computedStyle.transform\n          }\n        ]\n      })\n      // @ts-ignore\n      .reduce(addTupleToObject, {})\n  )\n}\n\nexport default getFlippedElementPositionsAfterUpdate\n","import { AnimateUnflippedElementsArgs, FragmentTuple } from './types'\n\nconst animateUnflippedElements = ({\n  unflippedIds,\n  flipCallbacks,\n  getElement,\n  flippedElementPositionsBeforeUpdate,\n  flippedElementPositionsAfterUpdate,\n  inProgressAnimations,\n  decisionData\n}: AnimateUnflippedElementsArgs) => {\n  const enteringElementIds = unflippedIds.filter(\n    id => flippedElementPositionsAfterUpdate[id]\n  )\n  const animatedEnteringElementIds = enteringElementIds.filter(\n    id => flipCallbacks[id] && flipCallbacks[id].onAppear\n  )\n\n  const animatedExitingElementIds = unflippedIds.filter(\n    id =>\n      flippedElementPositionsBeforeUpdate[id] &&\n      flipCallbacks[id] &&\n      flipCallbacks[id].onExit\n  )\n\n  const hideEnteringElements = () => {\n    animatedEnteringElementIds.forEach(id => {\n      const element = getElement(id)\n      if (element) {\n        element.style.opacity = '0'\n      }\n    })\n  }\n\n  const animateEnteringElements = () => {\n    animatedEnteringElementIds.forEach((id, i) => {\n      const element = getElement(id)\n      if (element) {\n        flipCallbacks[id].onAppear!(element, i, decisionData)\n      }\n    })\n  }\n\n  let closureResolve: () => void\n\n  const promiseToReturn: Promise<void> = new Promise(resolve => {\n    closureResolve = resolve\n  })\n\n  const fragmentTuples: FragmentTuple[] = []\n  let exitingElementCount = 0\n\n  const onExitCallbacks = animatedExitingElementIds.map((id, i) => {\n    const {\n      domDataForExitAnimations: {\n        element,\n        parent,\n        childPosition: { top, left, width, height }\n      }\n    } = flippedElementPositionsBeforeUpdate[id]\n    // insert back into dom\n    if (getComputedStyle(parent).position === 'static') {\n      parent.style.position = 'relative'\n    }\n    element.style.transform = 'matrix(1, 0, 0, 1, 0, 0)'\n    element.style.position = 'absolute'\n    element.style.top = top + 'px'\n    element.style.left = left + 'px'\n    // taken out of the dom flow, the element might have lost these dimensions\n    element.style.height = height + 'px'\n    element.style.width = width + 'px'\n    let fragmentTuple: FragmentTuple | undefined = fragmentTuples.filter(\n      t => t[0] === parent\n    )[0]\n    if (!fragmentTuple) {\n      fragmentTuple = [parent, document.createDocumentFragment()]\n      fragmentTuples.push(fragmentTuple)\n    }\n    fragmentTuple[1].appendChild(element)\n\n    exitingElementCount += 1\n\n    const stop = () => {\n      try {\n        parent.removeChild(element)\n      } catch (DOMException) {\n        // the element is already gone\n      } finally {\n        exitingElementCount -= 1\n        if (exitingElementCount === 0) {\n          closureResolve()\n        }\n      }\n    }\n    // @ts-ignore\n    inProgressAnimations[id] = { stop }\n    return () => flipCallbacks[id].onExit!(element, i, stop, decisionData)\n  })\n\n  // now append all the fragments from the onExit callbacks\n  // (we use fragments for performance)\n  fragmentTuples.forEach(t => {\n    t[0].appendChild(t[1])\n  })\n\n  if (!onExitCallbacks.length) {\n    closureResolve!()\n  }\n\n  const animateExitingElements = () => {\n    onExitCallbacks.forEach(c => c())\n    return promiseToReturn\n  }\n\n  return {\n    hideEnteringElements,\n    animateEnteringElements,\n    animateExitingElements\n  }\n}\n\nexport default animateUnflippedElements\n","import React, {\n  FunctionComponent,\n  Children,\n  cloneElement,\n  ReactElement\n} from 'react'\nimport PropTypes from 'prop-types'\nimport { utilities, constants } from '../FlipToolkit'\nimport { FlippedProps, SerializableFlippedProps } from '../FlipToolkit/types'\nimport { FlipContext, PortalContext } from '../Flipper/context'\n\nfunction isFunction(child: any): child is Function {\n  return typeof child === 'function'\n}\n\n// This wrapper creates child components for the main Flipper component\nexport const Flipped: FunctionComponent<SerializableFlippedProps> = ({\n  children,\n  flipId,\n  inverseFlipId,\n  portalKey,\n  ...rest\n}) => {\n  let child = children\n  const isFunctionAsChildren = isFunction(child)\n\n  if (!isFunctionAsChildren) {\n    try {\n      child = Children.only(children)\n    } catch (e) {\n      throw new Error('Each Flipped component must wrap a single child')\n    }\n  }\n\n  // if nothing is being animated, assume everything is being animated\n  if (!rest.scale && !rest.translate && !rest.opacity) {\n    utilities.assign(rest, {\n      translate: true,\n      scale: true,\n      opacity: true\n    })\n  }\n\n  const dataAttributes: Record<string, string | undefined> = {\n    [constants.DATA_FLIP_CONFIG]: JSON.stringify(rest)\n  }\n\n  if (flipId) dataAttributes[constants.DATA_FLIP_ID] = String(flipId)\n  else if (inverseFlipId)\n    dataAttributes[constants.DATA_INVERSE_FLIP_ID] = String(inverseFlipId)\n\n  if (portalKey) {\n    dataAttributes[constants.DATA_PORTAL_KEY] = portalKey\n  }\n  if (isFunctionAsChildren) {\n    return (child as Function)(dataAttributes)\n  }\n  return cloneElement(child as ReactElement<any>, dataAttributes)\n}\n// @ts-ignore\nexport const FlippedWithContext: FunctionComponent<FlippedProps> = ({\n  children,\n  flipId,\n  shouldFlip,\n  shouldInvert,\n  onAppear,\n  onStart,\n  onStartImmediate,\n  onComplete,\n  onExit,\n  onSpringUpdate,\n  ...rest\n}) => {\n  if (!children) {\n    return null\n  }\n  if (rest.inverseFlipId) {\n    return <Flipped {...rest}>{children}</Flipped>\n  }\n\n  return (\n    <PortalContext.Consumer>\n      {portalKey => (\n        <FlipContext.Consumer>\n          {data => {\n            // if there is no surrounding Flipper component,\n            // we don't want to throw an error, so check\n            // that data exists and is not the default string\n            if (utilities.isObject(data) && flipId) {\n              data[flipId] = {\n                shouldFlip,\n                shouldInvert,\n                onAppear,\n                onStart,\n                onStartImmediate,\n                onComplete,\n                onExit,\n                onSpringUpdate\n              }\n            }\n            return (\n              <Flipped flipId={flipId} {...rest} portalKey={portalKey}>\n                {children}\n              </Flipped>\n            )\n          }}\n        </FlipContext.Consumer>\n      )}\n    </PortalContext.Consumer>\n  )\n}\nif (process.env.NODE_ENV !== 'production') {\n  // @ts-ignore\n  FlippedWithContext.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n    inverseFlipId: PropTypes.string,\n    flipId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    opacity: PropTypes.bool,\n    translate: PropTypes.bool,\n    scale: PropTypes.bool,\n    transformOrigin: PropTypes.string,\n    spring: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    onStart: PropTypes.func,\n    onStartImmediate: PropTypes.func,\n    onComplete: PropTypes.func,\n    onAppear: PropTypes.func,\n    onSpringUpdate: PropTypes.func,\n    shouldFlip: PropTypes.func,\n    shouldInvert: PropTypes.func,\n    onExit: PropTypes.func,\n    portalKey: PropTypes.string,\n    stagger: PropTypes.oneOfType([PropTypes.string, PropTypes.bool])\n  }\n}\n\nFlippedWithContext.displayName = 'Flipped'\n\nexport default FlippedWithContext\n","export const DATA_FLIP_ID = 'data-flip-id'\nexport const DATA_INVERSE_FLIP_ID = 'data-inverse-flip-id'\nexport const DATA_FLIP_COMPONENT_ID = 'data-flip-component-id'\nexport const DATA_FLIP_CONFIG = 'data-flip-config'\nexport const DATA_PORTAL_KEY = 'data-portal-key'\nexport const DATA_EXIT_CONTAINER = 'data-exit-container'\n","import { FunctionComponent, cloneElement, ReactElement } from 'react'\nimport { constants } from '../FlipToolkit'\n\nconst ExitContainer: FunctionComponent = ({ children }) => {\n  return cloneElement(children as ReactElement<any>, {\n    [constants.DATA_EXIT_CONTAINER]: true\n  })\n}\n\nexport default ExitContainer\n"]},"metadata":{},"sourceType":"module"}