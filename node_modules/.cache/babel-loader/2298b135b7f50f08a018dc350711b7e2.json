{"ast":null,"code":"/*\n *\n *  *  Copyright (C) Thirty One, Inc - All Rights Reserved\n *  *  * Unauthorized copying of this file, via any medium is strictly prohibited\n *  *  * Proprietary and confidential\n *  *  * Written by Thirty One <thirtyoneparis@gmail.com>, 2020\n *  *\n *\n */\nimport React, { useState } from 'react';\nimport { api_link } from '../../globals';\nexport async function signup(state) {\n  const url = api_link + '/auth/signup';\n  let data = {\n    firstname: state.firstname,\n    lastname: state.lastname,\n    email: state.email,\n    password: state.password\n  };\n  const response = await fetch(url, {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'Accept': 'application/json',\n      'Content-type': 'application/json'\n    }\n  });\n  return response.status;\n}\nexport async function login(email, password) {\n  const url = api_link + '/auth/signin';\n  let data = {\n    email: email,\n    password: password\n  };\n  const response = await fetch(url, {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'Accept': 'application/json',\n      'Content-type': 'application/json'\n    }\n  });\n  const responseToJson = await response.json();\n  let token = responseToJson.accessToken;\n\n  if (token) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('isLoggedIn', true);\n    update_user();\n  }\n\n  return token;\n}\nexport async function update_user() {\n  let token = localStorage.getItem('token');\n  const response = await fetch(api_link + \"/users/me\", {\n    method: 'GET',\n    headers: {\n      'accept': 'application/json',\n      'Authorization': 'Bearer ' + token\n    }\n  });\n  const responseToJson = await response.json();\n  let user = responseToJson;\n\n  if (user) {\n    localStorage.setItem('user', JSON.stringify(user));\n  } else {\n    console.log(\"an error occured\");\n  }\n\n  console.log(\"user changed\");\n  return response;\n}\n\nasync function change(to_change, field, uri) {\n  let url = api_link + uri;\n  let data = '{\"' + field + '\":\"' + to_change + '\"}';\n  const response = await fetch(url, {\n    method: 'PATCH',\n    body: data,\n    headers: {\n      'Accept': 'application/json',\n      'Content-type': 'application/json',\n      'Authorization': 'Bearer ' + get_token()\n    }\n  });\n  console.log(data);\n  await update_user();\n  return response;\n}\n\nexport async function change_password(old_password, new_password) {\n  let url = api_link + \"/users/me/password\";\n  let data = {\n    newPassword: new_password,\n    oldPassword: old_password\n  };\n  let response = await fetch(url, {\n    method: 'PATCH',\n    body: JSON.stringify(data),\n    headers: {\n      'Accept': 'application/json',\n      'Content-type': 'application/json',\n      'Authorization': 'Bearer ' + get_token()\n    }\n  });\n  await update_user();\n  return response;\n}\nexport async function change_username(firstname, lastname) {\n  let url = api_link + \"/users/me\";\n  let data = {\n    firstname: firstname,\n    lastname: lastname\n  };\n  let response = await fetch(url, {\n    method: 'PUT',\n    body: JSON.stringify(data),\n    headers: {\n      'Accept': 'application/json',\n      'Content-type': 'application/json',\n      'Authorization': 'Bearer ' + get_token()\n    }\n  });\n  await update_user();\n  return response;\n}\nexport async function change_measures(id, name, height, weight) {\n  let url = api_link + \"/users/me/measures/\" + id;\n  let data = {\n    name: name,\n    height: height,\n    weight: weight\n  };\n  let response = await fetch(url, {\n    method: 'PUT',\n    body: JSON.stringify(data),\n    headers: {\n      'Accept': 'application/json',\n      'Content-type': 'application/json',\n      'Authorization': 'Bearer ' + get_token()\n    }\n  });\n  await update_user();\n  return response;\n}\nexport async function create_measures(name, height, weight) {\n  let url = api_link + \"/users/me/measures\";\n  let data = {\n    name: name,\n    height: height,\n    weight: weight\n  };\n  let response = await fetch(url, {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'Accept': 'application/json',\n      'Content-type': 'application/json',\n      'Authorization': 'Bearer ' + get_token()\n    }\n  });\n  await update_user();\n  return response;\n}\nexport async function delete_measures(id) {\n  let url = api_link + \"/users/me/measures/\" + id;\n  const response = await fetch(url, {\n    method: 'DELETE',\n    headers: {\n      'Accept': 'application/json',\n      'Content-type': 'application/json',\n      'Authorization': 'Bearer ' + get_token()\n    }\n  });\n  await update_user();\n  return response;\n}\nexport async function request_password_reset(email) {\n  let data = {\n    email: email\n  };\n  let url = api_link + \"/users/request-password-reset\";\n  const response = await fetch(url, {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'Accept': 'application/json',\n      'Content-type': 'application/json'\n    }\n  });\n  return response;\n}\nexport async function confirm_account(token) {\n  let data = {\n    token: token\n  };\n  let url = api_link + \"/users/confirm-account\";\n  const response = await fetch(url, {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'Accept': 'application/json',\n      'Content-type': 'application/json'\n    }\n  });\n  await update_user();\n  return response;\n}\nexport async function resetPassword(token) {\n  let data = {\n    token: token\n  };\n  let url = api_link + \"/users/confirm-account\";\n  const response = await fetch(url, {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'Accept': 'application/json',\n      'Content-type': 'application/json'\n    }\n  });\n  await update_user();\n  return response;\n}\nexport async function get_merchants() {\n  let url = api_link + \"/merchants\";\n  const response = await fetch(url, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-type': 'application/json'\n    }\n  });\n  return response.json();\n}\nexport async function get_merchant(id) {\n  let url = api_link + \"/merchants/\" + id;\n  const response = await fetch(url, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-type': 'application/json'\n    }\n  });\n  return response.json();\n}\nexport async function authorize_merchant(id) {\n  let url = `${api_link}/users/me/merchants/${id}/authorize`;\n  console.log(url);\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer ' + get_token()\n    }\n  });\n  await update_user();\n  return response;\n}\nexport async function revoke_merchant(id) {\n  let url = `${api_link}/users/me/merchants/${id}/revoke`;\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Bearer ' + get_token()\n    }\n  });\n  await update_user();\n  return response;\n}\nexport async function delete_account() {\n  let url = api_link + \"/users/me\";\n  const response = await fetch(url, {\n    method: 'DELETE',\n    headers: {\n      'Accept': 'application/json',\n      'Content-type': 'application/json',\n      'Authorization': 'Bearer ' + get_token()\n    }\n  });\n  await update_user();\n  return response;\n}\nexport const get_user = () => JSON.parse(localStorage.getItem('user'));\nexport const get_user_merchants = () => {\n  JSON.parse(localStorage.getItem('/users/me/merchants/:id/authorize')); //{numbers.map((number) =>\n  //    <ListItem key={number.toString()}\n  //              value={number} />\n  //  )}\n};\nexport const get_measure = (index = 0) => get_nb_measures() ? get_user().measures[index] : [];\nexport const get_measures = () => get_user().measures;\nexport const get_nb_measures = () => get_user().measures.length;\nexport const get_token = () => localStorage.getItem('token');\nexport const change_firstname = firstname => change(firstname, \"firstname\", \"/users/me/firstname\");\nexport const change_lastname = lastname => change(lastname, \"lastname\", \"/users/me/lastname\");\nexport const change_measure_name = async (id, name) => await change(name, \"name\", \"/users/me/measures/\" + id + \"/name\");\nexport const change_measure_height = async (id, height) => await change(height, \"height\", \"/users/me/measures/\" + id + \"/height\");\nexport const change_measure_weight = async (id, weight) => await change(weight, \"weight\", \"/users/me/measures/\" + id + \"/weight\");\nexport const logout = () => {\n  localStorage.clear(); //popupDisplay('center', 1500, 'success', 'Déconnexion réussie');\n  //setTimeout(function() {history.push(\"/\")},1500);\n};","map":{"version":3,"sources":["/home/haan/application-web/touch31_app/src/components/tools/ApiCalls.js"],"names":["React","useState","api_link","signup","state","url","data","firstname","lastname","email","password","response","fetch","method","body","JSON","stringify","headers","status","login","responseToJson","json","token","accessToken","localStorage","setItem","update_user","getItem","user","console","log","change","to_change","field","uri","get_token","change_password","old_password","new_password","newPassword","oldPassword","change_username","change_measures","id","name","height","weight","create_measures","delete_measures","request_password_reset","confirm_account","resetPassword","get_merchants","get_merchant","authorize_merchant","revoke_merchant","delete_account","get_user","parse","get_user_merchants","get_measure","index","get_nb_measures","measures","get_measures","length","change_firstname","change_lastname","change_measure_name","change_measure_height","change_measure_weight","logout","clear"],"mappings":"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","sourcesContent":["/*\n *\n *  *  Copyright (C) Thirty One, Inc - All Rights Reserved\n *  *  * Unauthorized copying of this file, via any medium is strictly prohibited\n *  *  * Proprietary and confidential\n *  *  * Written by Thirty One <thirtyoneparis@gmail.com>, 2020\n *  *\n *\n */\n\nimport React, {useState} from 'react';\nimport { api_link } from '../../globals';\n\nexport async function signup(state) {\n\n\tconst url= api_link + '/auth/signup';\n\tlet data = {\n\t\tfirstname: state.firstname,\n\t\tlastname: state.lastname,\n\t\temail: state.email,\n\t\tpassword: state.password,\n\t}\n        const response = await fetch(url, {\n\t\tmethod:'POST',\n\t\tbody: JSON.stringify(data),\n\t\theaders: {\n\t\t\t'Accept': 'application/json',\n\t\t\t'Content-type': 'application/json'\n\t\t}\n\t})\n\treturn response.status;\n}\n\nexport async function login(email, password) {\n    const url = api_link + '/auth/signin';\n    let data = {\n        email: email,\n        password: password\n    }\n\n    const response = await fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n            'Accept': 'application/json',\n            'Content-type': 'application/json'\n        }\n    });\n\n    const responseToJson = await response.json();\n    let token = responseToJson.accessToken;\n\n    if (token) {\n        localStorage.setItem('token', token);\n        localStorage.setItem('isLoggedIn', true);\n\t    update_user();\n    }\n    return token\n}\n\nexport async function update_user() {\n\tlet token = localStorage.getItem('token');\n\n\n\tconst response = await fetch(api_link + \"/users/me\", {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t'accept': 'application/json',\n\t\t\t'Authorization': 'Bearer ' + token\n\t\t}\n\t});\n\n\tconst responseToJson = await response.json();\n\tlet user = responseToJson;\n\tif (user) {\n\t\tlocalStorage.setItem('user', JSON.stringify(user));\n\t} else {\n\t\tconsole.log(\"an error occured\");\n\t}\n\tconsole.log(\"user changed\")\n\treturn response;\n}\n\n\nasync function change(to_change, field, uri) {\n\tlet url = api_link + uri;\n\tlet data = '{\"' + field + '\":\"' + to_change + '\"}'\n\tconst response = await fetch(url, {\n\t\tmethod: 'PATCH',\n\t\tbody: data,\n\t\theaders: {\n\t\t\t'Accept': 'application/json',\n\t\t\t'Content-type': 'application/json',\n\t\t\t'Authorization': 'Bearer ' + get_token()\n\t\t}\n\t})\n\tconsole.log(data);\n\tawait update_user();\n\treturn response;\n}\n\nexport async function change_password(old_password, new_password) {\n\tlet url = api_link + \"/users/me/password\";\n\tlet data = {\n\t\tnewPassword: new_password,\n\t\toldPassword: old_password\n\t}\n\tlet response = await fetch(url, {\n\t\tmethod: 'PATCH',\n\t\tbody: JSON.stringify(data),\n\t\theaders: {\n\t\t\t'Accept': 'application/json',\n\t\t\t'Content-type': 'application/json',\n\t\t\t'Authorization': 'Bearer ' + get_token()\n\t\t}\n\t})\n\tawait update_user();\n\treturn response\n}\n\nexport async function change_username(firstname, lastname) {\n\tlet url = api_link + \"/users/me\";\n\tlet data = {\n\t\tfirstname: firstname,\n\t\tlastname: lastname\n\t}\n\tlet response = await fetch(url, {\n\t\tmethod: 'PUT',\n\t\tbody: JSON.stringify(data),\n\t\theaders: {\n\t\t\t'Accept': 'application/json',\n\t\t\t'Content-type': 'application/json',\n\t\t\t'Authorization': 'Bearer ' + get_token()\n\t\t}\n\t})\n\t\n\tawait update_user();\n\treturn response\n}\n\nexport async function change_measures(id, name, height, weight) {\n\tlet url = api_link + \"/users/me/measures/\" + id;\n\tlet data = {\n\t\tname: name,\n\t\theight: height,\n\t\tweight: weight,\n\t}\n\tlet response = await fetch(url, {\n\t\tmethod: 'PUT',\n\t\tbody: JSON.stringify(data),\n\t\theaders: {\n\t\t\t'Accept': 'application/json',\n\t\t\t'Content-type': 'application/json',\n\t\t\t'Authorization': 'Bearer ' + get_token()\n\t\t}\n\t})\n\tawait update_user();\n\treturn response\n}\n\n\n\nexport async function create_measures(name, height, weight) {\n\tlet url = api_link + \"/users/me/measures\";\n\tlet data = {\n\t\tname: name,\n\t\theight: height,\n\t\tweight: weight\n\t}\n\tlet response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify(data),\n\t\theaders: {\n\t\t\t'Accept': 'application/json',\n\t\t\t'Content-type': 'application/json',\n\t\t\t'Authorization': 'Bearer ' + get_token()\n\t\t}\n\t})\n\tawait update_user();\n\treturn response\n}\n\nexport async function delete_measures(id) {\n\tlet url = api_link + \"/users/me/measures/\" + id;\n\tconst response = await fetch(url, {\n\t\tmethod: 'DELETE',\n\t\theaders: {\n\t\t\t'Accept': 'application/json',\n\t\t\t'Content-type': 'application/json',\n\t\t\t'Authorization': 'Bearer ' + get_token()\n\t\t}\n\t})\n\tawait update_user();\n\treturn response;\n}\n\nexport async function request_password_reset(email) {\n\tlet data = {\n\t\temail: email\n\t}\n\tlet url =  api_link + \"/users/request-password-reset\";\n\tconst response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify(data),\n\t\theaders: {\n\t\t\t'Accept': 'application/json',\n\t\t\t'Content-type': 'application/json',\n\t\t}\n\t})\n\treturn response;\n}\n\nexport async function confirm_account(token) {\n\tlet data = {\n\t\ttoken: token\n\t}\n\tlet url = api_link + \"/users/confirm-account\";\n\tconst response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify(data),\n\t\theaders: {\n\t\t\t'Accept': 'application/json',\n\t\t\t'Content-type': 'application/json',\n\t\t}\n\t})\n\tawait update_user();\n\treturn response;\n}\n\nexport async function resetPassword(token) {\n\tlet data = {\n\t\ttoken: token\n\t}\n\tlet url = api_link + \"/users/confirm-account\";\n\tconst response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify(data),\n\t\theaders: {\n\t\t\t'Accept': 'application/json',\n\t\t\t'Content-type': 'application/json',\n\t\t}\n\t})\n\tawait update_user();\n\treturn response;\n}\n\nexport async function get_merchants() {\n\tlet url = api_link + \"/merchants\";\n\tconst response = await fetch(url, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t'Accept': 'application/json',\n\t\t\t'Content-type': 'application/json',\n\t\t}\n\t})\n\treturn response.json();\n}\n\nexport async function get_merchant(id) {\n\tlet url = api_link + \"/merchants/\" + id;\n\tconst response = await fetch(url, {\n\t\tmethod: 'GET',\n\t\theaders: {\n\t\t\t'Accept': 'application/json',\n\t\t\t'Content-type': 'application/json',\n\t\t}\n\t})\n\treturn response.json();\n}\n\nexport async function authorize_merchant(id) {\n\tlet url = `${api_link}/users/me/merchants/${id}/authorize`\n\t\n\tconsole.log(url)\n\tconst response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Accept': 'application/json',\n\t\t\t'Authorization': 'Bearer ' + get_token()\n\t\t}\n\t})\n\tawait update_user();\n\treturn response;\n}\n\nexport async function revoke_merchant(id) {\n\tlet url = `${api_link}/users/me/merchants/${id}/revoke`\n\tconst response = await fetch(url, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Accept': 'application/json',\n\t\t\t'Authorization': 'Bearer ' + get_token()\n\t\t}\n\t})\n\tawait update_user();\n\treturn response;\n}\n\nexport async function delete_account() {\n\tlet url = api_link + \"/users/me\";\n\tconst response = await fetch(url, {\n\t\tmethod: 'DELETE',\n\t\theaders: {\n\t\t\t'Accept': 'application/json',\n\t\t\t'Content-type': 'application/json',\n\t\t\t'Authorization': 'Bearer ' + get_token()\n\t\t}\n\t})\n\tawait update_user();\n\treturn response;\n}\n\nexport const get_user = () => JSON.parse(localStorage.getItem('user'));\nexport const get_user_merchants = () => {\n\tJSON.parse(localStorage.getItem('/users/me/merchants/:id/authorize'));\n\t//{numbers.map((number) =>\n    //    <ListItem key={number.toString()}\n    //              value={number} />\n    //  )}\n}\nexport const get_measure = (index = 0) => get_nb_measures() ? get_user().measures[index] : [];\nexport const get_measures = () => get_user().measures;\nexport const get_nb_measures = () => get_user().measures.length;\nexport const get_token = () => localStorage.getItem('token');\n\nexport const change_firstname = (firstname) => change(firstname, \"firstname\", \"/users/me/firstname\");\nexport const change_lastname = (lastname) => change(lastname, \"lastname\", \"/users/me/lastname\");\nexport const change_measure_name = async (id, name) => await change(name, \"name\", \"/users/me/measures/\" + id + \"/name\");\nexport const change_measure_height = async (id, height) => await change(height, \"height\", \"/users/me/measures/\" + id + \"/height\");\nexport const change_measure_weight = async (id, weight) => await change(weight, \"weight\", \"/users/me/measures/\" + id + \"/weight\");\nexport const logout = () => {\n\tlocalStorage.clear();\n\t//popupDisplay('center', 1500, 'success', 'Déconnexion réussie');\n\t//setTimeout(function() {history.push(\"/\")},1500);\n}\n\n"]},"metadata":{},"sourceType":"module"}