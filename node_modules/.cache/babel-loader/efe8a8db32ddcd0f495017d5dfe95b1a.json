{"ast":null,"code":"var _jsxFileName = \"/home/haan/moment-test/src/components/Pages/Films.js\";\nimport React, { Component } from 'react';\nimport { request_token, request_pages } from '../tools/ApiCalls';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport Container from '@material-ui/core/Container';\nimport Spinner from '../Spinner';\nimport Grid from '@material-ui/core/Grid';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport movieCard from '../movieCard';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  movieColumn: {\n    marginBottom: 20\n  }\n}));\n\nclass Films extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      hasMoreItems: true,\n      totalPages: 0,\n      pages: 1,\n      language: \"fr-FR\"\n    };\n  }\n\n  showItems() {\n    const {\n      style\n    } = this.props;\n    return this.state.data.map(display =>\n    /*#__PURE__*/\n    React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      sm: 3,\n      key: display.id,\n      spacing: 3,\n      className: style.movieColumn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(CardActionArea, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(CardMedia, {\n      component: \"img\",\n      alt: display.original_title,\n      image: \"https://image.tmdb.org/t/p/w500\" + display.poster_path,\n      title: display.original_title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    },\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h7\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 29\n      }\n    }, display.original_title),\n    /*#__PURE__*/\n    React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, \"Nombre de visionnages: \", display.popularity, \" fois\"))))));\n  }\n\n  async getTotalPages() {\n    this.state.totalPages = await request_pages();\n  }\n\n  async loadMore() {\n    if (this.state.pages === 4\n    /*this.state.totalPages*/\n    ) {\n        this.setState({\n          hasMoreItems: false\n        });\n      } else {\n      const response = await request_token(\"fr-FR\", this.state.pages);\n      setTimeout(() => {\n        const add = this.state.data;\n        const to_add = add.concat(response);\n        this.setState({\n          data: to_add\n        });\n      }, 2000);\n    }\n\n    this.state.pages += 1;\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return (\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        loader: this.getTotalPages(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Container, {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(InfiniteScroll, {\n        loadMore: this.loadMore.bind(this),\n        hasMore: this.state.hasMoreItems,\n        loader:\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          className: \"loader\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 33\n          }\n        }, \" Loading... \"),\n        useWindow: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }\n      },\n      /*#__PURE__*/\n      React.createElement(Grid, {\n        container: true,\n        spacin: 1,\n        className: classes.bodyContent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }\n      }, this.showItems(), \" \")), \" \"))\n    );\n  }\n\n}\n\nexport default withStyles(useStyles)(Films);","map":{"version":3,"sources":["/home/haan/moment-test/src/components/Pages/Films.js"],"names":["React","Component","request_token","request_pages","makeStyles","withStyles","InfiniteScroll","Container","Spinner","Grid","Dialog","MuiDialogTitle","MuiDialogContent","MuiDialogActions","IconButton","CloseIcon","Typography","Card","CardActionArea","CardActions","CardContent","CardMedia","movieCard","useStyles","theme","root","movieColumn","marginBottom","Films","constructor","props","state","data","hasMoreItems","totalPages","pages","language","showItems","style","map","display","id","original_title","poster_path","popularity","getTotalPages","loadMore","setState","response","setTimeout","add","to_add","concat","render","classes","bind","bodyContent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { request_token, request_pages } from '../tools/ApiCalls';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport Container from '@material-ui/core/Container';\nimport Spinner from '../Spinner'\nimport Grid from '@material-ui/core/Grid';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport movieCard from '../movieCard'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n\n    },\n    movieColumn: {\n        marginBottom: 20\n    }\n}));\n\nclass Films extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            hasMoreItems: true,\n            totalPages: 0,\n            pages: 1,\n            language: \"fr-FR\",\n        };\n\n    }\n\n    showItems() {\n        const { style } = this.props;\n        return this.state.data.map(display => (\n            <Grid item xs={3} sm={3} key={display.id} spacing={3} className={style.movieColumn}>\n                <Card>\n                    <CardActionArea>\n                        <CardMedia\n                            component=\"img\"\n                            alt={display.original_title}\n                            image={\"https://image.tmdb.org/t/p/w500\" + display.poster_path}\n                            title={display.original_title}\n                        />\n                        <CardContent >\n                            <Typography gutterBottom variant=\"h7\" component=\"h2\" >\n                                {display.original_title}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                {\"Nombre de visionnages: \"}\n                                {display.popularity}\n                                {\" fois\"}\n                            </Typography>\n                        </CardContent>\n                    </CardActionArea>\n                </Card>\n            </Grid>\n\n\n        ))\n    }\n\n    async getTotalPages() {\n        this.state.totalPages = await request_pages();\n    }\n\n    async loadMore() {\n        if (this.state.pages === 4 /*this.state.totalPages*/) {\n            this.setState({ hasMoreItems: false });\n        } else {\n            const response = await request_token(\"fr-FR\", this.state.pages);\n            setTimeout(() => {\n                const add = this.state.data;\n                const to_add = add.concat(response);\n                this.setState({ data: to_add })\n            }, 2000);\n        }\n        this.state.pages += 1\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n\n            <div\n                loader={this.getTotalPages()}\n            >\n                <Container className={classes.root}>\n\n                    <InfiniteScroll\n                        loadMore={this.loadMore.bind(this)}\n                        hasMore={this.state.hasMoreItems}\n                        loader={<div className=\"loader\"> Loading... </div>}\n                        useWindow={false}\n                    >\n                        <Grid container spacin={1} className={classes.bodyContent}>\n                            {this.showItems()}{\" \"}\n                        </Grid>\n                    </InfiniteScroll>{\" \"}\n\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(Films);"]},"metadata":{},"sourceType":"module"}