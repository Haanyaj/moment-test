{"ast":null,"code":"var _jsxFileName = \"/home/haan/moment-test/src/components/Pages/Movie.js\";\nimport React, { useState, useRef, useCallback } from 'react';\nexport default function App() {\n  const [query, setQuery] = useState('');\n  const [pageNumber, setPageNumber] = useState(1);\n  const {\n    books,\n    hasMore,\n    loading,\n    error\n  } = useBookSearch(query, pageNumber);\n  const observer = useRef();\n  const lastBookElementRef = useCallback(node => {\n    if (loading) return;\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setPageNumber(prevPageNumber => prevPageNumber + 1);\n      }\n    });\n    if (node) observer.current.observe(node);\n  }, [loading, hasMore]);\n\n  function handleSearch(e) {\n    setQuery(e.target.value);\n    setPageNumber(1);\n  }\n\n  return (\n    /*#__PURE__*/\n    React.createElement(React.Fragment, null,\n    /*#__PURE__*/\n    React.createElement(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: handleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }), books.map((book, index) => {\n      if (books.length === index + 1) {\n        return (\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            ref: lastBookElementRef,\n            key: book,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 18\n            }\n          }, book)\n        );\n      } else {\n        return (\n          /*#__PURE__*/\n          React.createElement(\"div\", {\n            key: book,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 18\n            }\n          }, book)\n        );\n      }\n    }),\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, loading && 'Loading...'),\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, error && 'Error'))\n  );\n}","map":{"version":3,"sources":["/home/haan/moment-test/src/components/Pages/Movie.js"],"names":["React","useState","useRef","useCallback","App","query","setQuery","pageNumber","setPageNumber","books","hasMore","loading","error","useBookSearch","observer","lastBookElementRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","handleSearch","e","target","value","map","book","index","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,WAAlC,QAAqD,OAArD;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,CAAD,CAA5C;AAEA,QAAM;AACJQ,IAAAA,KADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA;AAJI,MAKFC,aAAa,CAACR,KAAD,EAAQE,UAAR,CALjB;AAOA,QAAMO,QAAQ,GAAGZ,MAAM,EAAvB;AACA,QAAMa,kBAAkB,GAAGZ,WAAW,CAACa,IAAI,IAAI;AAC7C,QAAIL,OAAJ,EAAa;AACb,QAAIG,QAAQ,CAACG,OAAb,EAAsBH,QAAQ,CAACG,OAAT,CAAiBC,UAAjB;AACtBJ,IAAAA,QAAQ,CAACG,OAAT,GAAmB,IAAIE,oBAAJ,CAAyBC,OAAO,IAAI;AACrD,UAAIA,OAAO,CAAC,CAAD,CAAP,CAAWC,cAAX,IAA6BX,OAAjC,EAA0C;AACxCF,QAAAA,aAAa,CAACc,cAAc,IAAIA,cAAc,GAAG,CAApC,CAAb;AACD;AACF,KAJkB,CAAnB;AAKA,QAAIN,IAAJ,EAAUF,QAAQ,CAACG,OAAT,CAAiBM,OAAjB,CAAyBP,IAAzB;AACX,GATqC,EASnC,CAACL,OAAD,EAAUD,OAAV,CATmC,CAAtC;;AAWA,WAASc,YAAT,CAAsBC,CAAtB,EAAyB;AACvBnB,IAAAA,QAAQ,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACAnB,IAAAA,aAAa,CAAC,CAAD,CAAb;AACD;;AAED;AAAA;AACE;AAAA;AACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAEH,KAA1B;AAAiC,MAAA,QAAQ,EAAEmB,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGf,KAAK,CAACmB,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1B,UAAIrB,KAAK,CAACsB,MAAN,KAAiBD,KAAK,GAAG,CAA7B,EAAgC;AAC9B;AAAA;AAAO;AAAK,YAAA,GAAG,EAAEf,kBAAV;AAA8B,YAAA,GAAG,EAAEc,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA0CA,IAA1C;AAAP;AACD,OAFD,MAEO;AACL;AAAA;AAAO;AAAK,YAAA,GAAG,EAAEA,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAiBA,IAAjB;AAAP;AACD;AACF,KANA,CAFH;AAAA;AASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMlB,OAAO,IAAI,YAAjB,CATF;AAAA;AAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMC,KAAK,IAAI,OAAf,CAVF;AADF;AAcD","sourcesContent":["import React, { useState, useRef, useCallback } from 'react'\n\nexport default function App() {\n  const [query, setQuery] = useState('')\n  const [pageNumber, setPageNumber] = useState(1)\n\n  const {\n    books,\n    hasMore,\n    loading,\n    error\n  } = useBookSearch(query, pageNumber)\n\n  const observer = useRef()\n  const lastBookElementRef = useCallback(node => {\n    if (loading) return\n    if (observer.current) observer.current.disconnect()\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && hasMore) {\n        setPageNumber(prevPageNumber => prevPageNumber + 1)\n      }\n    })\n    if (node) observer.current.observe(node)\n  }, [loading, hasMore])\n\n  function handleSearch(e) {\n    setQuery(e.target.value)\n    setPageNumber(1)\n  }\n\n  return (\n    <>\n      <input type=\"text\" value={query} onChange={handleSearch}></input>\n      {books.map((book, index) => {\n        if (books.length === index + 1) {\n          return <div ref={lastBookElementRef} key={book}>{book}</div>\n        } else {\n          return <div key={book}>{book}</div>\n        }\n      })}\n      <div>{loading && 'Loading...'}</div>\n      <div>{error && 'Error'}</div>\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}